{"version":3,"sources":["account/components/LoginAccountInput/index.js","account/components/DisableAccountTip/index.js","account/components/DisableAccountTip/index.module.scss","account/routeComponents/ForgetPassword/index.module.scss","account/routeComponents/ForgetPassword/index.js"],"names":["DEFAULT","TIP_LEVEL_MAP","ERROR","ACCOUNT","INPUT_TYPE_MAP","LoginAccountInput","props","_this","Object","_Users_LiuXiao_workfiled_embedded_web_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_LiuXiao_workfiled_embedded_web_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_LiuXiao_workfiled_embedded_web_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","onBlur","state","account","tipLevel","verifyTip","onFocus","bind","_Users_LiuXiao_workfiled_embedded_web_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","onChange","nextProps","inputType","resetInput","setState","ev","value","target","params","promise","_this2","_this$props","accountWasDisableTip","forgetCheck","identity","checkIdentity","get","REGISTRATION_CHECK","then","Promise","reject","catch","data","status","getValue","COMMON_ERROR_TIPS","ACCOUNT_NOT_EXISTED","Error","INFO_INCOMPELETE","finally","_this$state","placeHolder","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","styles","loginAccountInput","_BasicInput__WEBPACK_IMPORTED_MODULE_9__","INPUT_ACCOUNT","Component","defaultProps","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_config_copywriting__WEBPACK_IMPORTED_MODULE_1__","_config_pageUrl__WEBPACK_IMPORTED_MODULE_2__","_utils_copywritingHelper__WEBPACK_IMPORTED_MODULE_3__","_index_module_scss__WEBPACK_IMPORTED_MODULE_4__","_index_module_scss__WEBPACK_IMPORTED_MODULE_4___default","DisableAccountTip","copywritingList","copywritingHelper","ACCOUNT_WAS_DISABLED","map","item","index","text","reactivateLink","href","REACTIVATION_URL","key","module","exports","forgetPassword","descTitle","sendMessage","canNotGetVercodeWrapper","resetBtn","checkboxWrapper","passwordInputWrapper","passwordBlock","linkWrapper","helpWrapper","VERCODE","INPUT_DEFAULT","RESET_STEP","ACCOUNT_CREATE_PURPOSE","FORGET_PASSWORD","INPUT_CODE","INPUT_PASSWORD","ERROR_CODE_VALUE_INVALID","ERROR_CODE_VALUE_NOT_PRESENT","ONE_TIME_PASSWORD_INVALID","isAccountCheckNetRequest","isSendEmailNetRequest","isPreResetNetRequest","ForgetPassword","accountTipLevel","accountVerifyTip","vercode","vercodeTipLevel","vercodeVerifyTip","checked","requesting","resetStep","phoneNumber","vercodeTimeRemainToSave","vercodeTimeRemainToGet","onAccountInputChange","_ref","checkAccount","refs","accountInput","verifyInput","accountType","saveAccountForSmsHelpPage","vercodeInput","getVercode","sendEmail","err","console","log","checkVercode","speechSessionId","jsCookie","sessionId","smsSessionId","otp","timeStamp","Date","getTime","recipient","sig","utils","getSignByParam","PRE_RESET_PASSWORD","_Users_LiuXiao_workfiled_embedded_web_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","config","baseUrl","url","concat","window","location","errors","length","code","INVALID_VERIFICATION_CODE","error","verifyAccountAndPassword","resolve","updateSmsSessionId","set","expires","remove","onVercodeTimeChange","time","_saveBindLoginInfo","saveBindLoginInfo","_Users_LiuXiao_workfiled_embedded_web_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","SEND_EMAIL","identifier","md5","reqKey","dbm","confirm","content","EMAIL_SENT","operates","history","push","redirectToTwoFactorHelper","redirectToCodeTips","inputAccount","_this2$state","react__WEBPACK_IMPORTED_MODULE_7___default","_components_DisableAccountTip__WEBPACK_IMPORTED_MODULE_24__","accountInputWrapper","FORGET_DESC","_components_LoginAccountInput__WEBPACK_IMPORTED_MODULE_23__","ref","accountWasDisableHooks","accountWasDisable","accountNotExistedHooks","accountNotExisted","FORGET_INPUT","_components_BasicButton__WEBPACK_IMPORTED_MODULE_22__","RESET_PASSWORD","buttonWrapperClass","onClick","loading","inputVercode","_this2$state2","inputWrapper","AREADY_SEND","_components_VercodeInput__WEBPACK_IMPORTED_MODULE_25__","verify","updateCountState","NEXT_STEP","CAN_NOT_GET_VERCODE","match","path","children","getSubRoutesByPath","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","component","mapDispatchToProps","info","connect","bindRegistrationInfo"],"mappings":"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","file":"static/js/ForgetPassword.d2b5493f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { get } from 'axios';\nimport { get as getValue } from 'lodash-es';\nimport BasicInput from '../BasicInput';\nimport { transformObjectToArray } from '../../utils/commonUtils';\nimport {\n  INPUT_TYPE_MAP,\n  TIP_LEVEL_MAP,\n} from '../../config/propsPermittedValueMap';\nimport {\n  COMMON_ERROR_TIPS,\n  INPUT_ACCOUNT,\n  INFO_INCOMPELETE,\n  ACCOUNT_NOT_EXISTED,\n} from '../../config/copywriting';\nimport { REGISTRATION_CHECK } from '../../config/interfaceUrl';\n\nimport styles from './index.module.scss';\n\nconst LEVEL_LIST = transformObjectToArray(TIP_LEVEL_MAP);\nconst INPUT_TYPE_LIST = transformObjectToArray(INPUT_TYPE_MAP);\nconst { DEFAULT, ERROR } = TIP_LEVEL_MAP;\nconst { ACCOUNT } = INPUT_TYPE_MAP;\n\nclass LoginAccountInput extends Component {\n  static propTypes = {\n    account: PropTypes.string,\n    resetInput: PropTypes.bool,\n    verifyTip: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n    accountWasDisableTip: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.string,\n    ]),\n    tipLevel: PropTypes.oneOf(LEVEL_LIST),\n    inputType: PropTypes.oneOf(INPUT_TYPE_LIST),\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n    forgetCheck: PropTypes.bool, // 忘记密码模块使用时返回检查状态\n    placeHolder: PropTypes.string,\n  };\n\n  static defaultProps = {\n    account: '',\n    resetInput: false,\n    accountWasDisableTip: '',\n    onChange: () => {},\n    onBlur: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      tipLevel: DEFAULT,\n      verifyTip: '',\n    };\n    this.onFocus = this.onFocus.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { verifyTip, tipLevel, inputType, account, resetInput } = nextProps;\n    if (inputType === ACCOUNT) {\n      this.setState({\n        verifyTip,\n        tipLevel,\n      });\n    }\n    if (resetInput) {\n      this.setState({\n        account,\n      });\n    }\n  }\n\n  onFocus() {\n    this.setState({\n      tipLevel: DEFAULT,\n      verifyTip: '',\n    });\n  }\n\n  onChange(ev) {\n    const {\n      target: { value },\n    } = ev;\n    const { onChange } = this.props;\n    this.setState({\n      account: value,\n    });\n    onChange(ev);\n  }\n\n  onBlur = () => {\n    this.props.onBlur();\n  }\n\n  verifyInput() {\n    const { account } = this.state;\n    const {\n      accountWasDisableTip,\n      forgetCheck,\n    } = this.props;\n    let verifyTip = '';\n    let tipLevel = '';\n    let params;\n    let promise;\n    if (!account) {\n      tipLevel = ERROR;\n      verifyTip = INFO_INCOMPELETE;\n      promise = Promise.reject(new Error(verifyTip));\n    } else {\n      params = {\n        identity: account,\n        checkIdentity: '',\n      };\n      promise = get(REGISTRATION_CHECK, {\n        params,\n      })\n        .then(() => {\n          // 此情况说明帐户不存在\n          return Promise.reject();\n        })\n        .catch(data => {\n          const status = getValue(data, 'response.status');\n          if (!data) {\n            tipLevel = ERROR;\n            verifyTip = ACCOUNT_NOT_EXISTED;\n          } else {\n            switch (status) {\n              case 409:\n                tipLevel = DEFAULT;\n                verifyTip = '';\n                break;\n              case 412:\n                tipLevel = ERROR;\n                verifyTip = accountWasDisableTip;\n                break;\n              default:\n                tipLevel = ERROR;\n                verifyTip = COMMON_ERROR_TIPS;\n                break;\n            }\n          }\n          if (tipLevel === DEFAULT) {\n            if (forgetCheck) return getValue(data, 'response.data');;\n            return account;\n          }\n          return Promise.reject(new Error(verifyTip));\n        });\n    }\n    return promise.finally(() => {\n      this.setState({\n        verifyTip,\n        tipLevel,\n      });\n    });\n  }\n\n  render() {\n    const { tipLevel, verifyTip, account } = this.state;\n    const { placeHolder } = this.props;\n    return (\n      <div className={styles.loginAccountInput}>\n        <BasicInput\n          placeHolder={placeHolder || INPUT_ACCOUNT}\n          tipLevel={tipLevel}\n          value={account}\n          onFocus={this.onFocus}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n        >\n          {verifyTip}\n        </BasicInput>\n      </div>\n    );\n  }\n}\n\nexport default LoginAccountInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ACCOUNT_WAS_DISABLED } from '../../config/copywriting';\nimport { REACTIVATION_URL } from '../../config/pageUrl';\nimport copywritingHelper from '../../utils/copywritingHelper';\n\nimport styles from './index.module.scss';\n\nconst DisableAccountTip = props => {\n  const copywritingList = copywritingHelper(ACCOUNT_WAS_DISABLED);\n  const { account } = props;\n  return (\n    <span>\n      {copywritingList.map((item, index) => {\n        let text = '';\n        switch (index) {\n          case 1:\n            text = account;\n            break;\n          case 3:\n            text = (\n              <a\n                className={styles.reactivateLink}\n                href={REACTIVATION_URL}\n                key={index}\n              >\n                {item}\n              </a>\n            );\n            break;\n          default:\n            text = item;\n        }\n        return text;\n      })}\n    </span>\n  );\n};\n\nDisableAccountTip.propTypes = {\n  account: PropTypes.string.isRequired,\n};\n\nexport default DisableAccountTip;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reactivateLink\":\"DisableAccountTip_reactivateLink__2mLSq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgetPassword\":\"ForgetPassword_forgetPassword__1SxVn\",\"descTitle\":\"ForgetPassword_descTitle__3csaV\",\"sendMessage\":\"ForgetPassword_sendMessage__9BI1j\",\"canNotGetVercodeWrapper\":\"ForgetPassword_canNotGetVercodeWrapper__2YAdK\",\"resetBtn\":\"ForgetPassword_resetBtn__wjFfK\",\"checkboxWrapper\":\"ForgetPassword_checkboxWrapper__KgQvF\",\"passwordInputWrapper\":\"ForgetPassword_passwordInputWrapper__3XDgt\",\"passwordBlock\":\"ForgetPassword_passwordBlock__e7PW6\",\"linkWrapper\":\"ForgetPassword_linkWrapper__3QiFL\",\"helpWrapper\":\"ForgetPassword_helpWrapper__3ZZuA\"};","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport jsCookie from 'js-cookie';\nimport { connect } from 'react-redux';\nimport md5 from 'js-md5';\nimport { get } from 'axios';\nimport { get as getValue } from 'lodash-es';\n\nimport config from '../../utils/config';\nimport utils from '../../utils/utils';\nimport { SEND_EMAIL, PRE_RESET_PASSWORD } from '../../config/interfaceUrl';\nimport {\n    TIP_LEVEL_MAP,\n    INPUT_TYPE_MAP,\n    ACCOUNT_CREATE_PURPOSE\n  } from '../../config/propsPermittedValueMap';\nimport { saveBindLoginInfo } from '../../store/actions';\nimport { getSubRoutesByPath } from '../../utils/routeUtils';\n\nimport {\n    FORGET_DESC,\n    RESET_PASSWORD,\n    NEXT_STEP,\n    AREADY_SEND,\n    INVALID_VERIFICATION_CODE,\n    EMAIL_SENT,\n    CAN_NOT_GET_VERCODE,\n    FORGET_INPUT,\n} from '../../config/copywriting';\n\nimport CanNotGetVercode from '../../components/CanNotGetVercode';\nimport BasicButton from '../../components/BasicButton';\nimport LoginAccountInput from '../../components/LoginAccountInput';\nimport DisableAccountTip from '../../components/DisableAccountTip';\nimport VercodeInput from '../../components/VercodeInput';\nimport confirm from '../../components/Confirm/Confirm';\n\nimport styles from './index.module.scss';\nimport copywritingHelper from '../../utils/copywritingHelper';\n\nconst { DEFAULT, ERROR } = TIP_LEVEL_MAP;\nconst { VERCODE, DEFAULT: INPUT_DEFAULT } = INPUT_TYPE_MAP;\nconst { FORGET_PASSWORD } = ACCOUNT_CREATE_PURPOSE;\n\n// 重置步骤\nconst RESET_STEP = {\n    INPUT_ACCOUNT: 0,\n    INPUT_CODE: 1,\n    INPUT_PASSWORD: 2,\n}\n\nconst ERROR_CODE_VALUE_INVALID=\"reset.password.pre.signature.error\";\nconst ERROR_CODE_VALUE_NOT_PRESENT=\"validation.required.valueNotPresent\";\nconst ONE_TIME_PASSWORD_INVALID = \"one.time.password.invalid\";\n\nlet isAccountCheckNetRequest = false;\nlet isSendEmailNetRequest = false;\nlet isPreResetNetRequest = false;\n\nclass ForgetPassword extends Component {\n    state = {\n        account: '',\n        accountTipLevel: DEFAULT,\n        accountVerifyTip: '',\n        vercode: '',\n        vercodeTipLevel: DEFAULT,\n        vercodeVerifyTip: '',\n        inputType: INPUT_DEFAULT,\n        checked: false,\n        requesting: false,\n        resetInput: false,\n        resetStep: RESET_STEP.INPUT_ACCOUNT,\n        phoneNumber: '', // 已发送至电话号码\n        vercodeTimeRemainToSave: 0,\n        vercodeTimeRemainToGet: 0,\n    }\n\n    onAccountInputChange = ({ target: { value } }) => {\n        this.setState({\n            account: value,\n        });\n    }\n\n    checkAccount = () => {\n        if (isAccountCheckNetRequest) {\n            return;\n        }\n        isAccountCheckNetRequest = true;\n        this.refs.accountInput.verifyInput()\n            .then((data) => {\n                const { accountType, phoneNumber } = data;\n                if (accountType === \"PHONENUMBER\") {\n                    this.saveAccountForSmsHelpPage(); // 在获取语音前保存状态\n                    this.setState({\n                        resetStep: RESET_STEP.INPUT_CODE,\n                        phoneNumber,\n                    },\n                    () => this.refs.vercodeInput.getVercode()) // 自动获取验证码)\n                } else {\n                    this.sendEmail();\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            }).finally(function () {\n                isAccountCheckNetRequest = false;\n            });\n    }\n\n    checkVercode = () => {\n        if (isPreResetNetRequest) {\n            return;\n        }\n        isPreResetNetRequest = true;\n        this.refs.vercodeInput.verifyInput()\n            .then((vercode) => {\n                const speechSessionId = jsCookie.get('speechSessionId');\n\n                let sessionId = speechSessionId ? speechSessionId : this.state.smsSessionId;\n                let timeStamp = new Date().getTime();\n    \n                let params = {\n                    sessionId: sessionId,\n                    otp: vercode,\n                    timeStamp: timeStamp,\n                    recipient: this.state.account,\n                };\n                let sig = utils.getSignByParam(params);\n    \n                return get(PRE_RESET_PASSWORD,\n                    {\n                        params: {sig,...params}\n                    });\n            })\n            .then((data) => {\n                if(getValue(data, 'data')){\n                    if(getValue(data, 'data.success')){\n                        console.log(config.baseUrl, getValue(data, 'data.path'));\n                        const wxUrl = 'https%3a%2f%2fopen.weixin.qq.com%2fconnect%2foauth2%2fauthorize%3fappid%3dwx9a33d01397cc5e88%26redirect_uri%3dhttp%253a%252f%252fwww.codinglobster.cn%252fembedded-web%252faccount%252findex.html%26response_type%3dcode%26scope%3dsnsapi_userinfo%26state%3dSTATE%23wechat_redirect';\n                        const url = `https://stage-3.yinxiang.com${getValue(data, 'data.path')}&targetUrl=${wxUrl}`; // todo targetUrl\n                        window.location.href = url;\n                    } else {\n                        const errors = getValue(data, 'data.errors')\n                        if (errors.length) {\n                            let error = errors[0];\n                            switch (error.code) {\n                                case ERROR_CODE_VALUE_INVALID:\n                                case ERROR_CODE_VALUE_NOT_PRESENT:\n                                case ONE_TIME_PASSWORD_INVALID:\n                                    this.setState({\n                                        vercodeVerifyTip: INVALID_VERIFICATION_CODE,\n                                        vercodeTipLevel: ERROR,\n                                        inputType: VERCODE,\n                                    });\n                                    break;\n                                default:\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }).catch(function (error) {\n                console.log(error);\n            }).finally(function () {\n                isPreResetNetRequest = false;\n            });\n    }\n    // hack处理模拟account的验证过程\n    verifyAccountAndPassword = () => {\n        return Promise.resolve({ account: this.state.account });\n    }\n\n    updateSmsSessionId= (smsSessionId) => {\n        this.setState({\n          smsSessionId,\n        });\n        jsCookie.set('smsSessionId', smsSessionId, { expires: 1 / 24 / 60 }); // 存一个60秒过期的 sessionId 防止用户在获取验证码后误点刷新页面导致60秒内无法注册\n        if (smsSessionId) {\n          jsCookie.remove('speechSessionId');\n        }\n    }\n\n    saveAccountForSmsHelpPage() {\n        // window.ga('send','event','account_signup','click_verification_code_help','');\n        const { account } = this.state;\n        jsCookie.set('registrationSpeechAccount', account, {\n            expires: 1 / 24 / 60,\n        });\n    }\n\n    onVercodeTimeChange = (time) => {\n        this.setState({\n            vercodeTimeRemainToSave: time,\n        });\n    }\n\n    sendEmail = () => {\n        const { saveBindLoginInfo: _saveBindLoginInfo } = this.props;\n        const { account } = this.state;\n        const _this = this;\n        const timeStamp = new Date().getTime();\n\n        if (isSendEmailNetRequest) {\n            return;\n        }\n        isSendEmailNetRequest = true;\n\n        get(SEND_EMAIL, {\n            params: {\n                identifier: account,\n                timeStamp,\n                sig: md5(account + timeStamp + config.reqKey),\n                dbm: 'yxdbm',\n            }\n        }).then(function (data) {\n            if(getValue(data, 'data')){\n                if(getValue(data, 'data.success')){\n                    // save state to the bind page\n                    _saveBindLoginInfo({\n                        account: account,\n                    })\n                    confirm({\n                        content: EMAIL_SENT,\n                        operates: () => _this.props.history.push(`/bind-existed`)\n                    })\n                }\n            }\n        }).catch(function (error) {\n            console.log(error);\n        }).finally(function () {\n            isSendEmailNetRequest = false;\n        });\n    }\n\n    redirectToTwoFactorHelper = () => {\n        this.props.history.push('/two-factor-helper');\n    }\n\n    redirectToCodeTips = () => {\n        this.props.history.push('/forget-password/sms-helper');\n    }\n\n    inputAccount = () => {\n        const {\n            account,\n            accountTipLevel,\n            accountVerifyTip,\n            inputType,\n            resetInput,\n          } = this.state;\n        const accountWasDisableTip = <DisableAccountTip account={account} />;\n        return (\n            <div className={styles.accountInputWrapper}>\n                <div className={styles.descTitle}>{FORGET_DESC}</div>\n                <LoginAccountInput\n                    ref=\"accountInput\"\n                    tipLevel={accountTipLevel}\n                    verifyTip={accountVerifyTip}\n                    inputType={inputType}\n                    account={account}\n                    accountWasDisableHooks={this.accountWasDisable}\n                    accountNotExistedHooks={this.accountNotExisted}\n                    accountWasDisableTip={accountWasDisableTip}\n                    onChange={this.onAccountInputChange}\n                    resetInput={resetInput}\n                    forgetCheck\n                    placeHolder={FORGET_INPUT}\n                />\n                <BasicButton text={RESET_PASSWORD}\n                             buttonWrapperClass={styles.resetBtn}\n                             onClick={this.checkAccount}\n                             loading={isPreResetNetRequest}\n                />\n            </div>\n        );\n    }\n\n    inputVercode = () => {\n        const {\n            inputType,\n            vercodeVerifyTip,\n            vercodeTipLevel,\n            phoneNumber,\n          } = this.state;\n          \n        return (\n            <div className={styles.inputWrapper}>\n              <div className={styles.sendMessage}>{copywritingHelper(AREADY_SEND)[0] + phoneNumber}</div>\n              <VercodeInput\n                ref=\"vercodeInput\"\n                verify={this.verifyAccountAndPassword}\n                updateSmsSessionId={this.updateSmsSessionId}\n                verifyTip={vercodeVerifyTip}\n                tipLevel={vercodeTipLevel}\n                inputType={inputType}\n                updateCountState={() => {}}\n                onVercodeTimeChange={this.onVercodeTimeChange}\n              />\n              <BasicButton text={NEXT_STEP}\n                buttonWrapperClass={styles.resetBtn}\n                onClick={this.checkVercode}\n                loading={isPreResetNetRequest}\n              />\n              <div className={styles.canNotGetVercodeWrapper}>\n                <BasicButton text={CAN_NOT_GET_VERCODE}\n                       buttonWrapperClass={styles.linkWrapper}\n                       onClick={this.redirectToCodeTips}\n                />\n              </div>\n            </div>\n        )\n    }\n\n    render() {\n        const { resetStep } = this.state;\n        const { match } = this.props;\n        const { path } = match;\n        const children = getSubRoutesByPath(match.path)[0];\n\n        const { INPUT_ACCOUNT, INPUT_CODE } = RESET_STEP;\n        return (\n            <div className={styles.forgetPassword}>\n                {resetStep === INPUT_ACCOUNT && this.inputAccount()}\n                {resetStep === INPUT_CODE && this.inputVercode()}\n                <div className={styles.helpWrapper}>\n                    <Route \n                        path={`${path}/${children.path}`}\n                        component={children.component}\n                    />\n                </div>\n                {/* {this.inputPassword()} */}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      bindRegistrationInfo: state.bindRegistrationInfo,\n    };\n};\nconst mapDispatchToProps = {\n    saveBindLoginInfo: info => {\n        return saveBindLoginInfo(info);\n    },\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(ForgetPassword);"],"sourceRoot":""}