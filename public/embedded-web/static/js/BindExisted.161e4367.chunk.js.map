{"version":3,"sources":["account/components/LoginAccountInput/index.js","account/components/DisableAccountTip/index.js","account/components/DisableAccountTip/index.module.scss","account/routeComponents/BindExisted/index.module.scss","account/components/LoginPasswordInput/index.js","account/routeComponents/BindExisted/index.js"],"names":["DEFAULT","TIP_LEVEL_MAP","ERROR","ACCOUNT","INPUT_TYPE_MAP","LoginAccountInput","props","_this","Object","_Users_LiuXiao_workfiled_embedded_web_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_LiuXiao_workfiled_embedded_web_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_LiuXiao_workfiled_embedded_web_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","onBlur","state","account","tipLevel","verifyTip","onFocus","bind","_Users_LiuXiao_workfiled_embedded_web_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","onChange","nextProps","inputType","resetInput","setState","ev","value","target","params","promise","_this2","_this$props","accountWasDisableTip","forgetCheck","identity","checkIdentity","get","REGISTRATION_CHECK","then","Promise","reject","catch","data","status","getValue","COMMON_ERROR_TIPS","ACCOUNT_NOT_EXISTED","Error","INFO_INCOMPELETE","finally","_this$state","placeHolder","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","styles","loginAccountInput","_BasicInput__WEBPACK_IMPORTED_MODULE_9__","INPUT_ACCOUNT","Component","defaultProps","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_config_copywriting__WEBPACK_IMPORTED_MODULE_1__","_config_pageUrl__WEBPACK_IMPORTED_MODULE_2__","_utils_copywritingHelper__WEBPACK_IMPORTED_MODULE_3__","_index_module_scss__WEBPACK_IMPORTED_MODULE_4__","_index_module_scss__WEBPACK_IMPORTED_MODULE_4___default","DisableAccountTip","copywritingList","copywritingHelper","ACCOUNT_WAS_DISABLED","map","item","index","text","reactivateLink","href","REACTIVATION_URL","key","module","exports","bindExisted","accountInputWrapper","passwordInputWrapper","buttonWrapper","linkWrapper","bindCreateBtn","PASSWORD","LoginPasswordInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","password","assertThisInitialized","resolve","_react_16_8_5_react_default","loginPasswordInput","BasicInput","INPUT_PASSWORD_REGISTER","INPUT_DEFAULT","BindExisted","forgotPassword","ClyClickForgetPassword","history","push","redirectToCreate","ClyClickCreateNewAccount","bindAready","confirm","content","WX_BIND_ALREADY","operates","CREATE_NEW_ACCOUNT","main","onClick","SWITCH_ACCOUNT","accountTipLevel","accountVerifyTip","passwordTipLevel","passwordVerifyTip","requesting","goToBind","onPasswordInputChange","onAccountInputChange","_this$props$bindLogin","bindLoginInfo","ClyEnterBindExistedPage","_saveBindLoginInfo","saveBindLoginInfo","_ref","_ref2","verifyResponseContent","_this3","redirectTo","_setTwofactorInfo","setTwofactorInfo","wechatSessionId","ClyClickContinue","all","refs","accountInput","verifyInput","passwordInput","_ref3","_ref4","slicedToArray","jsCookie","set","expires","post","VERIFY_CREDENTIAL","needSignature","success","code","authToken","twoFactorEnabled","twoFactorHint","twoFactorToken","fromWechatLogin","updateVerifyInfo","PASSWORD_ERROR","BIND_USER_BY_AUTH_TOKEN","sessionId","INVALID_WECHAT_SESSION","WECHAT_ALREADY_BIND","window","wx","closeWindow","err","console","log","_this$setState","_ref5","verifyTipKey","concat","tipLevelKey","defineProperty","_this$state2","ref","ClyEnterAccount","components_LoginPasswordInput","ClyEnterExistedPassword","INPUT_PASSWORD","BasicButton","LOGIN_ACCOUNT_TO_BIND","loading","FORGOT_PASSWORD","buttonWrapperClass","Separator","DIRECT_CREATE_NEW_ACCOUNT","mapDispatchToProps","info","connect"],"mappings":"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","file":"static/js/BindExisted.161e4367.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { get } from 'axios';\nimport { get as getValue } from 'lodash-es';\nimport BasicInput from '../BasicInput';\nimport { transformObjectToArray } from '../../utils/commonUtils';\nimport {\n  INPUT_TYPE_MAP,\n  TIP_LEVEL_MAP,\n} from '../../config/propsPermittedValueMap';\nimport {\n  COMMON_ERROR_TIPS,\n  INPUT_ACCOUNT,\n  INFO_INCOMPELETE,\n  ACCOUNT_NOT_EXISTED,\n} from '../../config/copywriting';\nimport { REGISTRATION_CHECK } from '../../config/interfaceUrl';\n\nimport styles from './index.module.scss';\n\nconst LEVEL_LIST = transformObjectToArray(TIP_LEVEL_MAP);\nconst INPUT_TYPE_LIST = transformObjectToArray(INPUT_TYPE_MAP);\nconst { DEFAULT, ERROR } = TIP_LEVEL_MAP;\nconst { ACCOUNT } = INPUT_TYPE_MAP;\n\nclass LoginAccountInput extends Component {\n  static propTypes = {\n    account: PropTypes.string,\n    resetInput: PropTypes.bool,\n    verifyTip: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n    accountWasDisableTip: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.string,\n    ]),\n    tipLevel: PropTypes.oneOf(LEVEL_LIST),\n    inputType: PropTypes.oneOf(INPUT_TYPE_LIST),\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n    forgetCheck: PropTypes.bool, // 忘记密码模块使用时返回检查状态\n    placeHolder: PropTypes.string,\n  };\n\n  static defaultProps = {\n    account: '',\n    resetInput: false,\n    accountWasDisableTip: '',\n    onChange: () => {},\n    onBlur: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      tipLevel: DEFAULT,\n      verifyTip: '',\n    };\n    this.onFocus = this.onFocus.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { verifyTip, tipLevel, inputType, account, resetInput } = nextProps;\n    if (inputType === ACCOUNT) {\n      this.setState({\n        verifyTip,\n        tipLevel,\n      });\n    }\n    if (resetInput) {\n      this.setState({\n        account,\n      });\n    }\n  }\n\n  onFocus() {\n    this.setState({\n      tipLevel: DEFAULT,\n      verifyTip: '',\n    });\n  }\n\n  onChange(ev) {\n    const {\n      target: { value },\n    } = ev;\n    const { onChange } = this.props;\n    this.setState({\n      account: value,\n    });\n    onChange(ev);\n  }\n\n  onBlur = () => {\n    this.props.onBlur();\n  }\n\n  verifyInput() {\n    const { account } = this.state;\n    const {\n      accountWasDisableTip,\n      forgetCheck,\n    } = this.props;\n    let verifyTip = '';\n    let tipLevel = '';\n    let params;\n    let promise;\n    if (!account) {\n      tipLevel = ERROR;\n      verifyTip = INFO_INCOMPELETE;\n      promise = Promise.reject(new Error(verifyTip));\n    } else {\n      params = {\n        identity: account,\n        checkIdentity: '',\n      };\n      promise = get(REGISTRATION_CHECK, {\n        params,\n      })\n        .then(() => {\n          // 此情况说明帐户不存在\n          return Promise.reject();\n        })\n        .catch(data => {\n          const status = getValue(data, 'response.status');\n          if (!data) {\n            tipLevel = ERROR;\n            verifyTip = ACCOUNT_NOT_EXISTED;\n          } else {\n            switch (status) {\n              case 409:\n                tipLevel = DEFAULT;\n                verifyTip = '';\n                break;\n              case 412:\n                tipLevel = ERROR;\n                verifyTip = accountWasDisableTip;\n                break;\n              default:\n                tipLevel = ERROR;\n                verifyTip = COMMON_ERROR_TIPS;\n                break;\n            }\n          }\n          if (tipLevel === DEFAULT) {\n            if (forgetCheck) return getValue(data, 'response.data');;\n            return account;\n          }\n          return Promise.reject(new Error(verifyTip));\n        });\n    }\n    return promise.finally(() => {\n      this.setState({\n        verifyTip,\n        tipLevel,\n      });\n    });\n  }\n\n  render() {\n    const { tipLevel, verifyTip, account } = this.state;\n    const { placeHolder } = this.props;\n    return (\n      <div className={styles.loginAccountInput}>\n        <BasicInput\n          placeHolder={placeHolder || INPUT_ACCOUNT}\n          tipLevel={tipLevel}\n          value={account}\n          onFocus={this.onFocus}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n        >\n          {verifyTip}\n        </BasicInput>\n      </div>\n    );\n  }\n}\n\nexport default LoginAccountInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ACCOUNT_WAS_DISABLED } from '../../config/copywriting';\nimport { REACTIVATION_URL } from '../../config/pageUrl';\nimport copywritingHelper from '../../utils/copywritingHelper';\n\nimport styles from './index.module.scss';\n\nconst DisableAccountTip = props => {\n  const copywritingList = copywritingHelper(ACCOUNT_WAS_DISABLED);\n  const { account } = props;\n  return (\n    <span>\n      {copywritingList.map((item, index) => {\n        let text = '';\n        switch (index) {\n          case 1:\n            text = account;\n            break;\n          case 3:\n            text = (\n              <a\n                className={styles.reactivateLink}\n                href={REACTIVATION_URL}\n                key={index}\n              >\n                {item}\n              </a>\n            );\n            break;\n          default:\n            text = item;\n        }\n        return text;\n      })}\n    </span>\n  );\n};\n\nDisableAccountTip.propTypes = {\n  account: PropTypes.string.isRequired,\n};\n\nexport default DisableAccountTip;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reactivateLink\":\"DisableAccountTip_reactivateLink__2mLSq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bindExisted\":\"BindExisted_bindExisted__2-Mv_\",\"accountInputWrapper\":\"BindExisted_accountInputWrapper__3KaMR\",\"passwordInputWrapper\":\"BindExisted_passwordInputWrapper__bH5rA\",\"buttonWrapper\":\"BindExisted_buttonWrapper__1hsj9\",\"linkWrapper\":\"BindExisted_linkWrapper__1t1o8\",\"bindCreateBtn\":\"BindExisted_bindCreateBtn__gLMKg\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport BasicInput from '../BasicInput';\nimport { transformObjectToArray } from '../../utils/commonUtils';\nimport {\n  INPUT_TYPE_MAP,\n  TIP_LEVEL_MAP,\n} from '../../config/propsPermittedValueMap';\nimport { INFO_INCOMPELETE, INPUT_PASSWORD_REGISTER } from '../../config/copywriting';\n\nimport styles from './index.module.scss';\n\nconst LEVEL_LIST = transformObjectToArray(TIP_LEVEL_MAP);\nconst INPUT_TYPE_LIST = transformObjectToArray(INPUT_TYPE_MAP);\nconst { DEFAULT, ERROR } = TIP_LEVEL_MAP;\nconst { PASSWORD } = INPUT_TYPE_MAP;\n\nclass LoginPasswordInput extends Component {\n  static propTypes = {\n    password: PropTypes.string,\n    resetInput: PropTypes.bool,\n    verifyTip: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n    tipLevel: PropTypes.oneOf(LEVEL_LIST),\n    inputType: PropTypes.oneOf(INPUT_TYPE_LIST),\n    onChange: PropTypes.func,\n    onBlur: PropTypes.func,\n    placeHolder: PropTypes.string,\n  };\n\n  static defaultProps = {\n    password: '',\n    resetInput: false,\n    onChange: () => {},\n    onBlur: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: '',\n      tipLevel: DEFAULT,\n      verifyTip: '',\n    };\n    this.onFocus = this.onFocus.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { verifyTip, tipLevel, inputType, password, resetInput } = nextProps;\n    if (inputType === PASSWORD) {\n      this.setState({\n        verifyTip,\n        tipLevel,\n      });\n    }\n    if (resetInput) {\n      this.setState({\n        password,\n      });\n    }\n  }\n\n  onFocus() {\n    this.setState({\n      tipLevel: DEFAULT,\n      verifyTip: '',\n    });\n  }\n\n  onChange(ev) {\n    const {\n      target: { value },\n    } = ev;\n    const { onChange } = this.props;\n    this.setState({\n      password: value,\n    });\n    onChange(ev);\n  }\n\n  verifyInput() {\n    const { password } = this.state;\n    if (!password) {\n      this.setState({\n        verifyTip: INFO_INCOMPELETE,\n        tipLevel: ERROR,\n      });\n      return Promise.reject(new Error(INFO_INCOMPELETE));\n    }\n    return Promise.resolve(password);\n  }\n\n  render() {\n    const { tipLevel, verifyTip, password } = this.state;\n    const { placeHolder } = this.props;\n    return (\n      <div className={styles.loginPasswordInput}>\n        <BasicInput\n          placeHolder={placeHolder || INPUT_PASSWORD_REGISTER}\n          tipLevel={tipLevel}\n          value={password}\n          inputType=\"password\"\n          onFocus={this.onFocus}\n          onChange={this.onChange}\n          onBlur={this.props.onBlur}\n        >\n          {verifyTip}\n        </BasicInput>\n      </div>\n    );\n  }\n}\n\nexport default LoginPasswordInput;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { post } from 'axios';\nimport { get as getValue } from 'lodash-es';\nimport jsCookie from 'js-cookie';\nimport LoginAccountInput from '../../components/LoginAccountInput';\nimport LoginPasswordInput from '../../components/LoginPasswordInput';\nimport BasicButton from '../../components/BasicButton';\n// import ForgotPasswordLink from '../../components/ForgotPasswordLink';\nimport Separator from '../../components/Separator';\nimport DisableAccountTip from '../../components/DisableAccountTip';\nimport confirm from '../../components/Confirm/Confirm';\n\nimport {\n  LOGIN_ACCOUNT_TO_BIND,\n  ACCOUNT_ALREADY_BIND,\n  WECHAT_ALREADY_BIND,\n  PASSWORD_ERROR,\n  COMMON_ERROR_TIPS,\n  INVALID_WECHAT_SESSION,\n  INPUT_PASSWORD,\n  FORGOT_PASSWORD,\n  DIRECT_CREATE_NEW_ACCOUNT,\n  WX_BIND_ALREADY,\n  CREATE_NEW_ACCOUNT,\n  SWITCH_ACCOUNT,\n} from '../../config/copywriting';\nimport {\n  TIP_LEVEL_MAP,\n  INPUT_TYPE_MAP,\n} from '../../config/propsPermittedValueMap';\nimport {\n  BIND_USER_BY_AUTH_TOKEN,\n  VERIFY_CREDENTIAL,\n} from '../../config/interfaceUrl';\n\nimport { setTwofactorInfo, saveBindLoginInfo } from '../../store/actions';\nimport { \n  ClyEnterBindExistedPage,\n  ClyEnterAccount,\n  ClyEnterExistedPassword,\n  ClyClickContinue,\n  ClyClickForgetPassword,\n  ClyClickCreateNewAccount,\n} from '../../countly/countlyPoints';\n\nimport styles from './index.module.scss';\n\nconst { DEFAULT, ERROR } = TIP_LEVEL_MAP;\nconst { ACCOUNT, PASSWORD, DEFAULT: INPUT_DEFAULT } = INPUT_TYPE_MAP;\n\nclass BindExisted extends Component {\n  static propTypes = {\n    wechatSessionId: PropTypes.string.isRequired,\n    setTwofactorInfo: PropTypes.func.isRequired,\n    bindLoginInfo: PropTypes.object.isRequired,\n    saveBindLoginInfo: PropTypes.func.isRequired,\n    history: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      accountTipLevel: DEFAULT,\n      accountVerifyTip: '',\n      password: '',\n      passwordTipLevel: DEFAULT,\n      passwordVerifyTip: '',\n      inputType: INPUT_DEFAULT,\n      requesting: false,\n      resetInput: false,\n    };\n    this.goToBind = this.goToBind.bind(this);\n    this.onPasswordInputChange = this.onPasswordInputChange.bind(this);\n    this.onAccountInputChange = this.onAccountInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      bindLoginInfo: { account, password },\n    } = this.props;\n    this.setState(\n      {\n        account,\n        password,\n        resetInput: true,\n      },\n      () => {\n        this.setState({\n          resetInput: false,\n        });\n      },\n    );\n    ClyEnterBindExistedPage();\n  }\n\n  componentWillUnmount() {\n    const { account, password } = this.state;\n    const { saveBindLoginInfo: _saveBindLoginInfo } = this.props;\n    _saveBindLoginInfo({\n      account,\n      password,\n    });\n  }\n\n  onAccountInputChange({ target: { value } }) {\n    this.setState({\n      account: value,\n    });\n  }\n\n  onPasswordInputChange({ target: { value } }) {\n    this.setState({\n      password: value,\n    });\n  }\n\n  forgotPassword = () => {\n    ClyClickForgetPassword();\n    this.props.history.push('/forget-password')\n  }\n\n\n  redirectToCreate = () => {\n    ClyClickCreateNewAccount()\n    this.props.history.push('/bind-create');\n  }\n\n  goToBind() {\n    let redirectTo = '';\n    let verifyResponseContent;\n    const {\n      history,\n      setTwofactorInfo: _setTwofactorInfo,\n      wechatSessionId,\n    } = this.props;\n    ClyClickContinue();\n    this.setState({\n      requesting: true,\n    });\n    Promise.all([\n      this.refs.accountInput.verifyInput(),\n      this.refs.passwordInput.verifyInput(),\n    ])\n      .then(([account, password]) => {\n        jsCookie.set('registrationSpeechAccount', account, {\n          expires: 1 / 24 / 60,\n        });\n        return post(\n          VERIFY_CREDENTIAL,\n          {\n            identity: account,\n            password,\n          },\n          {\n            needSignature: true,\n          },\n        );\n      })\n      .then(data => {\n        const code = getValue(data, 'data.code');\n        const authToken = getValue(data, 'data.content.authToken');\n        const twoFactorEnabled = getValue(\n          data,\n          'data.content.twoFactorEnabled',\n        );\n        const twoFactorHint = getValue(data, 'data.content.twoFactorHint');\n        let success;\n        verifyResponseContent = getValue(data, 'data.content');\n        switch (code) {\n          case 200:\n            if (twoFactorEnabled) {\n              _setTwofactorInfo({\n                twoFactorEnabled,\n                twoFactorHint,\n                twoFactorToken: authToken,\n                fromWechatLogin: false,\n              });\n              success = false;\n              redirectTo = '/twofactor-verification';\n            } else {\n              success = !!authToken; // 确保接口的确返回了 authToken, 有 authToken 才算成功\n            }\n            break;\n          case 403:\n            this.updateVerifyInfo(PASSWORD, {\n              tipLevel: ERROR,\n              verifyTip: PASSWORD_ERROR,\n            });\n            success = false;\n            break;\n          default:\n            success = false;\n            this.updateVerifyInfo(PASSWORD, {\n              tipLevel: ERROR,\n              verifyTip: PASSWORD_ERROR,\n            });\n        }\n        if (success) {\n          return authToken;\n        }\n        return Promise.reject();\n      })\n      .then(authToken => {\n        return post(\n          BIND_USER_BY_AUTH_TOKEN,\n          {\n            authToken,\n            sessionId: wechatSessionId,\n          },\n          {\n            needSignature: true,\n          },\n        );\n      })\n      .then(data => {\n        const code = getValue(data, 'data.code');\n        let success;\n        switch (code) {\n          case 200:\n            success = true;\n            break;\n          case 404:\n            success = false;\n            confirm({ content:INVALID_WECHAT_SESSION });\n            break;\n          case 423:\n            success = false;\n            confirm({ content: WECHAT_ALREADY_BIND });\n            break;\n          case 425:\n            success = false;\n            this.bindAready();\n            break;\n          default:\n            success = false;\n            confirm({ content: COMMON_ERROR_TIPS });\n        }\n        if (success) {\n          return verifyResponseContent;\n        }\n        return Promise.reject();\n      })\n      .then(() => {\n        window.wx.closeWindow && window.wx.closeWindow();\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => {\n        if (!redirectTo) {\n          // 防止在跳转后组件已经卸载但是仍然更新 state 导致内存泄露\n          this.setState({\n            inputType: INPUT_DEFAULT,\n            requesting: false,\n          });\n        } else {\n          history.push(redirectTo);\n        }\n      });\n  }\n\n  bindAready = () => {\n    confirm({\n      content: WX_BIND_ALREADY,\n      operates: [{\n        text: CREATE_NEW_ACCOUNT,\n        main: true,\n        onClick: () => this.props.history.push('/bind-create'),\n      },\n      {\n        text: SWITCH_ACCOUNT,\n        main: true,\n        onClick: () => {\n          this.setState({\n            account: '',\n            password: '',\n            resetInput: true,\n          }, \n          () => {\n            this.setState({\n              resetInput: false,\n            })\n          })\n        },\n      }]\n    })\n  }\n\n  updateVerifyInfo(inputType, { tipLevel, verifyTip }) {\n    const verifyTipKey = `${inputType}VerifyTip`;\n    const tipLevelKey = `${inputType}TipLevel`;\n    this.setState({\n      inputType,\n      [verifyTipKey]: verifyTip,\n      [tipLevelKey]: tipLevel,\n    });\n  }\n\n  render() {\n    const {\n      account,\n      password,\n      accountTipLevel,\n      accountVerifyTip,\n      passwordTipLevel,\n      passwordVerifyTip,\n      requesting,\n      inputType,\n      resetInput,\n    } = this.state;\n    const accountWasDisableTip = <DisableAccountTip account={account} />;\n    return (\n      <div className={styles.bindExisted}>\n        <div className={styles.accountInputWrapper}>\n          <LoginAccountInput\n            ref=\"accountInput\"\n            tipLevel={accountTipLevel}\n            verifyTip={accountVerifyTip}\n            inputType={inputType}\n            account={account}\n            accountWasDisableTip={accountWasDisableTip}\n            onChange={this.onAccountInputChange}\n            onBlur={ClyEnterAccount}\n            resetInput={resetInput}\n          />\n        </div>\n        <div className={styles.passwordInputWrapper}>\n          <LoginPasswordInput\n            ref=\"passwordInput\"\n            tipLevel={passwordTipLevel}\n            verifyTip={passwordVerifyTip}\n            inputType={inputType}\n            password={password}\n            onChange={this.onPasswordInputChange}\n            onBlur={ClyEnterExistedPassword}\n            resetInput={resetInput}\n            placeHolder={INPUT_PASSWORD}\n          />\n        </div>\n        <div className={styles.buttonWrapper}>\n          <BasicButton\n            text={LOGIN_ACCOUNT_TO_BIND}\n            onClick={this.goToBind}\n            loading={requesting}\n          />\n        </div>\n        <div className={styles.linkWrapper}>\n          <BasicButton text={FORGOT_PASSWORD}\n                       buttonWrapperClass={styles.linkWrapper}\n                       onClick={this.forgotPassword}\n          />\n        </div>\n        <Separator />\n        <BasicButton\n          text={DIRECT_CREATE_NEW_ACCOUNT}\n          buttonWrapperClass={styles.bindCreateBtn}\n          onClick={this.redirectToCreate}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    wechatSessionId: state.wechatSessionId,\n    bindLoginInfo: state.bindLoginInfo,\n  };\n};\nconst mapDispatchToProps = {\n  setTwofactorInfo: info => {\n    return setTwofactorInfo(info);\n  },\n  saveBindLoginInfo: info => {\n    return saveBindLoginInfo(info);\n  },\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BindExisted);\n"],"sourceRoot":""}