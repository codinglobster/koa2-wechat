{"version":3,"sources":["account/components/AgreeClauseToCreate/index.js","account/components/AgreeClauseToCreate/index.module.scss","account/components/BindCreateAccount/index.module.scss","account/components/CreateAccountBasicForm/index.module.scss","account/components/BindSecurityTip/index.module.scss","account/routeComponents/BindCreate/index.module.scss","account/components/BindCreateAccount/index.js","account/components/RegistrationAccountInput/index.js","account/components/RegistrationPasswordInput/index.js","account/components/CreateAccountBasicForm/index.js","account/components/BindSecurityTip/index.js","account/routeComponents/BindCreate/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_config_pageUrl__WEBPACK_IMPORTED_MODULE_1__","_config_copywriting__WEBPACK_IMPORTED_MODULE_2__","_utils_copywritingHelper__WEBPACK_IMPORTED_MODULE_3__","_index_module_scss__WEBPACK_IMPORTED_MODULE_4__","_index_module_scss__WEBPACK_IMPORTED_MODULE_4___default","AgreeClauseToCreate","_ref","_ref$copywriting","copywriting","AGREE_CLAUSE_TO_CREATE","a","createElement","className","styles","agreeClauseToCreate","copywritingHelper","map","item","index","clauseLink","href","CLAUSE_OF_SERVICE_URL","target","rel","key","CLAUSE_OF_PRIVACY_URL","module","exports","bindCreateAccount","vercodeHelpLinkWrapper","hide","bindExistBtn","linkWrapper","helpWrapper","createAccountBasicForm","inputWrapper","bindSecurityTip","bindCreate","bindPhoneNumberWrapper","bindSecurityTipWrapper","PHONE_NUMBER","ACCOUNT_TYPE_MAP","ERROR","TIP_LEVEL_MAP","ACCOUNT","INPUT_TYPE_MAP","BindCreateAccount","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","redirectToExist","ClyClickBindExisted","history","push","redirectToCodeTips","state","requesting","goToBind","bind","assertThisInitialized","ClyEnterCreateAccountPage","verifyResponseContent","_this2","_this$props","createAccount","updateVerifyInfo","wechatSessionId","setState","ClyClickCreateAccount","then","account","password","post","VERIFY_CREDENTIAL","identity","needSignature","data","success","code","getValue","authToken","confirm","content","COMMON_ERROR_TIPS","Promise","reject","BIND_USER_BY_AUTH_TOKEN","sessionId","INVALID_WECHAT_SESSION","tipLevel","verifyTip","ACCOUNT_ALREADY_BIND","WECHAT_ALREADY_BIND","window","wx","closeWindow","catch","err","console","log","finally","_this$props2","countStatus","accountType","match","path","children","getSubRoutesByPath","_react_16_8_5_react_default","BasicButton","text","CREATE_ACCOUNT_TO_BIND","onClick","loading","concat","CAN_NOT_GET_VERCODE","buttonWrapperClass","Separator","BIND_WITH_ALREADY_EXISTED_ACCOUNT","Route","component","Component","withRouter","connect","EMAIL","DEFAULT","WARNING","AccountInput","placeHolder","onFocus","onChange","setPlaceHolderText","nextProps","inputType","resetInput","ev","value","INPUT_EMAIL","INPUT_PHONE_NUMBER","params","promise","phoneNumberConflictTip","twoFactorAccountHooks","phoneNumberConflictHooks","phoneNumberInvalidHooks","phoneNumberExistedHooks","isPhoneNumber","SIMPLE_PHONE_REG","test","INVALID_PHONE_NUMBER","Error","username","checkUsername","email","checkEmail","get","REGISTRATION_CHECK","isValidPhoneNumber","message","isTwoFactorInUse","VIRTUAL_PHONENUMBER_CODE","TWO_FACTOR_VERIFY_PHONE_NUMBER","status","type","PHONE_NUMBER_REGISTER_ALREADY","EMAIL_REGISTER_ALREADY","INVALID_EMAIL","INFO_INCOMPELETE","_this$state","_this$props3","customTip","onBlur","accountInput","BasicInput","useDefaultTip","defaultProps","PASSWORD","PasswordInput","manual","verifyInput","_this3","length","PASSWORD_FORMAT_TIPS","PASSWORD_REGEX","WEAK_PASSWORD_TIPS","resolve","PASSWORD_HAS_INVALID_SYMBOL","passwordInput","SET_PASSWORD_TIPS","VERCODE","INPUT_DEFAULT","withCreateAcccountBasicForm","WrappedComponent","CreateAccountBasicForm","_Component","verifyAccount","all","refs","slicedToArray","smsSessionId","accountTipLevel","accountVerifyTip","passwordTipLevel","passwordVerifyTip","vercodeTipLevel","vercodeVerifyTip","verifyAccountAndPassword","updateSmsSessionId","updateCountState","inherits","createClass","jsCookie","_ref3","_ref4","vercodeInput","_ref5","_ref6","_ref6$","vercode","set","expires","remove","saveAccountForSmsHelpPage","_ref7","_this$setState","verifyTipKey","tipLevelKey","defineProperty","_account","_password","verifyAll","_ref8","otp","phoneNumber","createPhoneNumber","createNoUsername","CREATE_USER","ts","tsh","errorCode","OTP_INTERGRITY_CHECK","ERROR_CODE_VALUE_NOT_PRESENT","INVALID_VERIFICATION_CODE","ERROR_CODE_VALUE_DAES_NOT_MATCH","ERROR_CODE_PASSWORD_TOO_WEAK","PASSWORD_IS_TOO_SIMPLE","REGISTRATION_EMAIL_INVALID","vercodeTimeRemain","onAccountInputChange","onPasswordInputChange","onVercodeTimeChange","otherProps","objectWithoutProperties","allData","objectSpread","RegistrationAccountInput","ref","ClyEnterPhoneNumber","VercodeInput","verify","getVercodeHooks","ClyGetVercode","ClyEnterVercode","RegistrationPasswordInput","ClyEnterPassword","assign","BindSecurityTip","BIND_SECURITY_TIP","EnhancedBindCreatePhoneNumber","EnhancedBindCreateEmail","BindCreate","_saveBindLoginInfo","saveBindLoginInfo","USE_PHONE_NUM_TO_LOGIN","operates","CANCEL","CONFIRM","main","vercodeTimeRemainToSave","vercodeTimeRemainToGet","redirectHandler","_this$props$bindRegis","bindRegistrationInfo","vercodeTimeStopTimeStamp","nowTimeStamp","Date","now","nowVercodeTimeRemain","Math","ceil","_saveBindRegistrationInfo","saveBindRegistrationInfo","_ref2","time","_this$state2","components_BindSecurityTip","PHONE_NUM_USED_TIPS","USE_EMAIL_TO_REGISTE","mapDispatchToProps","info"],"mappings":"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","file":"static/js/BindCreate.cd489713.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  CLAUSE_OF_PRIVACY_URL,\n  CLAUSE_OF_SERVICE_URL,\n} from '../../config/pageUrl';\nimport { AGREE_CLAUSE_TO_CREATE } from '../../config/copywriting';\nimport copywritingHelper from '../../utils/copywritingHelper';\n\nimport styles from './index.module.scss';\n\nconst AgreeClauseToCreate = ({copywriting = AGREE_CLAUSE_TO_CREATE}) => (\n  <p className={styles.agreeClauseToCreate}>\n    {copywritingHelper(copywriting).map((item, index) => {\n      if (index === 1) {\n        return (\n          <a\n            className={styles.clauseLink}\n            href={CLAUSE_OF_SERVICE_URL}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            key={index}\n          >\n            {item}\n          </a>\n        );\n      }\n      if (index === 3) {\n        return (\n          <a\n            className={styles.clauseLink}\n            href={CLAUSE_OF_PRIVACY_URL}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            key={index}\n          >\n            {item}\n          </a>\n        );\n      }\n      return item;\n    })}\n  </p>\n);\n\nexport default AgreeClauseToCreate;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"agreeClauseToCreate\":\"AgreeClauseToCreate_agreeClauseToCreate__p9RuQ\",\"clauseLink\":\"AgreeClauseToCreate_clauseLink__2i6b7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bindCreateAccount\":\"BindCreateAccount_bindCreateAccount__2kiQV\",\"vercodeHelpLinkWrapper\":\"BindCreateAccount_vercodeHelpLinkWrapper__x5EVn\",\"hide\":\"BindCreateAccount_hide__3cWgZ\",\"bindExistBtn\":\"BindCreateAccount_bindExistBtn__1NuFI\",\"linkWrapper\":\"BindCreateAccount_linkWrapper__3KTkT\",\"helpWrapper\":\"BindCreateAccount_helpWrapper__31cv5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createAccountBasicForm\":\"CreateAccountBasicForm_createAccountBasicForm__28JHD\",\"inputWrapper\":\"CreateAccountBasicForm_inputWrapper__3aJ-B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bindSecurityTip\":\"BindSecurityTip_bindSecurityTip__bL_Qj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bindCreate\":\"BindCreate_bindCreate__1RAh1\",\"bindPhoneNumberWrapper\":\"BindCreate_bindPhoneNumberWrapper__1UtIq\",\"bindSecurityTipWrapper\":\"BindCreate_bindSecurityTipWrapper__1OjO_\"};","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { post } from 'axios';\nimport { get as getValue } from 'lodash-es';\nimport BasicButton from '../BasicButton';\nimport Separator from '../Separator';\nimport confirm from '../../components/Confirm/Confirm';\n\nimport {\n  ACCOUNT_ALREADY_BIND,\n  COMMON_ERROR_TIPS,\n  CREATE_ACCOUNT_TO_BIND,\n  INVALID_WECHAT_SESSION,\n  WECHAT_ALREADY_BIND,\n  BIND_WITH_ALREADY_EXISTED_ACCOUNT,\n  CAN_NOT_GET_VERCODE,\n} from '../../config/copywriting';\nimport {\n  BIND_USER_BY_AUTH_TOKEN,\n  VERIFY_CREDENTIAL,\n} from '../../config/interfaceUrl';\nimport {\n  ACCOUNT_TYPE_MAP,\n  TIP_LEVEL_MAP,\n  INPUT_TYPE_MAP,\n  // ACCOUNT_CREATE_PURPOSE,\n} from '../../config/propsPermittedValueMap';\nimport {\n  ClyEnterCreateAccountPage,\n  ClyClickCreateAccount,\n  ClyClickNoVercode,\n  ClyClickBindExisted,\n} from '../../countly/countlyPoints';\nimport { getSubRoutesByPath } from '../../utils/routeUtils';\n\nimport styles from './index.module.scss';\n\nconst { PHONE_NUMBER } = ACCOUNT_TYPE_MAP;\nconst { ERROR } = TIP_LEVEL_MAP;\nconst { ACCOUNT } = INPUT_TYPE_MAP;\n// const { WECHAT_BIND } = ACCOUNT_CREATE_PURPOSE;\n\nclass BindCreateAccount extends Component {\n  static propTypes = {\n    accountType: PropTypes.string.isRequired,\n    countStatus: PropTypes.bool.isRequired,\n    updateVerifyInfo: PropTypes.func.isRequired,\n    createAccount: PropTypes.func.isRequired,\n    wechatSessionId: PropTypes.string.isRequired,\n    history: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      requesting: false,\n    };\n    this.goToBind = this.goToBind.bind(this);\n  }\n\n  componentDidMount() {\n    ClyEnterCreateAccountPage();\n  }\n\n  goToBind() {\n    const redirectTo = '';\n    let verifyResponseContent;\n    const {\n      createAccount,\n      updateVerifyInfo,\n      wechatSessionId,\n      history,\n    } = this.props;\n    this.setState({\n      requesting: true,\n    });\n    ClyClickCreateAccount();\n    createAccount()\n      .then(({ account, password }) => {\n        return post(\n          VERIFY_CREDENTIAL,\n          {\n            identity: account,\n            password,\n          },\n          {\n            needSignature: true,\n          },\n        );\n      })\n      .then(data => {\n        const code = getValue(data, 'data.code');\n        const authToken = getValue(data, 'data.content.authToken');\n        let success;\n        verifyResponseContent = getValue(data, 'data.content');\n        switch (code) {\n          case 200:\n            success = !!authToken;\n            break;\n          default:\n            confirm({ content:COMMON_ERROR_TIPS });\n            success = false;\n        }\n        if (success) {\n          return authToken;\n        }\n        return Promise.reject();\n      })\n      .then(authToken => {\n        return post(\n          BIND_USER_BY_AUTH_TOKEN,\n          {\n            authToken,\n            sessionId: wechatSessionId,\n          },\n          {\n            needSignature: true,\n          },\n        );\n      })\n      .then(data => {\n        const code = getValue(data, 'data.code');\n        let success;\n        switch (code) {\n          case 200:\n            success = true;\n            break;\n          case 404:\n            success = false;\n            confirm({ content: INVALID_WECHAT_SESSION });\n            break;\n          case 423:\n            updateVerifyInfo(ACCOUNT, {\n              tipLevel: ERROR,\n              verifyTip: ACCOUNT_ALREADY_BIND,\n            });\n            success = false;\n            break;\n          case 425:\n            success = false;\n            confirm({ content: WECHAT_ALREADY_BIND });\n            break;\n          default:\n            success = false;\n            confirm({ content: COMMON_ERROR_TIPS });\n        }\n        if (success) {\n          return verifyResponseContent;\n        }\n        return Promise.reject();\n      })\n      .then(() => {\n        window.wx.closeWindow && window.wx.closeWindow();\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => {\n        if (!redirectTo) {\n          this.setState({\n            requesting: false,\n          });\n        } else {\n          history.push(redirectTo);\n        }\n      });\n  }\n\n  redirectToExist = () => {\n    ClyClickBindExisted();\n    this.props.history.push('/bind-existed');\n  }\n\n  redirectToCodeTips = () => {\n    this.props.history.push('/bind-create/sms-helper');\n  }\n\n  render() {\n    const { countStatus, accountType } = this.props;\n    const { requesting } = this.state;\n    const { match } = this.props;\n    const { path } = match;\n    const children = getSubRoutesByPath(match.path)[0];\n    return (\n      <div className={styles.bindCreateAccount}>\n        <BasicButton\n          text={CREATE_ACCOUNT_TO_BIND}\n          onClick={this.goToBind}\n          loading={requesting}\n        />\n        {accountType === PHONE_NUMBER ? (\n          <div\n            className={`${styles.vercodeHelpLinkWrapper} ${\n              countStatus ? '' : styles.hide\n            }`}\n          >\n            <BasicButton text={CAN_NOT_GET_VERCODE}\n                       buttonWrapperClass={styles.linkWrapper}\n                       onClick={this.redirectToCodeTips}\n              />\n          </div>\n        ) : (\n          ''\n        )}\n        <Separator />\n        <BasicButton\n          text={BIND_WITH_ALREADY_EXISTED_ACCOUNT}\n          buttonWrapperClass={styles.bindExistBtn}\n          onClick={this.redirectToExist}\n        />\n        <div className={styles.helpWrapper}>\n          <Route \n            path={`${path}/${children.path}`}\n            component={children.component}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    wechatSessionId: state.wechatSessionId,\n  };\n};\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(BindCreateAccount),\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { get } from 'axios';\nimport { get as getValue } from 'lodash-es';\nimport BasicInput from '../BasicInput';\nimport { REGISTRATION_CHECK } from '../../config/interfaceUrl';\nimport { VIRTUAL_PHONENUMBER_CODE } from '../../config/interfaceErrorCodeMap';\nimport {\n  EMAIL_REGISTER_ALREADY,\n  INPUT_EMAIL,\n  INPUT_PHONE_NUMBER,\n  INVALID_PHONE_NUMBER,\n  INVALID_EMAIL,\n  PHONE_NUMBER_REGISTER_ALREADY,\n  INFO_INCOMPELETE,\n  TWO_FACTOR_VERIFY_PHONE_NUMBER,\n  COMMON_ERROR_TIPS,\n} from '../../config/copywriting';\nimport {\n  ACCOUNT_TYPE_MAP,\n  TIP_LEVEL_MAP,\n  INPUT_TYPE_MAP,\n} from '../../config/propsPermittedValueMap';\nimport { SIMPLE_PHONE_REG } from '../../config/commonRegex';\nimport { transformObjectToArray } from '../../utils/commonUtils';\n\nimport styles from './index.module.scss';\n\nconst ACCOUNT_TYPE_LIST = transformObjectToArray(ACCOUNT_TYPE_MAP);\nconst LEVEL_LIST = transformObjectToArray(TIP_LEVEL_MAP);\nconst INPUT_TYPE_LIST = transformObjectToArray(INPUT_TYPE_MAP);\nconst { PHONE_NUMBER, EMAIL } = ACCOUNT_TYPE_MAP;\nconst { DEFAULT, ERROR, WARNING } = TIP_LEVEL_MAP;\nconst { ACCOUNT } = INPUT_TYPE_MAP;\n\nclass AccountInput extends Component {\n  static propTypes = {\n    account: PropTypes.string,\n    resetInput: PropTypes.bool,\n    accountType: PropTypes.oneOf(ACCOUNT_TYPE_LIST).isRequired,\n    verifyTip: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n    tipLevel: PropTypes.oneOf(LEVEL_LIST),\n    inputType: PropTypes.oneOf(INPUT_TYPE_LIST),\n    phoneNumberConflictTip: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.element,\n      PropTypes.func,\n    ]),\n    onChange: PropTypes.func,\n    twoFactorAccountHooks: PropTypes.func,\n    phoneNumberConflictHooks: PropTypes.func,\n    phoneNumberInvalidHooks: PropTypes.func,\n    phoneNumberExistedHooks: PropTypes.func,\n    placeHolder: PropTypes.string,\n    customTip: PropTypes.bool,\n    onBlur: PropTypes.func,\n  };\n\n  static defaultProps = {\n    account: '',\n    resetInput: false,\n    onChange: () => {},\n    onBlur: () => {},\n    phoneNumberConflictTip: '',\n    twoFactorAccountHooks: () => {},\n    phoneNumberConflictHooks: () => {},\n    phoneNumberInvalidHooks: () => {},\n    phoneNumberExistedHooks: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      tipLevel: DEFAULT,\n      placeHolder: '',\n      verifyTip: '',\n    };\n    this.onFocus = this.onFocus.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setPlaceHolderText();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { verifyTip, tipLevel, inputType, account, resetInput } = nextProps;\n    if (inputType === ACCOUNT) {\n      this.setState({\n        verifyTip,\n        tipLevel,\n      });\n    }\n    if (resetInput) {\n      this.setState({\n        account,\n      });\n    }\n  }\n\n  onFocus() {\n    this.setState({\n      tipLevel: DEFAULT,\n      verifyTip: '',\n    });\n  }\n\n  onChange(ev) {\n    const {\n      target: { value },\n    } = ev;\n    const { onChange } = this.props;\n    this.setState({\n      account: value,\n    });\n    onChange(ev);\n  }\n\n  setPlaceHolderText() {\n    const { accountType, placeHolder } = this.props;\n    let text = '';\n    switch (accountType) {\n      case EMAIL:\n        text = INPUT_EMAIL;\n        break;\n      case PHONE_NUMBER:\n        text = INPUT_PHONE_NUMBER;\n        break;\n      default:\n        text = '';\n    }\n    this.setState({\n      placeHolder: placeHolder || text,\n    });\n  }\n\n  verifyInput() {\n    const { account } = this.state;\n    const {\n      accountType,\n      phoneNumberConflictTip,\n      twoFactorAccountHooks,\n      phoneNumberConflictHooks,\n      phoneNumberInvalidHooks,\n      phoneNumberExistedHooks,\n    } = this.props;\n    const isPhoneNumber = accountType === PHONE_NUMBER;\n    let verifyTip = '';\n    let tipLevel = '';\n    let params;\n    let promise;\n    if (!account) {\n      verifyTip = INFO_INCOMPELETE;\n      tipLevel = ERROR;\n      promise = Promise.reject(new Error(verifyTip));\n    } else if (isPhoneNumber && !SIMPLE_PHONE_REG.test(account)) {\n      verifyTip = INVALID_PHONE_NUMBER;\n      tipLevel = ERROR;\n      phoneNumberInvalidHooks();\n      promise = Promise.reject(new Error(verifyTip));\n    } else {\n      params = isPhoneNumber\n        ? {\n            username: account,\n            checkUsername: '',\n          }\n        : {\n            email: account,\n            checkEmail: '',\n          };\n      promise = get(REGISTRATION_CHECK, {\n        params,\n      })\n        .then(data => {\n          const isValidPhoneNumber = getValue(data, 'data.isValidPhoneNumber');\n          const message = getValue(data, 'data.message');\n          const isTwoFactorInUse = getValue(data, 'data.isTwoFactorInUse');\n          if (\n            isValidPhoneNumber === false ||\n            message === VIRTUAL_PHONENUMBER_CODE\n          ) {\n            verifyTip = INVALID_PHONE_NUMBER;\n            tipLevel = ERROR;\n            phoneNumberInvalidHooks();\n            return Promise.reject(new Error(verifyTip));\n          }\n          if (isTwoFactorInUse) {\n            // 两步验证的手机号，只做提示，不阻断注册流程\n            verifyTip = TWO_FACTOR_VERIFY_PHONE_NUMBER;\n            tipLevel = WARNING;\n            twoFactorAccountHooks();\n          } else {\n            tipLevel = DEFAULT;\n          }\n          return account;\n        })\n        .catch(data => {\n          const status = getValue(data, 'response.status');\n          const type = getValue(data, 'response.data.type');\n          switch (status) {\n            case 409:\n              if (isPhoneNumber && type === 'phoneNumberRegisteredAsUsername') {\n                // window.ga('send','event','account_signup','show_conflict_error','');\n                phoneNumberConflictTip();\n                phoneNumberConflictHooks();\n              } else {\n                verifyTip = isPhoneNumber\n                  ? PHONE_NUMBER_REGISTER_ALREADY\n                  : EMAIL_REGISTER_ALREADY;\n                if (isPhoneNumber) phoneNumberExistedHooks();\n              }\n              break;\n            case 400:\n              verifyTip = isPhoneNumber ? INVALID_PHONE_NUMBER : INVALID_EMAIL;\n              if (isPhoneNumber) phoneNumberInvalidHooks();\n              break;\n            case 412:\n              verifyTip = isPhoneNumber\n                ? PHONE_NUMBER_REGISTER_ALREADY\n                : EMAIL_REGISTER_ALREADY;\n              if (isPhoneNumber) phoneNumberExistedHooks();\n              break;\n            default:\n              verifyTip = verifyTip || COMMON_ERROR_TIPS;\n              break;\n          }\n          tipLevel = ERROR;\n          return Promise.reject(new Error(verifyTip));\n        });\n    }\n    return promise.finally(() => {\n      this.setState({\n        verifyTip,\n        tipLevel,\n      });\n    });\n  }\n\n  render() {\n    const { tipLevel, placeHolder, verifyTip, account } = this.state;\n    const { customTip, onBlur } = this.props;\n    return (\n      <div className={styles.accountInput}>\n        <BasicInput\n          placeHolder={placeHolder}\n          tipLevel={tipLevel}\n          value={account}\n          onFocus={this.onFocus}\n          onChange={this.onChange}\n          useDefaultTip={!customTip}\n          onBlur={onBlur}\n        >\n          {verifyTip}\n        </BasicInput>\n      </div>\n    );\n  }\n}\n\nexport default AccountInput;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport BasicInput from '../BasicInput';\nimport {\n  PASSWORD_FORMAT_TIPS,\n  PASSWORD_HAS_INVALID_SYMBOL,\n  SET_PASSWORD_TIPS,\n  INFO_INCOMPELETE,\n  WEAK_PASSWORD_TIPS,\n} from '../../config/copywriting';\nimport {\n  TIP_LEVEL_MAP,\n  INPUT_TYPE_MAP,\n} from '../../config/propsPermittedValueMap';\nimport { PASSWORD_REGEX } from '../../config/commonRegex';\nimport { transformObjectToArray } from '../../utils/commonUtils';\n\nimport styles from './index.module.scss';\n\nconst { DEFAULT, ERROR, WARNING } = TIP_LEVEL_MAP;\nconst { PASSWORD } = INPUT_TYPE_MAP;\nconst LEVEL_LIST = transformObjectToArray(TIP_LEVEL_MAP);\nconst INPUT_TYPE_LIST = transformObjectToArray(INPUT_TYPE_MAP);\n\nclass PasswordInput extends Component {\n  static propTypes = {\n    password: PropTypes.string,\n    resetInput: PropTypes.bool,\n    verifyTip: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n    tipLevel: PropTypes.oneOf(LEVEL_LIST),\n    inputType: PropTypes.oneOf(INPUT_TYPE_LIST),\n    onChange: PropTypes.func,\n    customTip: PropTypes.bool,\n    manual: PropTypes.bool,\n    onBlur: PropTypes.func,\n  };\n\n  static defaultProps = {\n    password: '',\n    resetInput: false,\n    onChange: () => {},\n    onBlur: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: '',\n      tipLevel: DEFAULT,\n      verifyTip: '',\n    };\n    this.onFocus = this.onFocus.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { verifyTip, tipLevel, inputType, password, resetInput } = nextProps;\n    if (inputType === PASSWORD) {\n      this.setState({\n        verifyTip,\n        tipLevel,\n      });\n    }\n    if (resetInput) {\n      this.setState({\n        password,\n      });\n    }\n  }\n\n  onFocus() {\n    this.setState({\n      tipLevel: DEFAULT,\n      verifyTip: '',\n    });\n  }\n\n  onChange(ev) {\n    const {\n      target: { value },\n    } = ev;\n    const { onChange, customTip, manual } = this.props;\n    console.log(customTip, manual);\n    if (customTip || manual) {\n      this.setState({\n        password: value,\n      });\n    } else {\n      this.setState(\n        {\n          password: value,\n        },\n        () => {\n          this.verifyInput().catch(err => {\n            console.log(err);\n          });\n        },\n      );\n    }\n\n    onChange(ev);\n  }\n\n  verifyInput() {\n    const { password } = this.state;\n    let verifyTip = '';\n    let tipLevel = '';\n    let promise;\n    if (!password) {\n      verifyTip = INFO_INCOMPELETE;\n      tipLevel = ERROR;\n      promise = Promise.reject(new Error(verifyTip));\n    } else if (password.length < 6) {\n      verifyTip = PASSWORD_FORMAT_TIPS;\n      tipLevel = ERROR;\n      promise = Promise.reject(new Error(verifyTip));\n    } else if (!PASSWORD_REGEX.test(password)) {\n      verifyTip = PASSWORD_HAS_INVALID_SYMBOL;\n      tipLevel = ERROR;\n      promise = Promise.reject(new Error(verifyTip));\n    } else if (password.length >= 6 && password.length < 8) {\n      verifyTip = WEAK_PASSWORD_TIPS;\n      tipLevel = WARNING;\n      promise = Promise.resolve(password);\n    } else {\n      tipLevel = DEFAULT;\n      promise = Promise.resolve(password);\n    }\n    return promise.finally(() => {\n      this.setState({\n        verifyTip,\n        tipLevel,\n      });\n    });\n  }\n\n  render() {\n    const { tipLevel, verifyTip, password } = this.state;\n    const { customTip, placeHolder, onBlur } = this.props;\n    return (\n      <div className={styles.passwordInput}>\n        <BasicInput\n          placeHolder={placeHolder || SET_PASSWORD_TIPS}\n          tipLevel={tipLevel}\n          value={password}\n          inputType=\"password\"\n          onFocus={this.onFocus}\n          onChange={this.onChange}\n          useDefaultTip={!customTip}\n          onBlur={onBlur}\n        >\n          {verifyTip}\n        </BasicInput>\n      </div>\n    );\n  }\n}\n\nexport default PasswordInput;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { get } from 'axios';\nimport { get as getValue } from 'lodash-es';\nimport jsCookie from 'js-cookie';\nimport RegistrationAccountInput from '../RegistrationAccountInput';\nimport RegistrationPasswordInput from '../RegistrationPasswordInput';\nimport VercodeInput from '../VercodeInput';\nimport AgreeClauseToCreate from '../AgreeClauseToCreate';\nimport {\n  ACCOUNT_TYPE_MAP,\n  TIP_LEVEL_MAP,\n  INPUT_TYPE_MAP,\n} from '../../config/propsPermittedValueMap';\nimport { CREATE_USER } from '../../config/interfaceUrl';\nimport {\n  ERROR_CODE_PASSWORD_TOO_WEAK,\n  ERROR_CODE_VALUE_DAES_NOT_MATCH,\n  ERROR_CODE_VALUE_NOT_PRESENT,\n  OTP_INTERGRITY_CHECK,\n  REGISTRATION_EMAIL_INVALID,\n} from '../../config/interfaceErrorCodeMap';\nimport {\n  INVALID_VERIFICATION_CODE,\n  PASSWORD_IS_TOO_SIMPLE,\n  INVALID_EMAIL,\n} from '../../config/copywriting';\nimport { transformObjectToArray } from '../../utils/commonUtils';\nimport {\n  ClyEnterPhoneNumber,\n  ClyGetVercode,\n  ClyEnterVercode,\n  ClyEnterPassword,\n} from '../../countly/countlyPoints';\n\nimport styles from './index.module.scss';\n\nconst ACCOUNT_TYPE_LIST = transformObjectToArray(ACCOUNT_TYPE_MAP);\nconst { PHONE_NUMBER } = ACCOUNT_TYPE_MAP;\nconst { DEFAULT, ERROR } = TIP_LEVEL_MAP;\nconst { ACCOUNT, PASSWORD, VERCODE, DEFAULT: INPUT_DEFAULT } = INPUT_TYPE_MAP;\n\nconst withCreateAcccountBasicForm = WrappedComponent => {\n  class CreateAccountBasicForm extends Component {\n    static propTypes = {\n      accountType: PropTypes.oneOf(ACCOUNT_TYPE_LIST).isRequired,\n      phoneNumberConflictTip: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.element,\n        PropTypes.func,\n      ]),\n      account: PropTypes.string,\n      password: PropTypes.string,\n      resetInput: PropTypes.bool,\n      vercodeTimeRemain: PropTypes.number,\n      onAccountInputChange: PropTypes.func,\n      onPasswordInputChange: PropTypes.func,\n      onVercodeTimeChange: PropTypes.func,\n    };\n\n    static defaultProps = {\n      account: '',\n      password: '',\n      resetInput: false,\n      vercodeTimeRemain: 0,\n      phoneNumberConflictTip: '',\n      onAccountInputChange: () => {},\n      onPasswordInputChange: () => {},\n      onVercodeTimeChange: () => {},\n    };\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        account: '',\n        smsSessionId: '',\n        countStatus: false,\n        inputType: INPUT_DEFAULT,\n        accountTipLevel: DEFAULT,\n        accountVerifyTip: '',\n        passwordTipLevel: DEFAULT,\n        passwordVerifyTip: '',\n        vercodeTipLevel: DEFAULT,\n        vercodeVerifyTip: '',\n      };\n      this.verifyAccountAndPassword = this.verifyAccountAndPassword.bind(this);\n      this.updateSmsSessionId = this.updateSmsSessionId.bind(this);\n      this.updateCountState = this.updateCountState.bind(this);\n      this.updateVerifyInfo = this.updateVerifyInfo.bind(this);\n      this.createAccount = this.createAccount.bind(this);\n    }\n\n    componentDidMount() {\n      const { accountType } = this.props;\n      if (accountType === PHONE_NUMBER) {\n        const smsSessionId = jsCookie.get('smsSessionId');\n        if (smsSessionId) {\n          this.setState({\n            smsSessionId,\n          });\n        }\n      }\n    }\n\n    verifyAccount = () => {\n      return Promise.all([\n        this.refs.accountInput.verifyInput(),\n      ]).then(([account]) => {\n        this.setState({\n          account,\n        });\n        return {\n          account,\n        };\n      });\n    }\n\n    verifyAccountAndPassword() {\n      return Promise.all([\n        this.refs.accountInput.verifyInput(),\n        this.refs.passwordInput.verifyInput(),\n      ]).then(([account, password]) => {\n        this.setState({\n          account,\n        });\n        return {\n          account,\n          password,\n        };\n      });\n    }\n\n\n    verifyAll() {\n      return Promise.all([\n        this.verifyAccountAndPassword(),\n        this.refs.vercodeInput.verifyInput(),\n      ]).then(([{ account, password }, vercode]) => {\n        return {\n          account,\n          password,\n          vercode,\n        };\n      });\n    }\n\n    updateSmsSessionId(smsSessionId) {\n      this.setState({\n        smsSessionId,\n      });\n      jsCookie.set('smsSessionId', smsSessionId, { expires: 1 / 24 / 60 }); // 存一个60秒过期的 sessionId 防止用户在获取验证码后误点刷新页面导致60秒内无法注册\n      if (smsSessionId) {\n        jsCookie.remove('speechSessionId');\n      }\n    }\n\n    updateCountState(countStatus) {\n      this.setState({\n        countStatus,\n      });\n      if (countStatus) {\n        this.saveAccountForSmsHelpPage();\n      }\n    }\n\n    saveAccountForSmsHelpPage() {\n      // window.ga('send','event','account_signup','click_verification_code_help','');\n      const { account } = this.state;\n      jsCookie.set('registrationSpeechAccount', account, {\n        expires: 1 / 24 / 60,\n      });\n    }\n\n    updateVerifyInfo(inputType, { tipLevel, verifyTip }) {\n      const verifyTipKey = `${inputType}VerifyTip`;\n      const tipLevelKey = `${inputType}TipLevel`;\n      this.setState({\n        inputType,\n        [verifyTipKey]: verifyTip,\n        [tipLevelKey]: tipLevel,\n      });\n    }\n\n    createAccount() {\n      const { smsSessionId } = this.state;\n      const { accountType } = this.props;\n      const isPhoneNumber = accountType === PHONE_NUMBER;\n      const verifyAll = isPhoneNumber\n        ? this.verifyAll.bind(this)\n        : this.verifyAccountAndPassword.bind(this);\n      let _account;\n      let _password;\n      return verifyAll()\n        .then(({ account, password, vercode }) => {\n          _account = account;\n          _password = password;\n          let params = {};\n          if (isPhoneNumber) {\n            const speechSessionId = jsCookie.get('speechSessionId');\n            const sessionId = speechSessionId || smsSessionId;\n            params = {\n              otp: vercode,\n              phoneNumber: account,\n              sessionId,\n              createPhoneNumber: '',\n              password,\n              code: 'webclient',\n            };\n          } else {\n            params = {\n              email: account,\n              createNoUsername: '',\n              password,\n              code: 'webclient',\n            };\n          }\n          return get(CREATE_USER, {\n            params,\n          });\n        })\n        .then(data => {\n          const success = getValue(data, 'data.success');\n          const message = isPhoneNumber\n            ? getValue(data, 'data.message')\n            : getValue(data, 'data.errors[0].message');\n          const ts = getValue(data, 'data.ts');\n          const tsh = getValue(data, 'data.tsh');\n          const errorCode = getValue(data, 'data.errors[0].code');\n          if (success) {\n            // const gaLabel = isPhoneNumber ? 'yx_phone' : 'yx_mail';\n            // window.ga('send','event','account_signup','success_yx_signup',gaLabel');\n            return { account: _account, password: _password, ts, tsh };\n          }\n          if (errorCode) {\n            switch (errorCode) {\n              case OTP_INTERGRITY_CHECK:\n              case ERROR_CODE_VALUE_NOT_PRESENT:\n                this.updateVerifyInfo(VERCODE, {\n                  tipLevel: ERROR,\n                  verifyTip: INVALID_VERIFICATION_CODE,\n                });\n                break;\n              case ERROR_CODE_VALUE_DAES_NOT_MATCH:\n                this.updateVerifyInfo(PASSWORD, {\n                  tipLevel: ERROR,\n                  verifyTip: message,\n                });\n                break;\n              case ERROR_CODE_PASSWORD_TOO_WEAK:\n                this.updateVerifyInfo(PASSWORD, {\n                  tipLevel: ERROR,\n                  verifyTip: PASSWORD_IS_TOO_SIMPLE,\n                });\n                break;\n              case REGISTRATION_EMAIL_INVALID:\n                this.updateVerifyInfo(ACCOUNT, {\n                  tipLevel: ERROR,\n                  verifyTip: INVALID_EMAIL,\n                });\n                break;\n              default:\n                break;\n            }\n          }\n          return Promise.reject();\n        })\n        .finally(() => {\n          this.setState({\n            inputType: INPUT_DEFAULT,\n          });\n        });\n    }\n\n    render() {\n      const {\n        accountType,\n        phoneNumberConflictTip,\n        account,\n        password,\n        resetInput,\n        vercodeTimeRemain,\n        onAccountInputChange,\n        onPasswordInputChange,\n        onVercodeTimeChange,\n        phoneNumberExistedHooks,\n        ...otherProps\n      } = this.props;\n      const {\n        countStatus,\n        inputType,\n        accountVerifyTip,\n        accountTipLevel,\n        passwordVerifyTip,\n        passwordTipLevel,\n        vercodeVerifyTip,\n        vercodeTipLevel,\n      } = this.state;\n      const allData = { countStatus, accountType, ...otherProps };\n      return (\n        <div className={styles.createAccountBasicForm}>\n          <div className={styles.inputWrapper}>\n            <RegistrationAccountInput\n              ref=\"accountInput\"\n              accountType={accountType}\n              phoneNumberConflictTip={phoneNumberConflictTip}\n              verifyTip={accountVerifyTip}\n              tipLevel={accountTipLevel}\n              inputType={inputType}\n              account={account}\n              resetInput={resetInput}\n              onChange={onAccountInputChange}\n              onBlur={ClyEnterPhoneNumber}\n              phoneNumberExistedHooks={phoneNumberExistedHooks}\n            />\n          </div>\n          {accountType === PHONE_NUMBER ? (\n            <div className={styles.inputWrapper}>\n              <VercodeInput\n                ref=\"vercodeInput\"\n                verify={this.verifyAccount}\n                updateSmsSessionId={this.updateSmsSessionId}\n                updateCountState={this.updateCountState}\n                verifyTip={vercodeVerifyTip}\n                tipLevel={vercodeTipLevel}\n                inputType={inputType}\n                vercodeTimeRemain={vercodeTimeRemain}\n                onVercodeTimeChange={onVercodeTimeChange}\n                getVercodeHooks={ClyGetVercode}\n                onBlur={ClyEnterVercode}\n              />\n            </div>\n          ) : (\n            ''\n          )}\n          <div className={styles.inputWrapper}>\n            <RegistrationPasswordInput\n              ref=\"passwordInput\"\n              verifyTip={passwordVerifyTip}\n              tipLevel={passwordTipLevel}\n              inputType={inputType}\n              password={password}\n              resetInput={resetInput}\n              onChange={onPasswordInputChange}\n              onBlur={ClyEnterPassword}\n            />\n          </div>\n          \n          <AgreeClauseToCreate />\n          <WrappedComponent\n            updateVerifyInfo={this.updateVerifyInfo}\n            createAccount={this.createAccount}\n            {...allData}\n          />\n        </div>\n      );\n    }\n  }\n\n  return CreateAccountBasicForm;\n};\n\nexport default withCreateAcccountBasicForm;\n","import React from 'react';\nimport { BIND_SECURITY_TIP } from '../../config/copywriting';\n\nimport styles from './index.module.scss';\n\nconst BindSecurityTip = () => {\n  return <p className={styles.bindSecurityTip}>{BIND_SECURITY_TIP}</p>;\n};\n\nexport default BindSecurityTip;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport jsCookie from 'js-cookie';\n\nimport BindCreateAccount from '../../components/BindCreateAccount';\nimport withCreateAcccountBasicForm from '../../components/CreateAccountBasicForm';\nimport BindSecurityTip from '../../components/BindSecurityTip';\nimport { ACCOUNT_TYPE_MAP } from '../../config/propsPermittedValueMap';\nimport {\n  PHONE_NUM_USED_TIPS,\n  USE_EMAIL_TO_REGISTE,\n  CANCEL,\n  USE_PHONE_NUM_TO_LOGIN,\n} from '../../config/copywriting';\nimport { saveBindRegistrationInfo, saveBindLoginInfo } from '../../store/actions';\nimport confirm from '../../components/Confirm/Confirm';\n\nimport styles from './index.module.scss';\nimport { CONFIRM } from '../../../lark/config/copyWriting';\n\nconst { EMAIL, PHONE_NUMBER } = ACCOUNT_TYPE_MAP;\nconst EnhancedBindCreatePhoneNumber = withCreateAcccountBasicForm(\n  BindCreateAccount,\n);\nconst EnhancedBindCreateEmail = withCreateAcccountBasicForm(BindCreateAccount);\n\nclass BindCreate extends Component {\n  static propTypes = {\n    bindRegistrationInfo: PropTypes.object.isRequired,\n    saveBindRegistrationInfo: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      accountType: PHONE_NUMBER,\n      account: '',\n      password: '',\n      resetInput: false,\n      vercodeTimeRemainToSave: 0,\n      vercodeTimeRemainToGet: 0,\n    };\n    this.redirectHandler = this.redirectHandler.bind(this);\n    this.onAccountInputChange = this.onAccountInputChange.bind(this);\n    this.onPasswordInputChange = this.onPasswordInputChange.bind(this);\n    this.onVercodeTimeChange = this.onVercodeTimeChange.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      bindRegistrationInfo: {\n        account,\n        password,\n        vercodeTimeRemain,\n        vercodeTimeStopTimeStamp,\n      },\n    } = this.props;\n    const nowTimeStamp = Date.now();\n    const timeDiff = Math.ceil(\n      (nowTimeStamp - vercodeTimeStopTimeStamp) / 1000,\n    );\n    const nowVercodeTimeRemain = vercodeTimeRemain - timeDiff;\n    this.setState(\n      {\n        account: account || jsCookie.get('account'),\n        password: password || (jsCookie.get('account') && jsCookie.get('password')), // 如果账号不存在只复现密码没有意义\n        resetInput: true,\n        vercodeTimeRemainToGet:\n          nowVercodeTimeRemain > 0 ? nowVercodeTimeRemain : 0,\n      },\n      () => {\n        this.setState({\n          resetInput: false,\n        });\n      },\n    );\n  }\n\n  componentWillUnmount() {\n    const { account, password, vercodeTimeRemainToSave } = this.state;\n    const { saveBindRegistrationInfo: _saveBindRegistrationInfo } = this.props;\n    _saveBindRegistrationInfo({\n      account,\n      password,\n      vercodeTimeRemain: vercodeTimeRemainToSave,\n      vercodeTimeStopTimeStamp: Date.now(),\n    });\n  }\n\n  onAccountInputChange({ target: { value } }) {\n    jsCookie.set('account', value, { expires: 1 / 24 / 30 }); // 设置两分钟的记忆时间，1代表一天，所以除以相应的数字来获取低于一天的过期时效\n    this.setState({\n      account: value,\n    });\n  }\n\n  onPasswordInputChange({ target: { value } }) {\n    jsCookie.set('password', value, { expires: 1 / 24 / 30 }); // 设置两分钟的记忆时间\n    this.setState({\n      password: value,\n    });\n  }\n\n  onVercodeTimeChange(time) {\n    this.setState({\n      vercodeTimeRemainToSave: time,\n    });\n  }\n\n  redirectHandler() {\n    this.setState({\n      accountType: EMAIL,\n    });\n  }\n\n  phoneNumberExistedHooks = () => {\n    const { account } = this.state;\n    const { saveBindLoginInfo: _saveBindLoginInfo } = this.props;\n\n    confirm({\n      content: USE_PHONE_NUM_TO_LOGIN,\n      operates: [{\n        text: CANCEL,\n      },\n      {\n        text: CONFIRM,\n        main: true,\n        onClick: () => {\n          _saveBindLoginInfo({\n            account,\n          });\n          this.props.history.push('/bind-existed');\n        }\n      }]\n    })\n  }\n\n  render() {\n    const {\n      accountType,\n      account,\n      password,\n      resetInput,\n      vercodeTimeRemainToGet,\n    } = this.state;\n\n    const phoneNumberConflictTip = () => {\n      confirm({\n        content: PHONE_NUM_USED_TIPS,\n        operates: [{\n          text: CANCEL,\n        },\n        {\n          text: USE_EMAIL_TO_REGISTE,\n          main: true,\n          onClick: this.redirectHandler,\n        }]\n      })\n    }\n\n    return (\n      <div className={styles.bindCreate}>\n        {// 为了在切换到邮箱注册时 重置所有状态,需要挂载两个独立的组件,否则需要在组件内做额外的处理\n        accountType === PHONE_NUMBER ? (\n          <div className={styles.bindPhoneNumberWrapper}>\n            <div className={styles.bindSecurityTipWrapper}>\n              <BindSecurityTip />\n            </div>\n            <EnhancedBindCreatePhoneNumber\n              accountType={PHONE_NUMBER}\n              phoneNumberConflictTip={phoneNumberConflictTip}\n              account={account}\n              password={password}\n              vercodeTimeRemain={vercodeTimeRemainToGet}\n              onAccountInputChange={this.onAccountInputChange}\n              onPasswordInputChange={this.onPasswordInputChange}\n              resetInput={resetInput}\n              onVercodeTimeChange={this.onVercodeTimeChange}\n              phoneNumberExistedHooks={this.phoneNumberExistedHooks}\n            />\n          </div>\n        ) : (\n          <EnhancedBindCreateEmail accountType={EMAIL} />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    bindRegistrationInfo: state.bindRegistrationInfo,\n  };\n};\nconst mapDispatchToProps = {\n  saveBindLoginInfo: info => {\n    return saveBindLoginInfo(info);\n  },\n  saveBindRegistrationInfo: info => {\n    return saveBindRegistrationInfo(info);\n  },\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BindCreate);\n"],"sourceRoot":""}