{"version":3,"sources":["account/routeComponents/TwoFactorVerification/index.module.scss","account/components/TwoFactorCodeInput/index.jsx","account/routeComponents/TwoFactorVerification/index.js","account/config/docTitle.js"],"names":["module","exports","twoFactorVerification","mainContent","title","sendTip","sendTo","inputWrapper","linkWrapper","confirmBtn","DEFAULT","TIP_LEVEL_MAP","ERROR","VERCODE","INPUT_TYPE_MAP","TwoFactorCodeInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","twoFactorCode","tipLevel","verifyTip","onFocus","bind","assertThisInitialized","onChange","nextProps","inputType","resetInput","setState","ev","value","target","promise","_this2","VERCODE_REG","test","Promise","resolve","INVALID_VERIFICATION_CODE","reject","Error","INFO_INCOMPELETE","finally","_this$state","_this$props","customTip","placeHolder","_react_16_8_5_react_default","a","createElement","className","styles","twoFactorCodeInput","BasicInput","INPUT_TWO_FACTOR_CODE","useDefaultTip","Component","defaultProps","TwoFactorVerification","onInputChange","_ref","onInputFocus","login","verifyResponseContent","targetUrl","_this$props$twoFactor","twoFactorInfo","twoFactorToken","fromWechatLogin","wechatSessionId","requesting","post","COMPELETE_TWOFACTOR","code","needSignature","then","data","getValue","authToken","success","window","location","href","catch","err","console","log","BIND_USER_BY_AUTH_TOKEN","sessionId","confirm","content","INVALID_WECHAT_SESSION","ACCOUNT_ALREADY_BIND","WECHAT_ALREADY_BIND","COMMON_ERROR_TIPS","wx","closeWindow","redirectToHelper","history","push","rememberMe","_this$props2","twoFactorEnabled","search","parse","decodeURIComponent","replace","document","back","_this$state2","twoFactorHint","TWO_FACTOR_CODE_SENDED_TIP","components_TwoFactorCodeInput","SIX_LENGTH_CODE","BasicButton","text","CONFIRM","loading","buttonWrapperClass","onClick","I_NEED_SOME_HELP_ABOUT_TWO_FACTOR_VERCODE","connect"],"mappings":"oGACAA,EAAAC,QAAA,CAAkBC,sBAAA,qDAAAC,YAAA,2CAAAC,MAAA,qCAAAC,QAAA,uCAAAC,OAAA,sCAAAC,aAAA,4CAAAC,YAAA,2CAAAC,WAAA,kQCgBVC,EAAmBC,IAAnBD,QAASE,EAAUD,IAAVC,MACTC,EAAYC,IAAZD,QAIFE,cAiBJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,cAAe,GACfC,SAAUhB,EACViB,UAAW,IAEbV,EAAKW,QAAUX,EAAKW,QAAQC,KAAbX,OAAAY,EAAA,EAAAZ,CAAAD,IACfA,EAAKc,SAAWd,EAAKc,SAASF,KAAdX,OAAAY,EAAA,EAAAZ,CAAAD,IARCA,yFAWOe,GAAW,IAC3BL,EAA8DK,EAA9DL,UAAWD,EAAmDM,EAAnDN,SAAUO,EAAyCD,EAAzCC,UAAWR,EAA8BO,EAA9BP,cAAeS,EAAeF,EAAfE,WACnDD,IAAcpB,GAChBO,KAAKe,SAAS,CACZR,YACAD,aAGAQ,GACFd,KAAKe,SAAS,CACZV,oDAMJL,KAAKe,SAAS,CACZT,SAAUhB,EACViB,UAAW,sCAINS,GAAI,IAECC,EACRD,EADFE,OAAUD,MAEJN,EAAaX,KAAKJ,MAAlBe,SACRX,KAAKe,SAAS,CACZV,cAAeY,IAEjBN,EAASK,yCAGG,IAIRG,EAJQC,EAAApB,KACJK,EAAkBL,KAAKI,MAAvBC,cACJE,EAAY,GACZD,EAAW,GAcf,OAZKD,EAIOgB,IAAYC,KAAKjB,IAK3BC,EAAWhB,EACX6B,EAAUI,QAAQC,QAAQnB,KAL1BE,EAAYkB,IACZnB,EAAWd,EACX2B,EAAUI,QAAQG,OAAO,IAAIC,MAAMpB,MANnCA,EAAYqB,IACZtB,EAAWd,EACX2B,EAAUI,QAAQG,OAAO,IAAIC,MAAMpB,KAS9BY,EAAQU,QAAQ,WACrBT,EAAKL,SAAS,CACZR,YACAD,gDAKG,IAAAwB,EACwC9B,KAAKI,MAA5CE,EADDwB,EACCxB,SAAUC,EADXuB,EACWvB,UAAWF,EADtByB,EACsBzB,cADtB0B,EAE4B/B,KAAKJ,MAAhCoC,EAFDD,EAECC,UAAWC,EAFZF,EAEYE,YACnB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOC,oBACrBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEP,YAAaA,GAAeQ,IAC5BnC,SAAUA,EACVW,MAAOZ,EACPG,QAASR,KAAKQ,QACdG,SAAUX,KAAKW,SACf+B,eAAgBV,GAEfzB,WAnGsBoC,aAA3BhD,EAWGiD,aAAe,CACpBvC,cAAe,GACfS,YAAY,EACZH,SAAU,cA4FChB,qDCjGPL,EAAmBC,IAAnBD,QAASE,EAAUD,IAAVC,MAEXqD,cAOJ,SAAAA,EAAYjD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6C,IACjBhD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+C,GAAA1C,KAAAH,KAAMJ,KAgCRkD,cAAgB,SAAAC,GAA2B,IAAd9B,EAAc8B,EAAxB7B,OAAUD,MAC3BpB,EAAKkB,SAAS,CACZV,cAAeY,KAnCApB,EAuCnBmD,aAAe,WACbnD,EAAKkB,SAAS,CACZT,SAAUhB,EACViB,UAAW,MA1CIV,EAkDnBoD,MAAQ,WAAM,IAMR9B,EACAb,EACAC,EACA2C,EATQpB,EACyBjC,EAAKO,MAAlCC,EADIyB,EACJzB,cAAe8C,EADXrB,EACWqB,UADXpB,EAKRlC,EAAKD,MALGwD,EAAArB,EAGVsB,cAAiBC,EAHPF,EAGOE,eAAgBC,EAHvBH,EAGuBG,gBACjCC,EAJUzB,EAIVyB,gBAMGnD,GAQHR,EAAKkB,SAAS,CACZ0C,YAAY,IAEdtC,EAAUuC,eACRC,IACA,CACEC,KAAMvD,EACNiD,kBAEF,CACEO,eAAe,IAEjBC,KAAK,SAAAC,GACL,IAAMH,EAAOI,YAASD,EAAM,aACtBE,EAAYD,YAASD,EAAM,0BACjCb,EAAwBc,YAASD,EAAM,gBACvC,IAAIG,GAAU,EACd,OAAQN,GACN,KAAK,IACHM,IAAYD,EACZ,MACF,QACEC,GAAU,EAEd,OAAIA,EACKD,EAEF1C,QAAQG,WAEZyB,EA0DHhC,EACG2C,KAAK,SAAAG,GACAA,IACFE,OAAOC,SAASC,KAAOlB,KAG1BmB,MAAM,SAAAC,GACLC,QAAQC,IAAIF,KAhEhBpD,EACG2C,KAAK,SAAAG,GACJ,OAAOP,eACLgB,IACA,CACET,YACAU,UAAWnB,GAEb,CACEK,eAAe,MAIpBC,KAAK,SAAAC,GACJ,IACIG,EACJ,OAFaF,YAASD,EAAM,cAG1B,KAAK,IACHG,IAAYhB,EACZ,MACF,KAAK,IACHgB,GAAU,EACVU,YAAQ,CAAEC,QAASC,MACnB,MACF,KAAK,IACHF,YAAQ,CAAEC,QAASE,MACnB,MACF,KAAK,IACCxB,EAEFW,IAAYhB,GAEZgB,GAAU,EACVU,YAAQ,CAAEC,QAASG,QAErB,MACF,QACEd,GAAU,EACVU,YAAQ,CAAEC,QAASI,MAEvB,OAAIf,EACKhB,EAEF3B,QAAQG,WAEhBoC,KAAK,WACJK,OAAOe,GAAGC,aAAehB,OAAOe,GAAGC,gBAEpCb,MAAM,SAAAC,GACLC,QAAQC,IAAIF,KAEb1C,QAAQ,WACPhC,EAAKkB,SAAS,CACZ0C,YAAY,QA1FpBnD,EAAWd,EACXe,EAAYqB,IACZ/B,EAAKkB,SAAS,CACZT,WACAC,gBAjEaV,EAwKnBuF,iBAAmB,WACjBvF,EAAKD,MAAMyF,QAAQC,KAAK,sBAvKxBzF,EAAKO,MAAQ,CACXC,cAAe,GACfkF,YAAY,EACZjF,SAAUhB,EACViB,UAAW,GACXkD,YAAY,GAPG5D,oFAWE,IAAA2F,EAIfxF,KAAKJ,MAFU6F,EAFAD,EAEjBnC,cAAiBoC,iBACjBJ,EAHiBG,EAGjBH,QAGYK,EACVvB,OADFC,SAAYsB,OAERvC,EAAcwC,gBAAMD,GAApBvC,UACNA,EAAYA,GAAayC,mBAAmBzC,GACvCsC,GACHJ,EAAQQ,QAAQ,KAElB7F,KAAKe,SAAS,CACZoC,0DAKF2C,SAAS9G,MCrEmB,4DDsF5BmF,OAAOkB,QAAQU,wCA6HR,IAAAC,EACqChG,KAAKI,MAAzCqD,EADDuC,EACCvC,WAAYnD,EADb0F,EACa1F,SAAUC,EADvByF,EACuBzF,UAEX0F,EACfjG,KAAKJ,MADPyD,cAAiB4C,cAEnB,OACE/D,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOxD,uBACrBoD,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOvD,aACrBmD,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOtD,OAAQkH,MAC9BhE,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAOrD,SAClBgH,GACC/D,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAOpD,QAAS+G,IAGrC/D,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOnD,cACrB+C,EAAAC,EAAAC,cAAC+D,EAAD,CAAoBlE,YAAamE,KACb9F,SAAUA,EACVC,UAAWA,EACXI,SAAUX,KAAK8C,cACftC,QAASR,KAAKgD,gBAGpCd,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAaC,KAAMC,IACNC,QAAS/C,EACTgD,mBAAoBnE,IAAOjD,WAC3BqH,QAAS1G,KAAKiD,QAE3Bf,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOlD,aACrB8C,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAaC,KAAMK,IACPF,mBAAoBnE,IAAOlD,YAC3BsH,QAAS1G,KAAKoF,6BAjNFzC,aAmOrBiE,sBATS,SAAAxG,GAEtB,MAAO,CACLoD,gBAFyCpD,EAAnCoD,gBAGNH,cAHyCjD,EAAlBiD,gBAMA,GAEZuD,CAGb/D","file":"static/js/TwoFactorVerification.7b26808e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"twoFactorVerification\":\"TwoFactorVerification_twoFactorVerification__Ona1d\",\"mainContent\":\"TwoFactorVerification_mainContent__1Coma\",\"title\":\"TwoFactorVerification_title__2EJ6c\",\"sendTip\":\"TwoFactorVerification_sendTip__2FKud\",\"sendTo\":\"TwoFactorVerification_sendTo__154Qx\",\"inputWrapper\":\"TwoFactorVerification_inputWrapper__1COjM\",\"linkWrapper\":\"TwoFactorVerification_linkWrapper__1Dbf0\",\"confirmBtn\":\"TwoFactorVerification_confirmBtn__1nD0H\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport BasicInput from '../BasicInput';\nimport {\n  INVALID_VERIFICATION_CODE,\n  INFO_INCOMPELETE,\n  INPUT_TWO_FACTOR_CODE,\n} from '../../config/copywriting';\nimport {\n  TIP_LEVEL_MAP,\n  INPUT_TYPE_MAP,\n} from '../../config/propsPermittedValueMap';\nimport { VERCODE_REG } from '../../config/commonRegex';\nimport { transformObjectToArray } from '../../utils/commonUtils';\n\nimport styles from './index.module.scss';\n\nconst { DEFAULT, ERROR } = TIP_LEVEL_MAP;\nconst { VERCODE } = INPUT_TYPE_MAP;\nconst LEVEL_LIST = transformObjectToArray(TIP_LEVEL_MAP);\nconst INPUT_TYPE_LIST = transformObjectToArray(INPUT_TYPE_MAP);\n\nclass TwoFactorCodeInput extends Component {\n  static propTypes = {\n    twoFactorCode: PropTypes.string,\n    resetInput: PropTypes.bool,\n    verifyTip: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n    tipLevel: PropTypes.oneOf(LEVEL_LIST),\n    inputType: PropTypes.oneOf(INPUT_TYPE_LIST),\n    onChange: PropTypes.func,\n    customTip: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    twoFactorCode: '',\n    resetInput: false,\n    onChange: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      twoFactorCode: '',\n      tipLevel: DEFAULT,\n      verifyTip: '',\n    };\n    this.onFocus = this.onFocus.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { verifyTip, tipLevel, inputType, twoFactorCode, resetInput } = nextProps;\n    if (inputType === VERCODE) {\n      this.setState({\n        verifyTip,\n        tipLevel,\n      });\n    }\n    if (resetInput) {\n      this.setState({\n        twoFactorCode,\n      });\n    }\n  }\n\n  onFocus() {\n    this.setState({\n      tipLevel: DEFAULT,\n      verifyTip: '',\n    });\n  }\n\n  onChange(ev) {\n    const {\n      target: { value },\n    } = ev;\n    const { onChange } = this.props;\n    this.setState({\n      twoFactorCode: value,\n    });\n    onChange(ev);\n  }\n\n  verifyInput() {\n    const { twoFactorCode } = this.state;\n    let verifyTip = '';\n    let tipLevel = '';\n    let promise;\n    if (!twoFactorCode) {\n      verifyTip = INFO_INCOMPELETE;\n      tipLevel = ERROR;\n      promise = Promise.reject(new Error(verifyTip));\n    } else if (!VERCODE_REG.test(twoFactorCode)) {\n      verifyTip = INVALID_VERIFICATION_CODE;\n      tipLevel = ERROR;\n      promise = Promise.reject(new Error(verifyTip));\n    } else {\n      tipLevel = DEFAULT;\n      promise = Promise.resolve(twoFactorCode);\n    }\n    return promise.finally(() => {\n      this.setState({\n        verifyTip,\n        tipLevel,\n      });\n    });\n  }\n\n  render() {\n    const { tipLevel, verifyTip, twoFactorCode } = this.state;\n    const { customTip, placeHolder } = this.props;\n    return (\n      <div className={styles.twoFactorCodeInput}>\n        <BasicInput\n          placeHolder={placeHolder || INPUT_TWO_FACTOR_CODE }\n          tipLevel={tipLevel}\n          value={twoFactorCode}\n          onFocus={this.onFocus}\n          onChange={this.onChange}\n          useDefaultTip={!customTip}\n        >\n          {verifyTip}\n        </BasicInput>\n      </div>\n    );\n  }\n}\n\nexport default TwoFactorCodeInput;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { post } from 'axios';\nimport { get as getValue } from 'lodash-es';\nimport { parse } from 'query-string';\nimport BasicButton from '../../components/BasicButton';\nimport TwoFactorCodeInput from '../../components/TwoFactorCodeInput';\nimport confirm from  '../../components/Confirm/Confirm';\nimport {\n  SIX_LENGTH_CODE,\n  TWO_FACTOR_CODE_SENDED_TIP,\n  CONFIRM,\n  I_NEED_SOME_HELP_ABOUT_TWO_FACTOR_VERCODE,\n  INFO_INCOMPELETE,\n  INVALID_WECHAT_SESSION,\n  ACCOUNT_ALREADY_BIND,\n  WECHAT_ALREADY_BIND,\n  COMMON_ERROR_TIPS,\n} from '../../config/copywriting';\nimport { LOGIN_URL } from '../../config/pageUrl';\nimport { TIP_LEVEL_MAP } from '../../config/propsPermittedValueMap';\nimport {\n  COMPELETE_TWOFACTOR,\n  BIND_USER_BY_AUTH_TOKEN,\n} from '../../config/interfaceUrl';\nimport { TWO_FACTOR_VERIFICATION } from '../../config/docTitle';\nimport { loginAfterBind } from '../../utils/commonUtils';\n\nimport styles from './index.module.scss';\n\nconst { DEFAULT, ERROR } = TIP_LEVEL_MAP;\n\nclass TwoFactorVerification extends Component {\n  static propTypes = {\n    twoFactorInfo: PropTypes.object.isRequired,\n    wechatSessionId: PropTypes.string.isRequired,\n    history: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      twoFactorCode: '',\n      rememberMe: false,\n      tipLevel: DEFAULT,\n      verifyTip: '',\n      requesting: false,\n    };\n  }\n\n  componentWillMount() {\n    const {\n      twoFactorInfo: { twoFactorEnabled },\n      history,\n    } = this.props;\n    const {\n      location: { search },\n    } = window;\n    let { targetUrl } = parse(search);\n    targetUrl = targetUrl && decodeURIComponent(targetUrl);\n    if (!twoFactorEnabled) {\n      history.replace('/');\n    }\n    this.setState({\n      targetUrl,\n    });\n  }\n\n  componentDidMount() {\n    document.title = TWO_FACTOR_VERIFICATION;\n  }\n\n  onInputChange = ({ target: { value } }) => {\n    this.setState({\n      twoFactorCode: value,\n    });\n  }\n\n  onInputFocus = () => {\n    this.setState({\n      tipLevel: DEFAULT,\n      verifyTip: '',\n    });\n  }\n\n  cancel() {\n    window.history.back();\n  }\n\n  login = () => {\n    const { twoFactorCode, targetUrl } = this.state;\n    const {\n      twoFactorInfo: { twoFactorToken, fromWechatLogin },\n      wechatSessionId,\n    } = this.props;\n    let promise;\n    let tipLevel;\n    let verifyTip;\n    let verifyResponseContent;\n    if (!twoFactorCode) {\n      tipLevel = ERROR;\n      verifyTip = INFO_INCOMPELETE;\n      this.setState({\n        tipLevel,\n        verifyTip,\n      });\n    } else {\n      this.setState({\n        requesting: true,\n      });\n      promise = post(\n        COMPELETE_TWOFACTOR,\n        {\n          code: twoFactorCode,\n          twoFactorToken,\n        },\n        {\n          needSignature: true,\n        },\n      ).then(data => {\n        const code = getValue(data, 'data.code');\n        const authToken = getValue(data, 'data.content.authToken');\n        verifyResponseContent = getValue(data, 'data.content');\n        let success = false;\n        switch (code) {\n          case 200:\n            success = !!authToken;\n            break;\n          default:\n            success = false;\n        }\n        if (success) {\n          return authToken;\n        }\n        return Promise.reject();\n      });\n      if (!targetUrl) {\n        promise\n          .then(authToken => {\n            return post(\n              BIND_USER_BY_AUTH_TOKEN,\n              {\n                authToken,\n                sessionId: wechatSessionId,\n              },\n              {\n                needSignature: true,\n              },\n            );\n          })\n          .then(data => {\n            const code = getValue(data, 'data.code');\n            let success;\n            switch (code) {\n              case 200:\n                success = !!verifyResponseContent;\n                break;\n              case 404:\n                success = false;\n                confirm({ content: INVALID_WECHAT_SESSION });\n                break;\n              case 423:\n                confirm({ content: ACCOUNT_ALREADY_BIND });\n                break;\n              case 425:\n                if (fromWechatLogin) {\n                  // 如果是从扫码页过来的 说明该微信已经绑定 是正常情况\n                  success = !!verifyResponseContent;\n                } else {\n                  success = false;\n                  confirm({ content: WECHAT_ALREADY_BIND });\n                }\n                break;\n              default:\n                success = false;\n                confirm({ content: COMMON_ERROR_TIPS });\n            }\n            if (success) {\n              return verifyResponseContent;\n            }\n            return Promise.reject();\n          })\n          .then(() => {\n            window.wx.closeWindow && window.wx.closeWindow();\n          })\n          .catch(err => {\n            console.log(err);\n          })\n          .finally(() => {\n            this.setState({\n              requesting: false,\n            });\n          });\n      } else {\n        promise\n          .then(authToken => {\n            if (authToken) {\n              window.location.href = targetUrl;\n            }\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      }\n    }\n  }\n\n  redirectToHelper = () => {\n    this.props.history.push('/twofactor-helper');\n  }\n\n  render() {\n    const { requesting, tipLevel, verifyTip } = this.state;\n    const {\n      twoFactorInfo: { twoFactorHint },\n    } = this.props;\n    return (\n      <div className={styles.twoFactorVerification}>\n        <div className={styles.mainContent}>\n          <h1 className={styles.title}>{TWO_FACTOR_CODE_SENDED_TIP}</h1>\n          <p className={styles.sendTip}>\n            {twoFactorHint && (\n              <span className={styles.sendTo}>{twoFactorHint}</span>\n            )}\n          </p>\n          <div className={styles.inputWrapper}>\n            <TwoFactorCodeInput placeHolder={SIX_LENGTH_CODE}\n                                tipLevel={tipLevel}\n                                verifyTip={verifyTip}\n                                onChange={this.onInputChange}\n                                onFocus={this.onInputFocus}\n            />\n          </div>\n          <BasicButton text={CONFIRM}\n                       loading={requesting}\n                       buttonWrapperClass={styles.confirmBtn}\n                       onClick={this.login}\n            />\n          <div className={styles.linkWrapper}>\n            <BasicButton text={I_NEED_SOME_HELP_ABOUT_TWO_FACTOR_VERCODE}\n                        buttonWrapperClass={styles.linkWrapper}\n                        onClick={this.redirectToHelper}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { wechatSessionId, twoFactorInfo } = state;\n  return {\n    wechatSessionId,\n    twoFactorInfo,\n  };\n};\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TwoFactorVerification);\n","const WECHAT_LOGIN = '微信登录';\nconst TWO_FACTOR_VERIFICATION = '两步验证';\n\nexport { WECHAT_LOGIN, TWO_FACTOR_VERIFICATION };\n"],"sourceRoot":""}