{"version":3,"sources":["account/components/AgreeClauseToCreate/index.js","account/components/AgreeClauseToCreate/index.module.scss","account/components/BindCreateAccount/index.module.scss","account/components/CreateAccountBasicForm/index.module.scss","account/components/BindSecurityTip/index.module.scss","account/routeComponents/BindCreate/index.module.scss","account/components/BindCreateAccount/index.js","account/components/RegistrationAccountInput/index.js","account/components/RegistrationPasswordInput/index.js","account/components/CreateAccountBasicForm/index.js","account/components/BindSecurityTip/index.js","account/routeComponents/BindCreate/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_config_pageUrl__WEBPACK_IMPORTED_MODULE_1__","_config_copywriting__WEBPACK_IMPORTED_MODULE_2__","_utils_copywritingHelper__WEBPACK_IMPORTED_MODULE_3__","_index_module_scss__WEBPACK_IMPORTED_MODULE_4__","_index_module_scss__WEBPACK_IMPORTED_MODULE_4___default","AgreeClauseToCreate","_ref","_ref$copywriting","copywriting","AGREE_CLAUSE_TO_CREATE","a","createElement","className","styles","agreeClauseToCreate","copywritingHelper","map","item","index","clauseLink","href","CLAUSE_OF_SERVICE_URL","target","rel","key","CLAUSE_OF_PRIVACY_URL","module","exports","bindCreateAccount","vercodeHelpLinkWrapper","hide","bindExistBtn","createAccountBasicForm","inputWrapper","bindSecurityTip","bindCreate","bindPhoneNumberWrapper","bindSecurityTipWrapper","PHONE_NUMBER","ACCOUNT_TYPE_MAP","ERROR","TIP_LEVEL_MAP","ACCOUNT","INPUT_TYPE_MAP","WECHAT_BIND","ACCOUNT_CREATE_PURPOSE","BindCreateAccount","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","redirectToExist","ClyClickBindExisted","history","push","state","requesting","goToBind","bind","assertThisInitialized","ClyEnterCreateAccountPage","verifyResponseContent","_this2","_this$props","createAccount","updateVerifyInfo","wechatSessionId","setState","ClyClickCreateAccount","then","account","password","post","VERIFY_CREDENTIAL","identity","needSignature","data","success","code","getValue","authToken","confirm","content","COMMON_ERROR_TIPS","Promise","reject","BIND_USER_BY_AUTH_TOKEN","sessionId","INVALID_WECHAT_SESSION","tipLevel","verifyTip","ACCOUNT_ALREADY_BIND","WECHAT_ALREADY_BIND","window","wx","closeWindow","catch","err","console","log","finally","_this$props2","countStatus","accountType","_react_16_8_5_react_default","BasicButton","text","CREATE_ACCOUNT_TO_BIND","onClick","loading","concat","CanNotGetVercode","accountCreatePurpose","ClyClickNoVercode","Separator","BIND_WITH_ALREADY_EXISTED_ACCOUNT","buttonWrapperClass","Component","withRouter","connect","EMAIL","DEFAULT","WARNING","AccountInput","placeHolder","onFocus","onChange","setPlaceHolderText","nextProps","inputType","resetInput","ev","value","INPUT_EMAIL","INPUT_PHONE_NUMBER","params","promise","phoneNumberConflictTip","twoFactorAccountHooks","phoneNumberConflictHooks","phoneNumberInvalidHooks","phoneNumberExistedHooks","isPhoneNumber","SIMPLE_PHONE_REG","test","INVALID_PHONE_NUMBER","Error","username","checkUsername","email","checkEmail","get","REGISTRATION_CHECK","isValidPhoneNumber","message","isTwoFactorInUse","VIRTUAL_PHONENUMBER_CODE","TWO_FACTOR_VERIFY_PHONE_NUMBER","status","type","PHONE_NUMBER_REGISTER_ALREADY","EMAIL_REGISTER_ALREADY","INVALID_EMAIL","INFO_INCOMPELETE","_this$state","_this$props3","customTip","onBlur","accountInput","BasicInput","useDefaultTip","defaultProps","PASSWORD","PasswordInput","manual","verifyInput","_this3","length","PASSWORD_FORMAT_TIPS","PASSWORD_REGEX","WEAK_PASSWORD_TIPS","resolve","PASSWORD_HAS_INVALID_SYMBOL","passwordInput","SET_PASSWORD_TIPS","VERCODE","INPUT_DEFAULT","withCreateAcccountBasicForm","WrappedComponent","CreateAccountBasicForm","_Component","smsSessionId","accountTipLevel","accountVerifyTip","passwordTipLevel","passwordVerifyTip","vercodeTipLevel","vercodeVerifyTip","verifyAccountAndPassword","updateSmsSessionId","updateCountState","inherits","createClass","jsCookie","all","refs","_ref2","slicedToArray","vercodeInput","_ref3","_ref4","_ref4$","vercode","set","expires","remove","saveAccountForSmsHelpPage","_ref5","_this$setState","verifyTipKey","tipLevelKey","defineProperty","_account","_password","verifyAll","_ref6","otp","phoneNumber","createPhoneNumber","createNoUsername","CREATE_USER","ts","tsh","errorCode","OTP_INTERGRITY_CHECK","ERROR_CODE_VALUE_NOT_PRESENT","INVALID_VERIFICATION_CODE","ERROR_CODE_VALUE_DAES_NOT_MATCH","ERROR_CODE_PASSWORD_TOO_WEAK","PASSWORD_IS_TOO_SIMPLE","REGISTRATION_EMAIL_INVALID","vercodeTimeRemain","onAccountInputChange","onPasswordInputChange","onVercodeTimeChange","otherProps","objectWithoutProperties","allData","objectSpread","RegistrationAccountInput","ref","ClyEnterPhoneNumber","VercodeInput","verify","getVercodeHooks","ClyGetVercode","ClyEnterVercode","RegistrationPasswordInput","ClyEnterPassword","assign","BindSecurityTip","BIND_SECURITY_TIP","EnhancedBindCreatePhoneNumber","EnhancedBindCreateEmail","BindCreate","_saveBindLoginInfo","saveBindLoginInfo","USE_PHONE_NUM_TO_LOGIN","operates","CANCEL","CONFIRM","main","vercodeTimeRemainToSave","vercodeTimeRemainToGet","redirectHandler","_this$props$bindRegis","bindRegistrationInfo","vercodeTimeStopTimeStamp","nowTimeStamp","Date","now","nowVercodeTimeRemain","Math","ceil","_saveBindRegistrationInfo","saveBindRegistrationInfo","time","_this$state2","components_BindSecurityTip","PHONE_NUM_USED_TIPS","USE_EMAIL_TO_REGISTE","mapDispatchToProps","info"],"mappings":"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","file":"static/js/BindCreate.2ec508e2.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  CLAUSE_OF_PRIVACY_URL,\n  CLAUSE_OF_SERVICE_URL,\n} from '../../config/pageUrl';\nimport { AGREE_CLAUSE_TO_CREATE } from '../../config/copywriting';\nimport copywritingHelper from '../../utils/copywritingHelper';\n\nimport styles from './index.module.scss';\n\nconst AgreeClauseToCreate = ({copywriting = AGREE_CLAUSE_TO_CREATE}) => (\n  <p className={styles.agreeClauseToCreate}>\n    {copywritingHelper(copywriting).map((item, index) => {\n      if (index === 1) {\n        return (\n          <a\n            className={styles.clauseLink}\n            href={CLAUSE_OF_SERVICE_URL}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            key={index}\n          >\n            {item}\n          </a>\n        );\n      }\n      if (index === 3) {\n        return (\n          <a\n            className={styles.clauseLink}\n            href={CLAUSE_OF_PRIVACY_URL}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            key={index}\n          >\n            {item}\n          </a>\n        );\n      }\n      return item;\n    })}\n  </p>\n);\n\nexport default AgreeClauseToCreate;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"agreeClauseToCreate\":\"AgreeClauseToCreate_agreeClauseToCreate__p9RuQ\",\"clauseLink\":\"AgreeClauseToCreate_clauseLink__2i6b7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bindCreateAccount\":\"BindCreateAccount_bindCreateAccount__2kiQV\",\"vercodeHelpLinkWrapper\":\"BindCreateAccount_vercodeHelpLinkWrapper__x5EVn\",\"hide\":\"BindCreateAccount_hide__3cWgZ\",\"bindExistBtn\":\"BindCreateAccount_bindExistBtn__1NuFI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createAccountBasicForm\":\"CreateAccountBasicForm_createAccountBasicForm__28JHD\",\"inputWrapper\":\"CreateAccountBasicForm_inputWrapper__3aJ-B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bindSecurityTip\":\"BindSecurityTip_bindSecurityTip__bL_Qj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bindCreate\":\"BindCreate_bindCreate__1RAh1\",\"bindPhoneNumberWrapper\":\"BindCreate_bindPhoneNumberWrapper__1UtIq\",\"bindSecurityTipWrapper\":\"BindCreate_bindSecurityTipWrapper__1OjO_\"};","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { post } from 'axios';\nimport { get as getValue } from 'lodash-es';\nimport BasicButton from '../BasicButton';\nimport CanNotGetVercode from '../CanNotGetVercode';\nimport Separator from '../Separator';\nimport confirm from '../../components/Confirm/Confirm';\n\nimport {\n  ACCOUNT_ALREADY_BIND,\n  COMMON_ERROR_TIPS,\n  CREATE_ACCOUNT_TO_BIND,\n  INVALID_WECHAT_SESSION,\n  WECHAT_ALREADY_BIND,\n  BIND_WITH_ALREADY_EXISTED_ACCOUNT,\n} from '../../config/copywriting';\nimport {\n  BIND_USER_BY_AUTH_TOKEN,\n  VERIFY_CREDENTIAL,\n} from '../../config/interfaceUrl';\nimport { LOGIN_URL } from '../../config/pageUrl';\nimport {\n  ACCOUNT_TYPE_MAP,\n  TIP_LEVEL_MAP,\n  INPUT_TYPE_MAP,\n  ACCOUNT_CREATE_PURPOSE,\n} from '../../config/propsPermittedValueMap';\nimport { loginAfterBind } from '../../utils/commonUtils';\nimport {\n  ClyEnterCreateAccountPage,\n  ClyClickCreateAccount,\n  ClyClickNoVercode,\n  ClyClickBindExisted,\n} from '../../countly/countlyPoints';\n\nimport styles from './index.module.scss';\n\nconst { PHONE_NUMBER } = ACCOUNT_TYPE_MAP;\nconst { ERROR } = TIP_LEVEL_MAP;\nconst { ACCOUNT } = INPUT_TYPE_MAP;\nconst { WECHAT_BIND } = ACCOUNT_CREATE_PURPOSE;\n\nclass BindCreateAccount extends Component {\n  static propTypes = {\n    accountType: PropTypes.string.isRequired,\n    countStatus: PropTypes.bool.isRequired,\n    updateVerifyInfo: PropTypes.func.isRequired,\n    createAccount: PropTypes.func.isRequired,\n    wechatSessionId: PropTypes.string.isRequired,\n    history: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      requesting: false,\n    };\n    this.goToBind = this.goToBind.bind(this);\n  }\n\n  componentDidMount() {\n    ClyEnterCreateAccountPage();\n  }\n\n  goToBind() {\n    const redirectTo = '';\n    let verifyResponseContent;\n    const {\n      createAccount,\n      updateVerifyInfo,\n      wechatSessionId,\n      history,\n    } = this.props;\n    this.setState({\n      requesting: true,\n    });\n    ClyClickCreateAccount();\n    createAccount()\n      .then(({ account, password }) => {\n        return post(\n          VERIFY_CREDENTIAL,\n          {\n            identity: account,\n            password,\n          },\n          {\n            needSignature: true,\n          },\n        );\n      })\n      .then(data => {\n        const code = getValue(data, 'data.code');\n        const authToken = getValue(data, 'data.content.authToken');\n        let success;\n        verifyResponseContent = getValue(data, 'data.content');\n        switch (code) {\n          case 200:\n            success = !!authToken;\n            break;\n          default:\n            confirm({ content:COMMON_ERROR_TIPS });\n            success = false;\n        }\n        if (success) {\n          return authToken;\n        }\n        return Promise.reject();\n      })\n      .then(authToken => {\n        return post(\n          BIND_USER_BY_AUTH_TOKEN,\n          {\n            authToken,\n            sessionId: wechatSessionId,\n          },\n          {\n            needSignature: true,\n          },\n        );\n      })\n      .then(data => {\n        const code = getValue(data, 'data.code');\n        let success;\n        switch (code) {\n          case 200:\n            success = true;\n            break;\n          case 404:\n            success = true;\n            confirm({ content: INVALID_WECHAT_SESSION });\n            break;\n          case 423:\n            updateVerifyInfo(ACCOUNT, {\n              tipLevel: ERROR,\n              verifyTip: ACCOUNT_ALREADY_BIND,\n            });\n            success = false;\n            break;\n          case 425:\n            success = false;\n            confirm({ content: WECHAT_ALREADY_BIND });\n            break;\n          default:\n            success = false;\n            confirm({ content: COMMON_ERROR_TIPS });\n        }\n        if (success) {\n          return verifyResponseContent;\n        }\n        return Promise.reject();\n      })\n      .then(() => {\n        window.wx.closeWindow && window.wx.closeWindow();\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => {\n        if (!redirectTo) {\n          this.setState({\n            requesting: false,\n          });\n        } else {\n          history.push(redirectTo);\n        }\n      });\n  }\n\n  redirectToExist = () => {\n    ClyClickBindExisted();\n    this.props.history.push('/bind-existed');\n  }\n\n  render() {\n    const { countStatus, accountType } = this.props;\n    const { requesting } = this.state;\n    return (\n      <div className={styles.bindCreateAccount}>\n        <BasicButton\n          text={CREATE_ACCOUNT_TO_BIND}\n          onClick={this.goToBind}\n          loading={requesting}\n        />\n        {accountType === PHONE_NUMBER ? (\n          <p\n            className={`${styles.vercodeHelpLinkWrapper} ${\n              countStatus ? '' : styles.hide\n            }`}\n          >\n            <CanNotGetVercode accountCreatePurpose={WECHAT_BIND}\n                              onClick={ClyClickNoVercode}\n            />\n          </p>\n        ) : (\n          ''\n        )}\n        <Separator />\n        <BasicButton\n          text={BIND_WITH_ALREADY_EXISTED_ACCOUNT}\n          buttonWrapperClass={styles.bindExistBtn}\n          onClick={this.redirectToExist}\n          loading={requesting}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    wechatSessionId: state.wechatSessionId,\n  };\n};\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(BindCreateAccount),\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { get } from 'axios';\nimport { get as getValue } from 'lodash-es';\nimport BasicInput from '../BasicInput';\nimport { REGISTRATION_CHECK } from '../../config/interfaceUrl';\nimport { VIRTUAL_PHONENUMBER_CODE } from '../../config/interfaceErrorCodeMap';\nimport {\n  EMAIL_REGISTER_ALREADY,\n  INPUT_EMAIL,\n  INPUT_PHONE_NUMBER,\n  INVALID_PHONE_NUMBER,\n  INVALID_EMAIL,\n  PHONE_NUMBER_REGISTER_ALREADY,\n  INFO_INCOMPELETE,\n  TWO_FACTOR_VERIFY_PHONE_NUMBER,\n  COMMON_ERROR_TIPS,\n} from '../../config/copywriting';\nimport {\n  ACCOUNT_TYPE_MAP,\n  TIP_LEVEL_MAP,\n  INPUT_TYPE_MAP,\n} from '../../config/propsPermittedValueMap';\nimport { SIMPLE_PHONE_REG } from '../../config/commonRegex';\nimport { transformObjectToArray } from '../../utils/commonUtils';\n\nimport styles from './index.module.scss';\n\nconst ACCOUNT_TYPE_LIST = transformObjectToArray(ACCOUNT_TYPE_MAP);\nconst LEVEL_LIST = transformObjectToArray(TIP_LEVEL_MAP);\nconst INPUT_TYPE_LIST = transformObjectToArray(INPUT_TYPE_MAP);\nconst { PHONE_NUMBER, EMAIL } = ACCOUNT_TYPE_MAP;\nconst { DEFAULT, ERROR, WARNING } = TIP_LEVEL_MAP;\nconst { ACCOUNT } = INPUT_TYPE_MAP;\n\nclass AccountInput extends Component {\n  static propTypes = {\n    account: PropTypes.string,\n    resetInput: PropTypes.bool,\n    accountType: PropTypes.oneOf(ACCOUNT_TYPE_LIST).isRequired,\n    verifyTip: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n    tipLevel: PropTypes.oneOf(LEVEL_LIST),\n    inputType: PropTypes.oneOf(INPUT_TYPE_LIST),\n    phoneNumberConflictTip: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.element,\n      PropTypes.func,\n    ]),\n    onChange: PropTypes.func,\n    twoFactorAccountHooks: PropTypes.func,\n    phoneNumberConflictHooks: PropTypes.func,\n    phoneNumberInvalidHooks: PropTypes.func,\n    phoneNumberExistedHooks: PropTypes.func,\n    placeHolder: PropTypes.string,\n    customTip: PropTypes.bool,\n    onBlur: PropTypes.func,\n  };\n\n  static defaultProps = {\n    account: '',\n    resetInput: false,\n    onChange: () => {},\n    onBlur: () => {},\n    phoneNumberConflictTip: '',\n    twoFactorAccountHooks: () => {},\n    phoneNumberConflictHooks: () => {},\n    phoneNumberInvalidHooks: () => {},\n    phoneNumberExistedHooks: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      tipLevel: DEFAULT,\n      placeHolder: '',\n      verifyTip: '',\n    };\n    this.onFocus = this.onFocus.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setPlaceHolderText();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { verifyTip, tipLevel, inputType, account, resetInput } = nextProps;\n    if (inputType === ACCOUNT) {\n      this.setState({\n        verifyTip,\n        tipLevel,\n      });\n    }\n    if (resetInput) {\n      this.setState({\n        account,\n      });\n    }\n  }\n\n  onFocus() {\n    this.setState({\n      tipLevel: DEFAULT,\n      verifyTip: '',\n    });\n  }\n\n  onChange(ev) {\n    const {\n      target: { value },\n    } = ev;\n    const { onChange } = this.props;\n    this.setState({\n      account: value,\n    });\n    onChange(ev);\n  }\n\n  setPlaceHolderText() {\n    const { accountType, placeHolder } = this.props;\n    let text = '';\n    switch (accountType) {\n      case EMAIL:\n        text = INPUT_EMAIL;\n        break;\n      case PHONE_NUMBER:\n        text = INPUT_PHONE_NUMBER;\n        break;\n      default:\n        text = '';\n    }\n    this.setState({\n      placeHolder: placeHolder || text,\n    });\n  }\n\n  verifyInput() {\n    const { account } = this.state;\n    const {\n      accountType,\n      phoneNumberConflictTip,\n      twoFactorAccountHooks,\n      phoneNumberConflictHooks,\n      phoneNumberInvalidHooks,\n      phoneNumberExistedHooks,\n    } = this.props;\n    const isPhoneNumber = accountType === PHONE_NUMBER;\n    let verifyTip = '';\n    let tipLevel = '';\n    let params;\n    let promise;\n    if (!account) {\n      verifyTip = INFO_INCOMPELETE;\n      tipLevel = ERROR;\n      promise = Promise.reject(new Error(verifyTip));\n    } else if (isPhoneNumber && !SIMPLE_PHONE_REG.test(account)) {\n      verifyTip = INVALID_PHONE_NUMBER;\n      tipLevel = ERROR;\n      phoneNumberInvalidHooks();\n      promise = Promise.reject(new Error(verifyTip));\n    } else {\n      params = isPhoneNumber\n        ? {\n            username: account,\n            checkUsername: '',\n          }\n        : {\n            email: account,\n            checkEmail: '',\n          };\n      promise = get(REGISTRATION_CHECK, {\n        params,\n      })\n        .then(data => {\n          const isValidPhoneNumber = getValue(data, 'data.isValidPhoneNumber');\n          const message = getValue(data, 'data.message');\n          const isTwoFactorInUse = getValue(data, 'data.isTwoFactorInUse');\n          if (\n            isValidPhoneNumber === false ||\n            message === VIRTUAL_PHONENUMBER_CODE\n          ) {\n            verifyTip = INVALID_PHONE_NUMBER;\n            tipLevel = ERROR;\n            phoneNumberInvalidHooks();\n            return Promise.reject(new Error(verifyTip));\n          }\n          if (isTwoFactorInUse) {\n            // 两步验证的手机号，只做提示，不阻断注册流程\n            verifyTip = TWO_FACTOR_VERIFY_PHONE_NUMBER;\n            tipLevel = WARNING;\n            twoFactorAccountHooks();\n          } else {\n            tipLevel = DEFAULT;\n          }\n          return account;\n        })\n        .catch(data => {\n          const status = getValue(data, 'response.status');\n          const type = getValue(data, 'response.data.type');\n          switch (status) {\n            case 409:\n              if (isPhoneNumber && type === 'phoneNumberRegisteredAsUsername') {\n                // window.ga('send','event','account_signup','show_conflict_error','');\n                phoneNumberConflictTip();\n                phoneNumberConflictHooks();\n              } else {\n                verifyTip = isPhoneNumber\n                  ? PHONE_NUMBER_REGISTER_ALREADY\n                  : EMAIL_REGISTER_ALREADY;\n                if (isPhoneNumber) phoneNumberExistedHooks();\n              }\n              break;\n            case 400:\n              verifyTip = isPhoneNumber ? INVALID_PHONE_NUMBER : INVALID_EMAIL;\n              if (isPhoneNumber) phoneNumberInvalidHooks();\n              break;\n            case 412:\n              verifyTip = isPhoneNumber\n                ? PHONE_NUMBER_REGISTER_ALREADY\n                : EMAIL_REGISTER_ALREADY;\n              if (isPhoneNumber) phoneNumberExistedHooks();\n              break;\n            default:\n              verifyTip = verifyTip || COMMON_ERROR_TIPS;\n              break;\n          }\n          tipLevel = ERROR;\n          return Promise.reject(new Error(verifyTip));\n        });\n    }\n    return promise.finally(() => {\n      this.setState({\n        verifyTip,\n        tipLevel,\n      });\n    });\n  }\n\n  render() {\n    const { tipLevel, placeHolder, verifyTip, account } = this.state;\n    const { customTip, onBlur } = this.props;\n    return (\n      <div className={styles.accountInput}>\n        <BasicInput\n          placeHolder={placeHolder}\n          tipLevel={tipLevel}\n          value={account}\n          onFocus={this.onFocus}\n          onChange={this.onChange}\n          useDefaultTip={!customTip}\n          onBlur={onBlur}\n        >\n          {verifyTip}\n        </BasicInput>\n      </div>\n    );\n  }\n}\n\nexport default AccountInput;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport BasicInput from '../BasicInput';\nimport {\n  PASSWORD_FORMAT_TIPS,\n  PASSWORD_HAS_INVALID_SYMBOL,\n  SET_PASSWORD_TIPS,\n  INFO_INCOMPELETE,\n  WEAK_PASSWORD_TIPS,\n} from '../../config/copywriting';\nimport {\n  TIP_LEVEL_MAP,\n  INPUT_TYPE_MAP,\n} from '../../config/propsPermittedValueMap';\nimport { PASSWORD_REGEX } from '../../config/commonRegex';\nimport { transformObjectToArray } from '../../utils/commonUtils';\n\nimport styles from './index.module.scss';\n\nconst { DEFAULT, ERROR, WARNING } = TIP_LEVEL_MAP;\nconst { PASSWORD } = INPUT_TYPE_MAP;\nconst LEVEL_LIST = transformObjectToArray(TIP_LEVEL_MAP);\nconst INPUT_TYPE_LIST = transformObjectToArray(INPUT_TYPE_MAP);\n\nclass PasswordInput extends Component {\n  static propTypes = {\n    password: PropTypes.string,\n    resetInput: PropTypes.bool,\n    verifyTip: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n    tipLevel: PropTypes.oneOf(LEVEL_LIST),\n    inputType: PropTypes.oneOf(INPUT_TYPE_LIST),\n    onChange: PropTypes.func,\n    customTip: PropTypes.bool,\n    manual: PropTypes.bool,\n    onBlur: PropTypes.func,\n  };\n\n  static defaultProps = {\n    password: '',\n    resetInput: false,\n    onChange: () => {},\n    onBlur: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: '',\n      tipLevel: DEFAULT,\n      verifyTip: '',\n    };\n    this.onFocus = this.onFocus.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { verifyTip, tipLevel, inputType, password, resetInput } = nextProps;\n    if (inputType === PASSWORD) {\n      this.setState({\n        verifyTip,\n        tipLevel,\n      });\n    }\n    if (resetInput) {\n      this.setState({\n        password,\n      });\n    }\n  }\n\n  onFocus() {\n    this.setState({\n      tipLevel: DEFAULT,\n      verifyTip: '',\n    });\n  }\n\n  onChange(ev) {\n    const {\n      target: { value },\n    } = ev;\n    const { onChange, customTip, manual } = this.props;\n    console.log(customTip, manual);\n    if (customTip || manual) {\n      this.setState({\n        password: value,\n      });\n    } else {\n      this.setState(\n        {\n          password: value,\n        },\n        () => {\n          this.verifyInput().catch(err => {\n            console.log(err);\n          });\n        },\n      );\n    }\n\n    onChange(ev);\n  }\n\n  verifyInput() {\n    const { password } = this.state;\n    let verifyTip = '';\n    let tipLevel = '';\n    let promise;\n    if (!password) {\n      verifyTip = INFO_INCOMPELETE;\n      tipLevel = ERROR;\n      promise = Promise.reject(new Error(verifyTip));\n    } else if (password.length < 6) {\n      verifyTip = PASSWORD_FORMAT_TIPS;\n      tipLevel = ERROR;\n      promise = Promise.reject(new Error(verifyTip));\n    } else if (!PASSWORD_REGEX.test(password)) {\n      verifyTip = PASSWORD_HAS_INVALID_SYMBOL;\n      tipLevel = ERROR;\n      promise = Promise.reject(new Error(verifyTip));\n    } else if (password.length >= 6 && password.length < 8) {\n      verifyTip = WEAK_PASSWORD_TIPS;\n      tipLevel = WARNING;\n      promise = Promise.resolve(password);\n    } else {\n      tipLevel = DEFAULT;\n      promise = Promise.resolve(password);\n    }\n    return promise.finally(() => {\n      this.setState({\n        verifyTip,\n        tipLevel,\n      });\n    });\n  }\n\n  render() {\n    const { tipLevel, verifyTip, password } = this.state;\n    const { customTip, placeHolder, onBlur } = this.props;\n    return (\n      <div className={styles.passwordInput}>\n        <BasicInput\n          placeHolder={placeHolder || SET_PASSWORD_TIPS}\n          tipLevel={tipLevel}\n          value={password}\n          inputType=\"password\"\n          onFocus={this.onFocus}\n          onChange={this.onChange}\n          useDefaultTip={!customTip}\n          onBlur={onBlur}\n        >\n          {verifyTip}\n        </BasicInput>\n      </div>\n    );\n  }\n}\n\nexport default PasswordInput;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { get } from 'axios';\nimport { get as getValue } from 'lodash-es';\nimport jsCookie from 'js-cookie';\nimport RegistrationAccountInput from '../RegistrationAccountInput';\nimport RegistrationPasswordInput from '../RegistrationPasswordInput';\nimport VercodeInput from '../VercodeInput';\nimport AgreeClauseToCreate from '../AgreeClauseToCreate';\nimport {\n  ACCOUNT_TYPE_MAP,\n  TIP_LEVEL_MAP,\n  INPUT_TYPE_MAP,\n} from '../../config/propsPermittedValueMap';\nimport { CREATE_USER } from '../../config/interfaceUrl';\nimport {\n  ERROR_CODE_PASSWORD_TOO_WEAK,\n  ERROR_CODE_VALUE_DAES_NOT_MATCH,\n  ERROR_CODE_VALUE_NOT_PRESENT,\n  OTP_INTERGRITY_CHECK,\n  REGISTRATION_EMAIL_INVALID,\n} from '../../config/interfaceErrorCodeMap';\nimport {\n  INVALID_VERIFICATION_CODE,\n  PASSWORD_IS_TOO_SIMPLE,\n  INVALID_EMAIL,\n} from '../../config/copywriting';\nimport { transformObjectToArray } from '../../utils/commonUtils';\nimport {\n  ClyEnterPhoneNumber,\n  ClyGetVercode,\n  ClyEnterVercode,\n  ClyEnterPassword,\n} from '../../countly/countlyPoints';\n\nimport styles from './index.module.scss';\n\nconst ACCOUNT_TYPE_LIST = transformObjectToArray(ACCOUNT_TYPE_MAP);\nconst { PHONE_NUMBER } = ACCOUNT_TYPE_MAP;\nconst { DEFAULT, ERROR } = TIP_LEVEL_MAP;\nconst { ACCOUNT, PASSWORD, VERCODE, DEFAULT: INPUT_DEFAULT } = INPUT_TYPE_MAP;\n\nconst withCreateAcccountBasicForm = WrappedComponent => {\n  class CreateAccountBasicForm extends Component {\n    static propTypes = {\n      accountType: PropTypes.oneOf(ACCOUNT_TYPE_LIST).isRequired,\n      phoneNumberConflictTip: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.element,\n        PropTypes.func,\n      ]),\n      account: PropTypes.string,\n      password: PropTypes.string,\n      resetInput: PropTypes.bool,\n      vercodeTimeRemain: PropTypes.number,\n      onAccountInputChange: PropTypes.func,\n      onPasswordInputChange: PropTypes.func,\n      onVercodeTimeChange: PropTypes.func,\n    };\n\n    static defaultProps = {\n      account: '',\n      password: '',\n      resetInput: false,\n      vercodeTimeRemain: 0,\n      phoneNumberConflictTip: '',\n      onAccountInputChange: () => {},\n      onPasswordInputChange: () => {},\n      onVercodeTimeChange: () => {},\n    };\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        account: '',\n        smsSessionId: '',\n        countStatus: false,\n        inputType: INPUT_DEFAULT,\n        accountTipLevel: DEFAULT,\n        accountVerifyTip: '',\n        passwordTipLevel: DEFAULT,\n        passwordVerifyTip: '',\n        vercodeTipLevel: DEFAULT,\n        vercodeVerifyTip: '',\n      };\n      this.verifyAccountAndPassword = this.verifyAccountAndPassword.bind(this);\n      this.updateSmsSessionId = this.updateSmsSessionId.bind(this);\n      this.updateCountState = this.updateCountState.bind(this);\n      this.updateVerifyInfo = this.updateVerifyInfo.bind(this);\n      this.createAccount = this.createAccount.bind(this);\n    }\n\n    componentDidMount() {\n      const { accountType } = this.props;\n      if (accountType === PHONE_NUMBER) {\n        const smsSessionId = jsCookie.get('smsSessionId');\n        if (smsSessionId) {\n          this.setState({\n            smsSessionId,\n          });\n        }\n      }\n    }\n\n    verifyAccountAndPassword() {\n      return Promise.all([\n        this.refs.accountInput.verifyInput(),\n        this.refs.passwordInput.verifyInput(),\n      ]).then(([account, password]) => {\n        this.setState({\n          account,\n        });\n        return {\n          account,\n          password,\n        };\n      });\n    }\n\n    verifyAll() {\n      return Promise.all([\n        this.verifyAccountAndPassword(),\n        this.refs.vercodeInput.verifyInput(),\n      ]).then(([{ account, password }, vercode]) => {\n        return {\n          account,\n          password,\n          vercode,\n        };\n      });\n    }\n\n    updateSmsSessionId(smsSessionId) {\n      this.setState({\n        smsSessionId,\n      });\n      jsCookie.set('smsSessionId', smsSessionId, { expires: 1 / 24 / 60 }); // 存一个60秒过期的 sessionId 防止用户在获取验证码后误点刷新页面导致60秒内无法注册\n      if (smsSessionId) {\n        jsCookie.remove('speechSessionId');\n      }\n    }\n\n    updateCountState(countStatus) {\n      this.setState({\n        countStatus,\n      });\n      if (countStatus) {\n        this.saveAccountForSmsHelpPage();\n      }\n    }\n\n    saveAccountForSmsHelpPage() {\n      // window.ga('send','event','account_signup','click_verification_code_help','');\n      const { account } = this.state;\n      jsCookie.set('registrationSpeechAccount', account, {\n        expires: 1 / 24 / 60,\n      });\n    }\n\n    updateVerifyInfo(inputType, { tipLevel, verifyTip }) {\n      const verifyTipKey = `${inputType}VerifyTip`;\n      const tipLevelKey = `${inputType}TipLevel`;\n      this.setState({\n        inputType,\n        [verifyTipKey]: verifyTip,\n        [tipLevelKey]: tipLevel,\n      });\n    }\n\n    createAccount() {\n      const { smsSessionId } = this.state;\n      const { accountType } = this.props;\n      const isPhoneNumber = accountType === PHONE_NUMBER;\n      const verifyAll = isPhoneNumber\n        ? this.verifyAll.bind(this)\n        : this.verifyAccountAndPassword.bind(this);\n      let _account;\n      let _password;\n      return verifyAll()\n        .then(({ account, password, vercode }) => {\n          _account = account;\n          _password = password;\n          let params = {};\n          if (isPhoneNumber) {\n            const speechSessionId = jsCookie.get('speechSessionId');\n            const sessionId = speechSessionId || smsSessionId;\n            params = {\n              otp: vercode,\n              phoneNumber: account,\n              sessionId,\n              createPhoneNumber: '',\n              password,\n              code: 'webclient',\n            };\n          } else {\n            params = {\n              email: account,\n              createNoUsername: '',\n              password,\n              code: 'webclient',\n            };\n          }\n          return get(CREATE_USER, {\n            params,\n          });\n        })\n        .then(data => {\n          const success = getValue(data, 'data.success');\n          const message = isPhoneNumber\n            ? getValue(data, 'data.message')\n            : getValue(data, 'data.errors[0].message');\n          const ts = getValue(data, 'data.ts');\n          const tsh = getValue(data, 'data.tsh');\n          const errorCode = getValue(data, 'data.errors[0].code');\n          if (success) {\n            // const gaLabel = isPhoneNumber ? 'yx_phone' : 'yx_mail';\n            // window.ga('send','event','account_signup','success_yx_signup',gaLabel');\n            return { account: _account, password: _password, ts, tsh };\n          }\n          if (errorCode) {\n            switch (errorCode) {\n              case OTP_INTERGRITY_CHECK:\n              case ERROR_CODE_VALUE_NOT_PRESENT:\n                this.updateVerifyInfo(VERCODE, {\n                  tipLevel: ERROR,\n                  verifyTip: INVALID_VERIFICATION_CODE,\n                });\n                break;\n              case ERROR_CODE_VALUE_DAES_NOT_MATCH:\n                this.updateVerifyInfo(PASSWORD, {\n                  tipLevel: ERROR,\n                  verifyTip: message,\n                });\n                break;\n              case ERROR_CODE_PASSWORD_TOO_WEAK:\n                this.updateVerifyInfo(PASSWORD, {\n                  tipLevel: ERROR,\n                  verifyTip: PASSWORD_IS_TOO_SIMPLE,\n                });\n                break;\n              case REGISTRATION_EMAIL_INVALID:\n                this.updateVerifyInfo(ACCOUNT, {\n                  tipLevel: ERROR,\n                  verifyTip: INVALID_EMAIL,\n                });\n                break;\n              default:\n                break;\n            }\n          }\n          return Promise.reject();\n        })\n        .finally(() => {\n          this.setState({\n            inputType: INPUT_DEFAULT,\n          });\n        });\n    }\n\n    render() {\n      const {\n        accountType,\n        phoneNumberConflictTip,\n        account,\n        password,\n        resetInput,\n        vercodeTimeRemain,\n        onAccountInputChange,\n        onPasswordInputChange,\n        onVercodeTimeChange,\n        phoneNumberExistedHooks,\n        ...otherProps\n      } = this.props;\n      const {\n        countStatus,\n        inputType,\n        accountVerifyTip,\n        accountTipLevel,\n        passwordVerifyTip,\n        passwordTipLevel,\n        vercodeVerifyTip,\n        vercodeTipLevel,\n      } = this.state;\n      const allData = { countStatus, accountType, ...otherProps };\n      return (\n        <div className={styles.createAccountBasicForm}>\n          <div className={styles.inputWrapper}>\n            <RegistrationAccountInput\n              ref=\"accountInput\"\n              accountType={accountType}\n              phoneNumberConflictTip={phoneNumberConflictTip}\n              verifyTip={accountVerifyTip}\n              tipLevel={accountTipLevel}\n              inputType={inputType}\n              account={account}\n              resetInput={resetInput}\n              onChange={onAccountInputChange}\n              onBlur={ClyEnterPhoneNumber}\n              phoneNumberExistedHooks={phoneNumberExistedHooks}\n            />\n          </div>\n          {accountType === PHONE_NUMBER ? (\n            <div className={styles.inputWrapper}>\n              <VercodeInput\n                ref=\"vercodeInput\"\n                verify={this.verifyAccountAndPassword}\n                updateSmsSessionId={this.updateSmsSessionId}\n                updateCountState={this.updateCountState}\n                verifyTip={vercodeVerifyTip}\n                tipLevel={vercodeTipLevel}\n                inputType={inputType}\n                vercodeTimeRemain={vercodeTimeRemain}\n                onVercodeTimeChange={onVercodeTimeChange}\n                getVercodeHooks={ClyGetVercode}\n                onBlur={ClyEnterVercode}\n              />\n            </div>\n          ) : (\n            ''\n          )}\n          <div className={styles.inputWrapper}>\n            <RegistrationPasswordInput\n              ref=\"passwordInput\"\n              verifyTip={passwordVerifyTip}\n              tipLevel={passwordTipLevel}\n              inputType={inputType}\n              password={password}\n              resetInput={resetInput}\n              onChange={onPasswordInputChange}\n              onBlur={ClyEnterPassword}\n            />\n          </div>\n          \n          <AgreeClauseToCreate />\n          <WrappedComponent\n            updateVerifyInfo={this.updateVerifyInfo}\n            createAccount={this.createAccount}\n            {...allData}\n          />\n        </div>\n      );\n    }\n  }\n\n  return CreateAccountBasicForm;\n};\n\nexport default withCreateAcccountBasicForm;\n","import React from 'react';\nimport { BIND_SECURITY_TIP } from '../../config/copywriting';\n\nimport styles from './index.module.scss';\n\nconst BindSecurityTip = () => {\n  return <p className={styles.bindSecurityTip}>{BIND_SECURITY_TIP}</p>;\n};\n\nexport default BindSecurityTip;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport BindCreateAccount from '../../components/BindCreateAccount';\nimport withCreateAcccountBasicForm from '../../components/CreateAccountBasicForm';\nimport BindSecurityTip from '../../components/BindSecurityTip';\nimport { ACCOUNT_TYPE_MAP } from '../../config/propsPermittedValueMap';\nimport {\n  PHONE_NUM_USED_TIPS,\n  USE_EMAIL_TO_REGISTE,\n  CANCEL,\n  USE_PHONE_NUM_TO_LOGIN,\n} from '../../config/copywriting';\nimport { saveBindRegistrationInfo, saveBindLoginInfo } from '../../store/actions';\nimport confirm from '../../components/Confirm/Confirm';\n\nimport styles from './index.module.scss';\nimport { CONFIRM } from '../../../lark/config/copyWriting';\n\nconst { EMAIL, PHONE_NUMBER } = ACCOUNT_TYPE_MAP;\nconst EnhancedBindCreatePhoneNumber = withCreateAcccountBasicForm(\n  BindCreateAccount,\n);\nconst EnhancedBindCreateEmail = withCreateAcccountBasicForm(BindCreateAccount);\n\nclass BindCreate extends Component {\n  static propTypes = {\n    bindRegistrationInfo: PropTypes.object.isRequired,\n    saveBindRegistrationInfo: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      accountType: PHONE_NUMBER,\n      account: '',\n      password: '',\n      resetInput: false,\n      vercodeTimeRemainToSave: 0,\n      vercodeTimeRemainToGet: 0,\n    };\n    this.redirectHandler = this.redirectHandler.bind(this);\n    this.onAccountInputChange = this.onAccountInputChange.bind(this);\n    this.onPasswordInputChange = this.onPasswordInputChange.bind(this);\n    this.onVercodeTimeChange = this.onVercodeTimeChange.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      bindRegistrationInfo: {\n        account,\n        password,\n        vercodeTimeRemain,\n        vercodeTimeStopTimeStamp,\n      },\n    } = this.props;\n    const nowTimeStamp = Date.now();\n    const timeDiff = Math.ceil(\n      (nowTimeStamp - vercodeTimeStopTimeStamp) / 1000,\n    );\n    const nowVercodeTimeRemain = vercodeTimeRemain - timeDiff;\n    this.setState(\n      {\n        account,\n        password,\n        resetInput: true,\n        vercodeTimeRemainToGet:\n          nowVercodeTimeRemain > 0 ? nowVercodeTimeRemain : 0,\n      },\n      () => {\n        this.setState({\n          resetInput: false,\n        });\n      },\n    );\n  }\n\n  componentWillUnmount() {\n    const { account, password, vercodeTimeRemainToSave } = this.state;\n    const { saveBindRegistrationInfo: _saveBindRegistrationInfo } = this.props;\n    _saveBindRegistrationInfo({\n      account,\n      password,\n      vercodeTimeRemain: vercodeTimeRemainToSave,\n      vercodeTimeStopTimeStamp: Date.now(),\n    });\n  }\n\n  onAccountInputChange({ target: { value } }) {\n    this.setState({\n      account: value,\n    });\n  }\n\n  onPasswordInputChange({ target: { value } }) {\n    this.setState({\n      password: value,\n    });\n  }\n\n  onVercodeTimeChange(time) {\n    this.setState({\n      vercodeTimeRemainToSave: time,\n    });\n  }\n\n  redirectHandler() {\n    this.setState({\n      accountType: EMAIL,\n    });\n  }\n\n  phoneNumberExistedHooks = () => {\n    const { account } = this.state;\n    const { saveBindLoginInfo: _saveBindLoginInfo } = this.props;\n\n    confirm({\n      content: USE_PHONE_NUM_TO_LOGIN,\n      operates: [{\n        text: CANCEL,\n      },\n      {\n        text: CONFIRM,\n        main: true,\n        onClick: () => {\n          _saveBindLoginInfo({\n            account,\n          });\n          this.props.history.push('/bind-existed');\n        }\n      }]\n    })\n  }\n\n  render() {\n    const {\n      accountType,\n      account,\n      password,\n      resetInput,\n      vercodeTimeRemainToGet,\n    } = this.state;\n\n    const phoneNumberConflictTip = () => {\n      confirm({\n        content: PHONE_NUM_USED_TIPS,\n        operates: [{\n          text: CANCEL,\n        },\n        {\n          text: USE_EMAIL_TO_REGISTE,\n          main: true,\n          onClick: this.redirectHandler,\n        }]\n      })\n    }\n\n    return (\n      <div className={styles.bindCreate}>\n        {// 为了在切换到邮箱注册时 重置所有状态,需要挂载两个独立的组件,否则需要在组件内做额外的处理\n        accountType === PHONE_NUMBER ? (\n          <div className={styles.bindPhoneNumberWrapper}>\n            <div className={styles.bindSecurityTipWrapper}>\n              <BindSecurityTip />\n            </div>\n            <EnhancedBindCreatePhoneNumber\n              accountType={PHONE_NUMBER}\n              phoneNumberConflictTip={phoneNumberConflictTip}\n              account={account}\n              password={password}\n              vercodeTimeRemain={vercodeTimeRemainToGet}\n              onAccountInputChange={this.onAccountInputChange}\n              onPasswordInputChange={this.onPasswordInputChange}\n              resetInput={resetInput}\n              onVercodeTimeChange={this.onVercodeTimeChange}\n              phoneNumberExistedHooks={this.phoneNumberExistedHooks}\n            />\n          </div>\n        ) : (\n          <EnhancedBindCreateEmail accountType={EMAIL} />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    bindRegistrationInfo: state.bindRegistrationInfo,\n  };\n};\nconst mapDispatchToProps = {\n  saveBindLoginInfo: info => {\n    return saveBindLoginInfo(info);\n  },\n  saveBindRegistrationInfo: info => {\n    return saveBindRegistrationInfo(info);\n  },\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BindCreate);\n"],"sourceRoot":""}