{"version":3,"sources":["account/config/const.js","account/routeComponents/ServiceList/index.module.scss","account/routeComponents/ServiceList/index.jsx"],"names":["UNKNOWN","BASIC","PLUS","PREMIUM","BUSINESS","SERVICE_LEVEL_NAME","_SERVICE_LEVEL_NAME","Object","_Users_LiuXiao_workfiled_embedded_web_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","CONNECT_STATUS","NO_PROFILE_NO_OPENAPI","NO_PROFILE_SINGLE_OPENAPI","SINGLE_PROFILE_NO_OPENAPI","SINGLE_PROFILE_SINGLE_OPENAPI_SAME","SINGLE_PROFILE_SINGLE_OPENAPI_DIFFERENT","APP_NAMES","MYYXBJ","MICRO_LIST","module","exports","serviceList","title","block","top","avator","alias","line","label","value","leftBlock","evernote","myyxbj","microlist","detail","name","detailInfo","rightBlock","connectBtn","direct","desc","confirmBtn","ServiceList","state","loading","devices","getServiceList","wechatSessionId","_this","props","history","push","WechatUnificationService","ListUserDevices","then","data","console","log","toObject","setState","userdeviceList","catch","e","warn","confirmCancelConnect","deviceSession","ClyClickCancelAssociate","ClyShowCancelAssociateDialog","confirm","TIP","content","CANCEL_CONNECT_TIP","operates","text","YES","onClick","cancelConnect","NO","main","ClyAssociateClickCancle","_ref","channelid","ClyClickSure","Disconnect","window","wx","closeWindow","error","COMMON_ERROR_TIPS","finally","reconnect","ClyClickAssociate","deviceidentifier","devicedescription","Reconnect","getConnectButton","isconnected","msg","CANCEL_CONNECT","RECONNECT","cb","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","styles","getProperClassname","type","nextProps","this","ClyEnterAuthorizationPage","_this2","_this$state","AUTHORIZE_SERVICES_TITLE","_components_ComponentLoading__WEBPACK_IMPORTED_MODULE_14__","reduce","acc","item","index","_item$devicesessionLi","devicesessionList","iconClass","concat","lines","map","i","lastaccesstime","deviceName","config","channelId","WXACCOUNT","accessTimeFormat","includes","moment","format","key","_Users_LiuXiao_workfiled_embedded_web_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","Component","connect","setWechatJsReady"],"mappings":"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","file":"static/js/ServiceList.df66a7b2.chunk.js","sourcesContent":["export const LOGIN_TYPE = {\n  NORMAL: 2, // 数字与后端定义的保持一致\n  WECHAT: 3,\n};\n\nexport const DEFAULT_NICKNAME = '印象用户';\n\nexport const PLATFORM = {\n  IOS: 'ios',\n  ANDROID: 'android',\n  LIGHTBOX: 'lightbox',\n  WEB: 'web',\n};\n\nexport const WECHAT_BIND_FORCE_SWITCH = {\n  OPEN: '1',\n  CLOSE: '0',\n};\n\nconst SERVICE_LEVEL = {\n  UNKNOWN: 0,\n  BASIC: 1,\n  PLUS: 2,\n  PREMIUM: 3,\n  BUSINESS: 4,\n}\n\nconst { UNKNOWN, BASIC, PLUS, PREMIUM, BUSINESS } = SERVICE_LEVEL;\n\nexport const SERVICE_LEVEL_NAME = {\n  [UNKNOWN]: '未知',\n  [BASIC]: '印象笔记免费帐户',\n  [PLUS]: '印象笔记标准帐户',\n  [PREMIUM]: '印象笔记高级帐户',\n  [BUSINESS]: '印象笔记企业帐户',\n}\n\nexport const CONNECT_STATUS = {\n  NO_PROFILE_NO_OPENAPI: 0,\n  NO_PROFILE_SINGLE_OPENAPI: 1,\n  SINGLE_PROFILE_NO_OPENAPI: 2,\n  SINGLE_PROFILE_SINGLE_OPENAPI_SAME: 3,\n  SINGLE_PROFILE_SINGLE_OPENAPI_DIFFERENT: 4,\n}\n\nexport const APP_NAMES = {\n  MYYXBJ: '我的印象笔记',\n  MICRO_LIST: '微清单',\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"serviceList\":\"ServiceList_serviceList__3yI3_\",\"title\":\"ServiceList_title__1bXN1\",\"block\":\"ServiceList_block__1Z45I\",\"top\":\"ServiceList_top__1skhM\",\"avator\":\"ServiceList_avator__19oI9\",\"alias\":\"ServiceList_alias__1OWdf\",\"line\":\"ServiceList_line__DixiN\",\"label\":\"ServiceList_label__1Z-Gf\",\"value\":\"ServiceList_value__1frm8\",\"leftBlock\":\"ServiceList_leftBlock__1PS2U\",\"evernote\":\"ServiceList_evernote__1PRX3\",\"myyxbj\":\"ServiceList_myyxbj__34z9d\",\"microlist\":\"ServiceList_microlist__1_QQB\",\"detail\":\"ServiceList_detail__3tRKL\",\"name\":\"ServiceList_name__3HL7X\",\"detailInfo\":\"ServiceList_detailInfo__2m0bi\",\"rightBlock\":\"ServiceList_rightBlock__3d7ox\",\"connectBtn\":\"ServiceList_connectBtn__3kNXm\",\"direct\":\"ServiceList_direct__2i3KA\",\"desc\":\"ServiceList_desc__1_r-r\",\"confirmBtn\":\"ServiceList_confirmBtn__3k5eV\"};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport {\n    TIP,\n    CANCEL_CONNECT_TIP,\n    YES,\n    NO,\n    CANCEL_CONNECT,\n    RECONNECT,\n    AUTHORIZE_SERVICES_TITLE,\n    COMMON_ERROR_TIPS,\n    WXACCOUNT,\n} from '../../config/copywriting';\nimport {\n    ClyEnterAuthorizationPage,\n    ClyClickCancelAssociate,\n    ClyShowCancelAssociateDialog,\n    ClyClickSure,\n    ClyAssociateClickCancle,\n    ClyClickAssociate,\n} from '../../countly/countlyPoints';\nimport { APP_NAMES } from '../../config/const';\nimport WechatUnificationService from '../../service/WechatUnificationService';\nimport config from '../../utils/config';\n\nimport ComponentLoading from '../../components/ComponentLoading';\nimport confirm from '../../components/Confirm/Confirm';\n\nimport styles from './index.module.scss';\n\n\nclass ServiceList extends Component {\n\n    state = {\n        loading: true,\n        devices: [\n            // {\n            //     deviceKey: '',\n            //     name: '',\n            //     type: '',\n            //     devicesessionList: {\n            //         consumerKey: '',\n            //         createTime: '',\n            //         lastaccesstime: '',\n            //         appname: '',\n            //         channelid: '',\n            //         deviceidentifier: '',\n            //         devicedescription: '',\n            //         isconnected: true,\n            //     }  \n            // }\n        ]\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { wechatSessionId } = nextProps;\n        this.getServiceList(wechatSessionId);\n    }\n\n    componentDidMount() {\n        const { wechatSessionId } = this.props;\n        this.getServiceList(wechatSessionId);\n        ClyEnterAuthorizationPage();\n    }\n\n    getServiceList = (wechatSessionId) => {\n        if (!wechatSessionId) this.props.history.push('/account-info');\n        if (wechatSessionId) {\n            WechatUnificationService.ListUserDevices(wechatSessionId)\n                .then((data) => {\n                    console.log(data.toObject())\n                    this.setState({\n                        devices: data.toObject().userdeviceList,\n                        loading: false,\n                    });\n                })\n                .catch((e) => {\n                    console.warn(e);\n                });\n        }\n    }\n\n    confirmCancelConnect = (deviceSession) => {\n        ClyClickCancelAssociate();\n        ClyShowCancelAssociateDialog();\n        confirm({\n            title: TIP,\n            content: CANCEL_CONNECT_TIP,\n            operates: [{\n              text: YES,\n              onClick: () => this.cancelConnect(deviceSession),\n            },\n            {\n              text: NO,\n              main: true,\n              onClick: ClyAssociateClickCancle,\n            }]\n          })\n    }\n\n    cancelConnect = ({ channelid }) => {\n        ClyClickSure();\n        const { wechatSessionId } = this.props;\n        WechatUnificationService.Disconnect(wechatSessionId, channelid)\n            .then((data) => {\n                console.log('disconnected')\n                window.wx.closeWindow();\n            })\n            .catch((e) => {\n                console.error(e);\n                confirm({ content: COMMON_ERROR_TIPS });\n            })\n            .finally(() => {\n                \n            })\n    }\n\n    reconnect = (deviceSession) => {\n        ClyClickAssociate();\n        const { channelid, deviceidentifier, devicedescription } = deviceSession;\n        const { wechatSessionId } = this.props;\n        WechatUnificationService.Reconnect(wechatSessionId, channelid, deviceidentifier, devicedescription)\n            .then((data) => {\n                console.log('connected')\n                window.wx.closeWindow();\n            })\n            .catch((e) => {\n                confirm({ content: COMMON_ERROR_TIPS });\n                console.error(e);\n            })\n            .finally(() => {\n\n            })\n    }\n\n    getConnectButton = (deviceSession) => {\n        const { isconnected, channelid } = deviceSession;\n        if (typeof isconnected !== 'boolean' || !channelid) return\n        const msg = isconnected ? CANCEL_CONNECT : RECONNECT;\n        const cb = isconnected ? this.confirmCancelConnect : this.reconnect;\n        return (\n            <div className={styles.rightBlock}>\n                <button className={styles.connectBtn}\n                        onClick={() => cb(deviceSession)}\n                >{msg}</button>\n                <div className={styles.direct}></div>\n            </div>\n        )\n    }\n\n    getProperClassname = (type) => {\n        const { MYYXBJ, MICRO_LIST } = APP_NAMES;\n        switch(type) {\n            case MYYXBJ:\n                return 'myyxbj';\n            case MICRO_LIST:\n                return 'microlist';\n            default:\n                return 'evernote'\n        }\n    }\n\n    render() {\n        const { loading, devices } = this.state;\n        return (\n            <div className={styles.serviceList}>\n                <div className={styles.title}>\n                    <span>{AUTHORIZE_SERVICES_TITLE}</span>\n                </div>\n                {loading && <ComponentLoading />}\n                <div className={styles.block}>\n                    {devices.reduce((acc, item, index) => {\n                        const { name, type, devicesessionList = {} } = item;\n                        const iconClass = `${styles.avator} ${styles[this.getProperClassname(type)]}`; // todo base on type change classname\n                        const lines = devicesessionList.map((line, i) => { // devicesessionList决定了渲染的行数，同一个app有可能有多台设备登陆\n                            const { lastaccesstime, channelid } = line;\n                            const deviceName = channelid === config.channelId ? WXACCOUNT : name; // 根据channelId来判断公众号或者小程序显示的名称\n                            const accessTimeFormat = ![-1, 0].includes(lastaccesstime) && moment(lastaccesstime).format('YYYY年MM月DD日访问过'); // 手动过滤0和-1的情况\n                            return (\n                                <div className={styles.line} key={`${index}-${i}`} >\n                                    <div className={styles.leftBlock}>\n                                        <div className={iconClass}></div>\n                                        <div className={styles.detail}>\n                                            <div className={styles.name}>{type}</div>\n                                            <div className={styles.detailInfo}>{deviceName}</div>\n                                            <div className={styles.detailInfo}>{accessTimeFormat}</div>\n                                        </div>\n                                    </div>\n                                    {this.getConnectButton(line)}\n                                </div>\n                            )\n                        })\n                        return [...acc, ...lines];\n                    }, [])}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        wechatSessionId: state.wechatSessionId,\n        setWechatJsReady: state.setWechatJsReady,\n    };\n};\n  \nexport default connect(\n    mapStateToProps,\n)(ServiceList);\n"],"sourceRoot":""}