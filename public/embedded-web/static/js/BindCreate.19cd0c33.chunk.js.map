{"version":3,"sources":["account/countly/countlyPoints.js","account/components/AgreeClauseToCreate/index.js","account/components/AgreeClauseToCreate/index.module.scss","account/components/BindCreateAccount/index.module.scss","account/components/CreateAccountBasicForm/index.module.scss","account/components/BindSecurityTip/index.module.scss","account/routeComponents/BindCreate/index.module.scss","account/components/BindCreateAccount/index.js","account/components/RegistrationAccountInput/index.js","account/components/RegistrationPasswordInput/index.js","account/components/CreateAccountBasicForm/index.js","account/components/BindSecurityTip/index.js","account/routeComponents/BindCreate/index.js"],"names":["window","cly","eventCategory","eventAction","eventLabel","Countly","q","push","key","segmentation","wxAccountCountly","_window","_len","arguments","length","args","Array","_key","apply","concat","ClyEnterCreateAccountPage","ClyEnterPhoneNumber","ClyGetVercode","ClyEnterVercode","ClyEnterPassword","ClyClickCreateAccount","ClyClickNoVercode","ClyClickBindExisted","ClyEnterBindExistedPage","ClyEnterAccount","ClyEnterExistedPassword","ClyClickContinue","ClyClickForgetPassword","ClyClickCreateNewAccount","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_config_pageUrl__WEBPACK_IMPORTED_MODULE_1__","_config_copywriting__WEBPACK_IMPORTED_MODULE_2__","_utils_copywritingHelper__WEBPACK_IMPORTED_MODULE_3__","_index_module_scss__WEBPACK_IMPORTED_MODULE_4__","_index_module_scss__WEBPACK_IMPORTED_MODULE_4___default","AgreeClauseToCreate","_ref","_ref$copywriting","copywriting","AGREE_CLAUSE_TO_CREATE","a","createElement","className","styles","agreeClauseToCreate","copywritingHelper","map","item","index","clauseLink","href","CLAUSE_OF_SERVICE_URL","target","rel","CLAUSE_OF_PRIVACY_URL","module","exports","bindCreateAccount","vercodeHelpLinkWrapper","hide","bindExistBtn","createAccountBasicForm","inputWrapper","bindSecurityTip","bindCreate","bindPhoneNumberWrapper","bindSecurityTipWrapper","PHONE_NUMBER","ACCOUNT_TYPE_MAP","ERROR","TIP_LEVEL_MAP","ACCOUNT","INPUT_TYPE_MAP","WECHAT_BIND","ACCOUNT_CREATE_PURPOSE","BindCreateAccount","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","redirectToExist","history","state","requesting","goToBind","bind","assertThisInitialized","verifyResponseContent","_this2","_this$props","createAccount","updateVerifyInfo","wechatSessionId","setState","then","account","password","post","VERIFY_CREDENTIAL","identity","needSignature","data","success","code","getValue","authToken","confirm","content","COMMON_ERROR_TIPS","Promise","reject","BIND_USER_BY_AUTH_TOKEN","sessionId","INVALID_WECHAT_SESSION","tipLevel","verifyTip","ACCOUNT_ALREADY_BIND","WECHAT_ALREADY_BIND","_ref2","hpts","hsHash","loginAfterBind","action","LOGIN_URL","catch","err","console","log","finally","_this$props2","countStatus","accountType","_react_16_8_5_react_default","BasicButton","text","CREATE_ACCOUNT_TO_BIND","onClick","loading","CanNotGetVercode","accountCreatePurpose","Separator","BIND_WITH_ALREADY_EXISTED_ACCOUNT","buttonWrapperClass","Component","withRouter","connect","EMAIL","DEFAULT","WARNING","AccountInput","placeHolder","onFocus","onChange","setPlaceHolderText","nextProps","inputType","resetInput","ev","value","INPUT_EMAIL","INPUT_PHONE_NUMBER","params","promise","phoneNumberConflictTip","twoFactorAccountHooks","phoneNumberConflictHooks","phoneNumberInvalidHooks","phoneNumberExistedHooks","isPhoneNumber","SIMPLE_PHONE_REG","test","INVALID_PHONE_NUMBER","Error","username","checkUsername","email","checkEmail","get","REGISTRATION_CHECK","isValidPhoneNumber","message","isTwoFactorInUse","VIRTUAL_PHONENUMBER_CODE","TWO_FACTOR_VERIFY_PHONE_NUMBER","status","type","PHONE_NUMBER_REGISTER_ALREADY","EMAIL_REGISTER_ALREADY","INVALID_EMAIL","INFO_INCOMPELETE","_this$state","_this$props3","customTip","onBlur","accountInput","BasicInput","useDefaultTip","defaultProps","PASSWORD","PasswordInput","manual","verifyInput","_this3","PASSWORD_FORMAT_TIPS","PASSWORD_REGEX","WEAK_PASSWORD_TIPS","resolve","PASSWORD_HAS_INVALID_SYMBOL","passwordInput","SET_PASSWORD_TIPS","VERCODE","INPUT_DEFAULT","withCreateAcccountBasicForm","WrappedComponent","CreateAccountBasicForm","_Component","smsSessionId","accountTipLevel","accountVerifyTip","passwordTipLevel","passwordVerifyTip","vercodeTipLevel","vercodeVerifyTip","verifyAccountAndPassword","updateSmsSessionId","updateCountState","inherits","createClass","jsCookie","all","refs","slicedToArray","vercodeInput","_ref3","_ref4","_ref4$","vercode","set","expires","remove","saveAccountForSmsHelpPage","_ref5","_this$setState","verifyTipKey","tipLevelKey","defineProperty","_account","_password","verifyAll","_ref6","otp","phoneNumber","createPhoneNumber","createNoUsername","CREATE_USER","ts","tsh","errorCode","OTP_INTERGRITY_CHECK","ERROR_CODE_VALUE_NOT_PRESENT","INVALID_VERIFICATION_CODE","ERROR_CODE_VALUE_DAES_NOT_MATCH","ERROR_CODE_PASSWORD_TOO_WEAK","PASSWORD_IS_TOO_SIMPLE","REGISTRATION_EMAIL_INVALID","vercodeTimeRemain","onAccountInputChange","onPasswordInputChange","onVercodeTimeChange","otherProps","objectWithoutProperties","allData","objectSpread","RegistrationAccountInput","ref","VercodeInput","verify","getVercodeHooks","RegistrationPasswordInput","assign","BindSecurityTip","BIND_SECURITY_TIP","EnhancedBindCreatePhoneNumber","EnhancedBindCreateEmail","BindCreate","_saveBindLoginInfo","saveBindLoginInfo","USE_PHONE_NUM_TO_LOGIN","operates","CANCEL","CONFIRM","main","vercodeTimeRemainToSave","vercodeTimeRemainToGet","redirectHandler","_this$props$bindRegis","bindRegistrationInfo","vercodeTimeStopTimeStamp","nowTimeStamp","Date","now","nowVercodeTimeRemain","Math","ceil","_saveBindRegistrationInfo","saveBindRegistrationInfo","time","_this$state2","components_BindSecurityTip","PHONE_NUM_USED_TIPS","USE_EMAIL_TO_REGISTE","mapDispatchToProps","info"],"mappings":"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","file":"static/js/BindCreate.19cd0c33.chunk.js","sourcesContent":["window.cly = function(eventCategory, eventAction, eventLabel) {\n    window.Countly.q.push(['add_event',{\n      \"key\": eventCategory,\n      \"segmentation\": {\n        eventAction,\n        eventLabel,\n      }\n    }]);\n}\n\nconst wxAccountCountly = (...args) => window.cly('WX_ACCOUNT_MYYXBJ', ...args);\n\nexport const ClyEnterCreateAccountPage = () => wxAccountCountly('Create_NewAccount_page', 'ShowPage');\nexport const ClyEnterPhoneNumber = () => wxAccountCountly('Create_NewAccount_page', 'Enter_PhoneNum');\nexport const ClyGetVercode = () => wxAccountCountly('Create_NewAccount_page', 'Click_Verify_Code');\nexport const ClyEnterVercode = () => wxAccountCountly('Create_NewAccount_page', 'Enter_Verify_Code');\nexport const ClyEnterPassword = () => wxAccountCountly('Create_NewAccount_page', 'Enter_Password');\nexport const ClyClickCreateAccount = () => wxAccountCountly('Create_NewAccount_page', 'Click_Create_NewAccount');\nexport const ClyClickNoVercode = () => wxAccountCountly('Create_NewAccount_page', 'Click_No_Verify_Code');\nexport const ClyClickBindExisted = () => wxAccountCountly('Create_NewAccount_page', 'Click_Bind_ExistedAccount');\n\nexport const ClyEnterBindExistedPage = () => wxAccountCountly('Bind_ExistedAccount_page', 'ShowPage');\nexport const ClyEnterAccount = () => wxAccountCountly('Bind_ExistedAccount_page', 'Enter_Account');\nexport const ClyEnterExistedPassword = () => wxAccountCountly('Bind_ExistedAccount_page', 'Enter_Password');\nexport const ClyClickContinue = () => wxAccountCountly('Bind_ExistedAccount_page', 'Cllick_Continue');\nexport const ClyClickForgetPassword = () => wxAccountCountly('Bind_ExistedAccount_page', 'Click_Forget_Password');\nexport const ClyClickCreateNewAccount = () => wxAccountCountly('Bind_ExistedAccount_page', 'Click_Create_NewAccount');","import React from 'react';\nimport {\n  CLAUSE_OF_PRIVACY_URL,\n  CLAUSE_OF_SERVICE_URL,\n} from '../../config/pageUrl';\nimport { AGREE_CLAUSE_TO_CREATE } from '../../config/copywriting';\nimport copywritingHelper from '../../utils/copywritingHelper';\n\nimport styles from './index.module.scss';\n\nconst AgreeClauseToCreate = ({copywriting = AGREE_CLAUSE_TO_CREATE}) => (\n  <p className={styles.agreeClauseToCreate}>\n    {copywritingHelper(copywriting).map((item, index) => {\n      if (index === 1) {\n        return (\n          <a\n            className={styles.clauseLink}\n            href={CLAUSE_OF_SERVICE_URL}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            key={index}\n          >\n            {item}\n          </a>\n        );\n      }\n      if (index === 3) {\n        return (\n          <a\n            className={styles.clauseLink}\n            href={CLAUSE_OF_PRIVACY_URL}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            key={index}\n          >\n            {item}\n          </a>\n        );\n      }\n      return item;\n    })}\n  </p>\n);\n\nexport default AgreeClauseToCreate;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"agreeClauseToCreate\":\"AgreeClauseToCreate_agreeClauseToCreate__p9RuQ\",\"clauseLink\":\"AgreeClauseToCreate_clauseLink__2i6b7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bindCreateAccount\":\"BindCreateAccount_bindCreateAccount__2kiQV\",\"vercodeHelpLinkWrapper\":\"BindCreateAccount_vercodeHelpLinkWrapper__x5EVn\",\"hide\":\"BindCreateAccount_hide__3cWgZ\",\"bindExistBtn\":\"BindCreateAccount_bindExistBtn__1NuFI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createAccountBasicForm\":\"CreateAccountBasicForm_createAccountBasicForm__28JHD\",\"inputWrapper\":\"CreateAccountBasicForm_inputWrapper__3aJ-B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bindSecurityTip\":\"BindSecurityTip_bindSecurityTip__bL_Qj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bindCreate\":\"BindCreate_bindCreate__1RAh1\",\"bindPhoneNumberWrapper\":\"BindCreate_bindPhoneNumberWrapper__1UtIq\",\"bindSecurityTipWrapper\":\"BindCreate_bindSecurityTipWrapper__1OjO_\"};","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { post } from 'axios';\nimport { get as getValue } from 'lodash-es';\nimport BasicButton from '../BasicButton';\nimport CanNotGetVercode from '../CanNotGetVercode';\nimport Separator from '../Separator';\nimport confirm from '../../components/Confirm/Confirm';\n\nimport {\n  ACCOUNT_ALREADY_BIND,\n  COMMON_ERROR_TIPS,\n  CREATE_ACCOUNT_TO_BIND,\n  INVALID_WECHAT_SESSION,\n  WECHAT_ALREADY_BIND,\n  BIND_WITH_ALREADY_EXISTED_ACCOUNT,\n} from '../../config/copywriting';\nimport {\n  BIND_USER_BY_AUTH_TOKEN,\n  VERIFY_CREDENTIAL,\n} from '../../config/interfaceUrl';\nimport { LOGIN_URL } from '../../config/pageUrl';\nimport {\n  ACCOUNT_TYPE_MAP,\n  TIP_LEVEL_MAP,\n  INPUT_TYPE_MAP,\n  ACCOUNT_CREATE_PURPOSE,\n} from '../../config/propsPermittedValueMap';\nimport { loginAfterBind } from '../../utils/commonUtils';\nimport {\n  ClyEnterCreateAccountPage,\n  ClyClickCreateAccount,\n  ClyClickNoVercode,\n  ClyClickBindExisted,\n} from '../../countly/countlyPoints';\n\nimport styles from './index.module.scss';\n\nconst { PHONE_NUMBER } = ACCOUNT_TYPE_MAP;\nconst { ERROR } = TIP_LEVEL_MAP;\nconst { ACCOUNT } = INPUT_TYPE_MAP;\nconst { WECHAT_BIND } = ACCOUNT_CREATE_PURPOSE;\n\nclass BindCreateAccount extends Component {\n  static propTypes = {\n    accountType: PropTypes.string.isRequired,\n    countStatus: PropTypes.bool.isRequired,\n    updateVerifyInfo: PropTypes.func.isRequired,\n    createAccount: PropTypes.func.isRequired,\n    wechatSessionId: PropTypes.string.isRequired,\n    history: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      requesting: false,\n    };\n    this.goToBind = this.goToBind.bind(this);\n  }\n\n  componentDidMount() {\n    ClyEnterCreateAccountPage();\n  }\n\n  goToBind() {\n    const redirectTo = '';\n    let verifyResponseContent;\n    const {\n      createAccount,\n      updateVerifyInfo,\n      wechatSessionId,\n      history,\n    } = this.props;\n    this.setState({\n      requesting: true,\n    });\n    ClyClickCreateAccount();\n    createAccount()\n      .then(({ account, password }) => {\n        return post(\n          VERIFY_CREDENTIAL,\n          {\n            identity: account,\n            password,\n          },\n          {\n            needSignature: true,\n          },\n        );\n      })\n      .then(data => {\n        const code = getValue(data, 'data.code');\n        const authToken = getValue(data, 'data.content.authToken');\n        let success;\n        verifyResponseContent = getValue(data, 'data.content');\n        switch (code) {\n          case 200:\n            success = !!authToken;\n            break;\n          default:\n            confirm({ content:COMMON_ERROR_TIPS });\n            success = false;\n        }\n        if (success) {\n          return authToken;\n        }\n        return Promise.reject();\n      })\n      .then(authToken => {\n        return post(\n          BIND_USER_BY_AUTH_TOKEN,\n          {\n            authToken,\n            sessionId: wechatSessionId,\n          },\n          {\n            needSignature: true,\n          },\n        );\n      })\n      .then(data => {\n        const code = getValue(data, 'data.code');\n        let success;\n        switch (code) {\n          case 200:\n            success = true;\n            break;\n          case 404:\n            success = true;\n            confirm({ content: INVALID_WECHAT_SESSION });\n            break;\n          case 423:\n            updateVerifyInfo(ACCOUNT, {\n              tipLevel: ERROR,\n              verifyTip: ACCOUNT_ALREADY_BIND,\n            });\n            success = false;\n            break;\n          case 425:\n            success = false;\n            confirm({ content: WECHAT_ALREADY_BIND });\n            break;\n          default:\n            success = false;\n            confirm({ content: COMMON_ERROR_TIPS });\n        }\n        if (success) {\n          return verifyResponseContent;\n        }\n        return Promise.reject();\n      })\n      .then(({ authToken, hpts, hsHash }) => {\n        loginAfterBind({\n          action: LOGIN_URL,\n          authToken,\n          hpts,\n          hsHash,\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => {\n        if (!redirectTo) {\n          this.setState({\n            requesting: false,\n          });\n        } else {\n          history.push(redirectTo);\n        }\n      });\n  }\n\n  redirectToExist = () => {\n    ClyClickBindExisted();\n    this.props.history.push('/bind-existed');\n  }\n\n  render() {\n    const { countStatus, accountType } = this.props;\n    const { requesting } = this.state;\n    return (\n      <div className={styles.bindCreateAccount}>\n        <BasicButton\n          text={CREATE_ACCOUNT_TO_BIND}\n          onClick={this.goToBind}\n          loading={requesting}\n        />\n        {accountType === PHONE_NUMBER ? (\n          <p\n            className={`${styles.vercodeHelpLinkWrapper} ${\n              countStatus ? '' : styles.hide\n            }`}\n          >\n            <CanNotGetVercode accountCreatePurpose={WECHAT_BIND}\n                              onClick={ClyClickNoVercode}\n            />\n          </p>\n        ) : (\n          ''\n        )}\n        <Separator />\n        <BasicButton\n          text={BIND_WITH_ALREADY_EXISTED_ACCOUNT}\n          buttonWrapperClass={styles.bindExistBtn}\n          onClick={this.redirectToExist}\n          loading={requesting}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    wechatSessionId: state.wechatSessionId,\n  };\n};\nconst mapDispatchToProps = {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  )(BindCreateAccount),\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { get } from 'axios';\nimport { get as getValue } from 'lodash-es';\nimport BasicInput from '../BasicInput';\nimport { REGISTRATION_CHECK } from '../../config/interfaceUrl';\nimport { VIRTUAL_PHONENUMBER_CODE } from '../../config/interfaceErrorCodeMap';\nimport {\n  EMAIL_REGISTER_ALREADY,\n  INPUT_EMAIL,\n  INPUT_PHONE_NUMBER,\n  INVALID_PHONE_NUMBER,\n  INVALID_EMAIL,\n  PHONE_NUMBER_REGISTER_ALREADY,\n  INFO_INCOMPELETE,\n  TWO_FACTOR_VERIFY_PHONE_NUMBER,\n  COMMON_ERROR_TIPS,\n} from '../../config/copywriting';\nimport {\n  ACCOUNT_TYPE_MAP,\n  TIP_LEVEL_MAP,\n  INPUT_TYPE_MAP,\n} from '../../config/propsPermittedValueMap';\nimport { SIMPLE_PHONE_REG } from '../../config/commonRegex';\nimport { transformObjectToArray } from '../../utils/commonUtils';\n\nimport styles from './index.module.scss';\n\nconst ACCOUNT_TYPE_LIST = transformObjectToArray(ACCOUNT_TYPE_MAP);\nconst LEVEL_LIST = transformObjectToArray(TIP_LEVEL_MAP);\nconst INPUT_TYPE_LIST = transformObjectToArray(INPUT_TYPE_MAP);\nconst { PHONE_NUMBER, EMAIL } = ACCOUNT_TYPE_MAP;\nconst { DEFAULT, ERROR, WARNING } = TIP_LEVEL_MAP;\nconst { ACCOUNT } = INPUT_TYPE_MAP;\n\nclass AccountInput extends Component {\n  static propTypes = {\n    account: PropTypes.string,\n    resetInput: PropTypes.bool,\n    accountType: PropTypes.oneOf(ACCOUNT_TYPE_LIST).isRequired,\n    verifyTip: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n    tipLevel: PropTypes.oneOf(LEVEL_LIST),\n    inputType: PropTypes.oneOf(INPUT_TYPE_LIST),\n    phoneNumberConflictTip: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.element,\n      PropTypes.func,\n    ]),\n    onChange: PropTypes.func,\n    twoFactorAccountHooks: PropTypes.func,\n    phoneNumberConflictHooks: PropTypes.func,\n    phoneNumberInvalidHooks: PropTypes.func,\n    phoneNumberExistedHooks: PropTypes.func,\n    placeHolder: PropTypes.string,\n    customTip: PropTypes.bool,\n    onBlur: PropTypes.func,\n  };\n\n  static defaultProps = {\n    account: '',\n    resetInput: false,\n    onChange: () => {},\n    onBlur: () => {},\n    phoneNumberConflictTip: '',\n    twoFactorAccountHooks: () => {},\n    phoneNumberConflictHooks: () => {},\n    phoneNumberInvalidHooks: () => {},\n    phoneNumberExistedHooks: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      tipLevel: DEFAULT,\n      placeHolder: '',\n      verifyTip: '',\n    };\n    this.onFocus = this.onFocus.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setPlaceHolderText();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { verifyTip, tipLevel, inputType, account, resetInput } = nextProps;\n    if (inputType === ACCOUNT) {\n      this.setState({\n        verifyTip,\n        tipLevel,\n      });\n    }\n    if (resetInput) {\n      this.setState({\n        account,\n      });\n    }\n  }\n\n  onFocus() {\n    this.setState({\n      tipLevel: DEFAULT,\n      verifyTip: '',\n    });\n  }\n\n  onChange(ev) {\n    const {\n      target: { value },\n    } = ev;\n    const { onChange } = this.props;\n    this.setState({\n      account: value,\n    });\n    onChange(ev);\n  }\n\n  setPlaceHolderText() {\n    const { accountType, placeHolder } = this.props;\n    let text = '';\n    switch (accountType) {\n      case EMAIL:\n        text = INPUT_EMAIL;\n        break;\n      case PHONE_NUMBER:\n        text = INPUT_PHONE_NUMBER;\n        break;\n      default:\n        text = '';\n    }\n    this.setState({\n      placeHolder: placeHolder || text,\n    });\n  }\n\n  verifyInput() {\n    const { account } = this.state;\n    const {\n      accountType,\n      phoneNumberConflictTip,\n      twoFactorAccountHooks,\n      phoneNumberConflictHooks,\n      phoneNumberInvalidHooks,\n      phoneNumberExistedHooks,\n    } = this.props;\n    const isPhoneNumber = accountType === PHONE_NUMBER;\n    let verifyTip = '';\n    let tipLevel = '';\n    let params;\n    let promise;\n    if (!account) {\n      verifyTip = INFO_INCOMPELETE;\n      tipLevel = ERROR;\n      promise = Promise.reject(new Error(verifyTip));\n    } else if (isPhoneNumber && !SIMPLE_PHONE_REG.test(account)) {\n      verifyTip = INVALID_PHONE_NUMBER;\n      tipLevel = ERROR;\n      phoneNumberInvalidHooks();\n      promise = Promise.reject(new Error(verifyTip));\n    } else {\n      params = isPhoneNumber\n        ? {\n            username: account,\n            checkUsername: '',\n          }\n        : {\n            email: account,\n            checkEmail: '',\n          };\n      promise = get(REGISTRATION_CHECK, {\n        params,\n      })\n        .then(data => {\n          const isValidPhoneNumber = getValue(data, 'data.isValidPhoneNumber');\n          const message = getValue(data, 'data.message');\n          const isTwoFactorInUse = getValue(data, 'data.isTwoFactorInUse');\n          if (\n            isValidPhoneNumber === false ||\n            message === VIRTUAL_PHONENUMBER_CODE\n          ) {\n            verifyTip = INVALID_PHONE_NUMBER;\n            tipLevel = ERROR;\n            phoneNumberInvalidHooks();\n            return Promise.reject(new Error(verifyTip));\n          }\n          if (isTwoFactorInUse) {\n            // 两步验证的手机号，只做提示，不阻断注册流程\n            verifyTip = TWO_FACTOR_VERIFY_PHONE_NUMBER;\n            tipLevel = WARNING;\n            twoFactorAccountHooks();\n          } else {\n            tipLevel = DEFAULT;\n          }\n          return account;\n        })\n        .catch(data => {\n          const status = getValue(data, 'response.status');\n          const type = getValue(data, 'response.data.type');\n          switch (status) {\n            case 409:\n              if (isPhoneNumber && type === 'phoneNumberRegisteredAsUsername') {\n                // window.ga('send','event','account_signup','show_conflict_error','');\n                phoneNumberConflictTip();\n                phoneNumberConflictHooks();\n              } else {\n                verifyTip = isPhoneNumber\n                  ? PHONE_NUMBER_REGISTER_ALREADY\n                  : EMAIL_REGISTER_ALREADY;\n                if (isPhoneNumber) phoneNumberExistedHooks();\n              }\n              break;\n            case 400:\n              verifyTip = isPhoneNumber ? INVALID_PHONE_NUMBER : INVALID_EMAIL;\n              if (isPhoneNumber) phoneNumberInvalidHooks();\n              break;\n            case 412:\n              verifyTip = isPhoneNumber\n                ? PHONE_NUMBER_REGISTER_ALREADY\n                : EMAIL_REGISTER_ALREADY;\n              if (isPhoneNumber) phoneNumberExistedHooks();\n              break;\n            default:\n              verifyTip = verifyTip || COMMON_ERROR_TIPS;\n              break;\n          }\n          tipLevel = ERROR;\n          return Promise.reject(new Error(verifyTip));\n        });\n    }\n    return promise.finally(() => {\n      this.setState({\n        verifyTip,\n        tipLevel,\n      });\n    });\n  }\n\n  render() {\n    const { tipLevel, placeHolder, verifyTip, account } = this.state;\n    const { customTip, onBlur } = this.props;\n    return (\n      <div className={styles.accountInput}>\n        <BasicInput\n          placeHolder={placeHolder}\n          tipLevel={tipLevel}\n          value={account}\n          onFocus={this.onFocus}\n          onChange={this.onChange}\n          useDefaultTip={!customTip}\n          onBlur={onBlur}\n        >\n          {verifyTip}\n        </BasicInput>\n      </div>\n    );\n  }\n}\n\nexport default AccountInput;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport BasicInput from '../BasicInput';\nimport {\n  PASSWORD_FORMAT_TIPS,\n  PASSWORD_HAS_INVALID_SYMBOL,\n  SET_PASSWORD_TIPS,\n  INFO_INCOMPELETE,\n  WEAK_PASSWORD_TIPS,\n} from '../../config/copywriting';\nimport {\n  TIP_LEVEL_MAP,\n  INPUT_TYPE_MAP,\n} from '../../config/propsPermittedValueMap';\nimport { PASSWORD_REGEX } from '../../config/commonRegex';\nimport { transformObjectToArray } from '../../utils/commonUtils';\n\nimport styles from './index.module.scss';\n\nconst { DEFAULT, ERROR, WARNING } = TIP_LEVEL_MAP;\nconst { PASSWORD } = INPUT_TYPE_MAP;\nconst LEVEL_LIST = transformObjectToArray(TIP_LEVEL_MAP);\nconst INPUT_TYPE_LIST = transformObjectToArray(INPUT_TYPE_MAP);\n\nclass PasswordInput extends Component {\n  static propTypes = {\n    password: PropTypes.string,\n    resetInput: PropTypes.bool,\n    verifyTip: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n    tipLevel: PropTypes.oneOf(LEVEL_LIST),\n    inputType: PropTypes.oneOf(INPUT_TYPE_LIST),\n    onChange: PropTypes.func,\n    customTip: PropTypes.bool,\n    manual: PropTypes.bool,\n    onBlur: PropTypes.func,\n  };\n\n  static defaultProps = {\n    password: '',\n    resetInput: false,\n    onChange: () => {},\n    onBlur: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: '',\n      tipLevel: DEFAULT,\n      verifyTip: '',\n    };\n    this.onFocus = this.onFocus.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { verifyTip, tipLevel, inputType, password, resetInput } = nextProps;\n    if (inputType === PASSWORD) {\n      this.setState({\n        verifyTip,\n        tipLevel,\n      });\n    }\n    if (resetInput) {\n      this.setState({\n        password,\n      });\n    }\n  }\n\n  onFocus() {\n    this.setState({\n      tipLevel: DEFAULT,\n      verifyTip: '',\n    });\n  }\n\n  onChange(ev) {\n    const {\n      target: { value },\n    } = ev;\n    const { onChange, customTip, manual } = this.props;\n    console.log(customTip, manual);\n    if (customTip || manual) {\n      this.setState({\n        password: value,\n      });\n    } else {\n      this.setState(\n        {\n          password: value,\n        },\n        () => {\n          this.verifyInput().catch(err => {\n            console.log(err);\n          });\n        },\n      );\n    }\n\n    onChange(ev);\n  }\n\n  verifyInput() {\n    const { password } = this.state;\n    let verifyTip = '';\n    let tipLevel = '';\n    let promise;\n    if (!password) {\n      verifyTip = INFO_INCOMPELETE;\n      tipLevel = ERROR;\n      promise = Promise.reject(new Error(verifyTip));\n    } else if (password.length < 6) {\n      verifyTip = PASSWORD_FORMAT_TIPS;\n      tipLevel = ERROR;\n      promise = Promise.reject(new Error(verifyTip));\n    } else if (!PASSWORD_REGEX.test(password)) {\n      verifyTip = PASSWORD_HAS_INVALID_SYMBOL;\n      tipLevel = ERROR;\n      promise = Promise.reject(new Error(verifyTip));\n    } else if (password.length >= 6 && password.length < 8) {\n      verifyTip = WEAK_PASSWORD_TIPS;\n      tipLevel = WARNING;\n      promise = Promise.resolve(password);\n    } else {\n      tipLevel = DEFAULT;\n      promise = Promise.resolve(password);\n    }\n    return promise.finally(() => {\n      this.setState({\n        verifyTip,\n        tipLevel,\n      });\n    });\n  }\n\n  render() {\n    const { tipLevel, verifyTip, password } = this.state;\n    const { customTip, placeHolder, onBlur } = this.props;\n    return (\n      <div className={styles.passwordInput}>\n        <BasicInput\n          placeHolder={placeHolder || SET_PASSWORD_TIPS}\n          tipLevel={tipLevel}\n          value={password}\n          inputType=\"password\"\n          onFocus={this.onFocus}\n          onChange={this.onChange}\n          useDefaultTip={!customTip}\n          onBlur={onBlur}\n        >\n          {verifyTip}\n        </BasicInput>\n      </div>\n    );\n  }\n}\n\nexport default PasswordInput;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { get } from 'axios';\nimport { get as getValue } from 'lodash-es';\nimport jsCookie from 'js-cookie';\nimport RegistrationAccountInput from '../RegistrationAccountInput';\nimport RegistrationPasswordInput from '../RegistrationPasswordInput';\nimport VercodeInput from '../VercodeInput';\nimport AgreeClauseToCreate from '../AgreeClauseToCreate';\nimport {\n  ACCOUNT_TYPE_MAP,\n  TIP_LEVEL_MAP,\n  INPUT_TYPE_MAP,\n} from '../../config/propsPermittedValueMap';\nimport { CREATE_USER } from '../../config/interfaceUrl';\nimport {\n  ERROR_CODE_PASSWORD_TOO_WEAK,\n  ERROR_CODE_VALUE_DAES_NOT_MATCH,\n  ERROR_CODE_VALUE_NOT_PRESENT,\n  OTP_INTERGRITY_CHECK,\n  REGISTRATION_EMAIL_INVALID,\n} from '../../config/interfaceErrorCodeMap';\nimport {\n  INVALID_VERIFICATION_CODE,\n  PASSWORD_IS_TOO_SIMPLE,\n  INVALID_EMAIL,\n} from '../../config/copywriting';\nimport { transformObjectToArray } from '../../utils/commonUtils';\nimport {\n  ClyEnterPhoneNumber,\n  ClyGetVercode,\n  ClyEnterVercode,\n  ClyEnterPassword,\n} from '../../countly/countlyPoints';\n\nimport styles from './index.module.scss';\n\nconst ACCOUNT_TYPE_LIST = transformObjectToArray(ACCOUNT_TYPE_MAP);\nconst { PHONE_NUMBER } = ACCOUNT_TYPE_MAP;\nconst { DEFAULT, ERROR } = TIP_LEVEL_MAP;\nconst { ACCOUNT, PASSWORD, VERCODE, DEFAULT: INPUT_DEFAULT } = INPUT_TYPE_MAP;\n\nconst withCreateAcccountBasicForm = WrappedComponent => {\n  class CreateAccountBasicForm extends Component {\n    static propTypes = {\n      accountType: PropTypes.oneOf(ACCOUNT_TYPE_LIST).isRequired,\n      phoneNumberConflictTip: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.element,\n        PropTypes.func,\n      ]),\n      account: PropTypes.string,\n      password: PropTypes.string,\n      resetInput: PropTypes.bool,\n      vercodeTimeRemain: PropTypes.number,\n      onAccountInputChange: PropTypes.func,\n      onPasswordInputChange: PropTypes.func,\n      onVercodeTimeChange: PropTypes.func,\n    };\n\n    static defaultProps = {\n      account: '',\n      password: '',\n      resetInput: false,\n      vercodeTimeRemain: 0,\n      phoneNumberConflictTip: '',\n      onAccountInputChange: () => {},\n      onPasswordInputChange: () => {},\n      onVercodeTimeChange: () => {},\n    };\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        account: '',\n        smsSessionId: '',\n        countStatus: false,\n        inputType: INPUT_DEFAULT,\n        accountTipLevel: DEFAULT,\n        accountVerifyTip: '',\n        passwordTipLevel: DEFAULT,\n        passwordVerifyTip: '',\n        vercodeTipLevel: DEFAULT,\n        vercodeVerifyTip: '',\n      };\n      this.verifyAccountAndPassword = this.verifyAccountAndPassword.bind(this);\n      this.updateSmsSessionId = this.updateSmsSessionId.bind(this);\n      this.updateCountState = this.updateCountState.bind(this);\n      this.updateVerifyInfo = this.updateVerifyInfo.bind(this);\n      this.createAccount = this.createAccount.bind(this);\n    }\n\n    componentDidMount() {\n      const { accountType } = this.props;\n      if (accountType === PHONE_NUMBER) {\n        const smsSessionId = jsCookie.get('smsSessionId');\n        if (smsSessionId) {\n          this.setState({\n            smsSessionId,\n          });\n        }\n      }\n    }\n\n    verifyAccountAndPassword() {\n      return Promise.all([\n        this.refs.accountInput.verifyInput(),\n        this.refs.passwordInput.verifyInput(),\n      ]).then(([account, password]) => {\n        this.setState({\n          account,\n        });\n        return {\n          account,\n          password,\n        };\n      });\n    }\n\n    verifyAll() {\n      return Promise.all([\n        this.verifyAccountAndPassword(),\n        this.refs.vercodeInput.verifyInput(),\n      ]).then(([{ account, password }, vercode]) => {\n        return {\n          account,\n          password,\n          vercode,\n        };\n      });\n    }\n\n    updateSmsSessionId(smsSessionId) {\n      this.setState({\n        smsSessionId,\n      });\n      jsCookie.set('smsSessionId', smsSessionId, { expires: 1 / 24 / 60 }); // 存一个60秒过期的 sessionId 防止用户在获取验证码后误点刷新页面导致60秒内无法注册\n      if (smsSessionId) {\n        jsCookie.remove('speechSessionId');\n      }\n    }\n\n    updateCountState(countStatus) {\n      this.setState({\n        countStatus,\n      });\n      if (countStatus) {\n        this.saveAccountForSmsHelpPage();\n      }\n    }\n\n    saveAccountForSmsHelpPage() {\n      // window.ga('send','event','account_signup','click_verification_code_help','');\n      const { account } = this.state;\n      jsCookie.set('registrationSpeechAccount', account, {\n        expires: 1 / 24 / 60,\n      });\n    }\n\n    updateVerifyInfo(inputType, { tipLevel, verifyTip }) {\n      const verifyTipKey = `${inputType}VerifyTip`;\n      const tipLevelKey = `${inputType}TipLevel`;\n      this.setState({\n        inputType,\n        [verifyTipKey]: verifyTip,\n        [tipLevelKey]: tipLevel,\n      });\n    }\n\n    createAccount() {\n      const { smsSessionId } = this.state;\n      const { accountType } = this.props;\n      const isPhoneNumber = accountType === PHONE_NUMBER;\n      const verifyAll = isPhoneNumber\n        ? this.verifyAll.bind(this)\n        : this.verifyAccountAndPassword.bind(this);\n      let _account;\n      let _password;\n      return verifyAll()\n        .then(({ account, password, vercode }) => {\n          _account = account;\n          _password = password;\n          let params = {};\n          if (isPhoneNumber) {\n            const speechSessionId = jsCookie.get('speechSessionId');\n            const sessionId = speechSessionId || smsSessionId;\n            params = {\n              otp: vercode,\n              phoneNumber: account,\n              sessionId,\n              createPhoneNumber: '',\n              password,\n              code: 'webclient',\n            };\n          } else {\n            params = {\n              email: account,\n              createNoUsername: '',\n              password,\n              code: 'webclient',\n            };\n          }\n          return get(CREATE_USER, {\n            params,\n          });\n        })\n        .then(data => {\n          const success = getValue(data, 'data.success');\n          const message = isPhoneNumber\n            ? getValue(data, 'data.message')\n            : getValue(data, 'data.errors[0].message');\n          const ts = getValue(data, 'data.ts');\n          const tsh = getValue(data, 'data.tsh');\n          const errorCode = getValue(data, 'data.errors[0].code');\n          if (success) {\n            // const gaLabel = isPhoneNumber ? 'yx_phone' : 'yx_mail';\n            // window.ga('send','event','account_signup','success_yx_signup',gaLabel');\n            return { account: _account, password: _password, ts, tsh };\n          }\n          if (errorCode) {\n            switch (errorCode) {\n              case OTP_INTERGRITY_CHECK:\n              case ERROR_CODE_VALUE_NOT_PRESENT:\n                this.updateVerifyInfo(VERCODE, {\n                  tipLevel: ERROR,\n                  verifyTip: INVALID_VERIFICATION_CODE,\n                });\n                break;\n              case ERROR_CODE_VALUE_DAES_NOT_MATCH:\n                this.updateVerifyInfo(PASSWORD, {\n                  tipLevel: ERROR,\n                  verifyTip: message,\n                });\n                break;\n              case ERROR_CODE_PASSWORD_TOO_WEAK:\n                this.updateVerifyInfo(PASSWORD, {\n                  tipLevel: ERROR,\n                  verifyTip: PASSWORD_IS_TOO_SIMPLE,\n                });\n                break;\n              case REGISTRATION_EMAIL_INVALID:\n                this.updateVerifyInfo(ACCOUNT, {\n                  tipLevel: ERROR,\n                  verifyTip: INVALID_EMAIL,\n                });\n                break;\n              default:\n                break;\n            }\n          }\n          return Promise.reject();\n        })\n        .finally(() => {\n          this.setState({\n            inputType: INPUT_DEFAULT,\n          });\n        });\n    }\n\n    render() {\n      const {\n        accountType,\n        phoneNumberConflictTip,\n        account,\n        password,\n        resetInput,\n        vercodeTimeRemain,\n        onAccountInputChange,\n        onPasswordInputChange,\n        onVercodeTimeChange,\n        phoneNumberExistedHooks,\n        ...otherProps\n      } = this.props;\n      const {\n        countStatus,\n        inputType,\n        accountVerifyTip,\n        accountTipLevel,\n        passwordVerifyTip,\n        passwordTipLevel,\n        vercodeVerifyTip,\n        vercodeTipLevel,\n      } = this.state;\n      const allData = { countStatus, accountType, ...otherProps };\n      return (\n        <div className={styles.createAccountBasicForm}>\n          <div className={styles.inputWrapper}>\n            <RegistrationAccountInput\n              ref=\"accountInput\"\n              accountType={accountType}\n              phoneNumberConflictTip={phoneNumberConflictTip}\n              verifyTip={accountVerifyTip}\n              tipLevel={accountTipLevel}\n              inputType={inputType}\n              account={account}\n              resetInput={resetInput}\n              onChange={onAccountInputChange}\n              onBlur={ClyEnterPhoneNumber}\n              phoneNumberExistedHooks={phoneNumberExistedHooks}\n            />\n          </div>\n          {accountType === PHONE_NUMBER ? (\n            <div className={styles.inputWrapper}>\n              <VercodeInput\n                ref=\"vercodeInput\"\n                verify={this.verifyAccountAndPassword}\n                updateSmsSessionId={this.updateSmsSessionId}\n                updateCountState={this.updateCountState}\n                verifyTip={vercodeVerifyTip}\n                tipLevel={vercodeTipLevel}\n                inputType={inputType}\n                vercodeTimeRemain={vercodeTimeRemain}\n                onVercodeTimeChange={onVercodeTimeChange}\n                getVercodeHooks={ClyGetVercode}\n                onBlur={ClyEnterVercode}\n              />\n            </div>\n          ) : (\n            ''\n          )}\n          <div className={styles.inputWrapper}>\n            <RegistrationPasswordInput\n              ref=\"passwordInput\"\n              verifyTip={passwordVerifyTip}\n              tipLevel={passwordTipLevel}\n              inputType={inputType}\n              password={password}\n              resetInput={resetInput}\n              onChange={onPasswordInputChange}\n              onBlur={ClyEnterPassword}\n            />\n          </div>\n          \n          <AgreeClauseToCreate />\n          <WrappedComponent\n            updateVerifyInfo={this.updateVerifyInfo}\n            createAccount={this.createAccount}\n            {...allData}\n          />\n        </div>\n      );\n    }\n  }\n\n  return CreateAccountBasicForm;\n};\n\nexport default withCreateAcccountBasicForm;\n","import React from 'react';\nimport { BIND_SECURITY_TIP } from '../../config/copywriting';\n\nimport styles from './index.module.scss';\n\nconst BindSecurityTip = () => {\n  return <p className={styles.bindSecurityTip}>{BIND_SECURITY_TIP}</p>;\n};\n\nexport default BindSecurityTip;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport BindCreateAccount from '../../components/BindCreateAccount';\nimport withCreateAcccountBasicForm from '../../components/CreateAccountBasicForm';\nimport BindSecurityTip from '../../components/BindSecurityTip';\nimport { ACCOUNT_TYPE_MAP } from '../../config/propsPermittedValueMap';\nimport {\n  PHONE_NUM_USED_TIPS,\n  USE_EMAIL_TO_REGISTE,\n  CANCEL,\n  USE_PHONE_NUM_TO_LOGIN,\n} from '../../config/copywriting';\nimport { saveBindRegistrationInfo, saveBindLoginInfo } from '../../store/actions';\nimport confirm from '../../components/Confirm/Confirm';\n\nimport styles from './index.module.scss';\nimport { CONFIRM } from '../../../lark/config/copyWriting';\n\nconst { EMAIL, PHONE_NUMBER } = ACCOUNT_TYPE_MAP;\nconst EnhancedBindCreatePhoneNumber = withCreateAcccountBasicForm(\n  BindCreateAccount,\n);\nconst EnhancedBindCreateEmail = withCreateAcccountBasicForm(BindCreateAccount);\n\nclass BindCreate extends Component {\n  static propTypes = {\n    bindRegistrationInfo: PropTypes.object.isRequired,\n    saveBindRegistrationInfo: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      accountType: PHONE_NUMBER,\n      account: '',\n      password: '',\n      resetInput: false,\n      vercodeTimeRemainToSave: 0,\n      vercodeTimeRemainToGet: 0,\n    };\n    this.redirectHandler = this.redirectHandler.bind(this);\n    this.onAccountInputChange = this.onAccountInputChange.bind(this);\n    this.onPasswordInputChange = this.onPasswordInputChange.bind(this);\n    this.onVercodeTimeChange = this.onVercodeTimeChange.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      bindRegistrationInfo: {\n        account,\n        password,\n        vercodeTimeRemain,\n        vercodeTimeStopTimeStamp,\n      },\n    } = this.props;\n    const nowTimeStamp = Date.now();\n    const timeDiff = Math.ceil(\n      (nowTimeStamp - vercodeTimeStopTimeStamp) / 1000,\n    );\n    const nowVercodeTimeRemain = vercodeTimeRemain - timeDiff;\n    this.setState(\n      {\n        account,\n        password,\n        resetInput: true,\n        vercodeTimeRemainToGet:\n          nowVercodeTimeRemain > 0 ? nowVercodeTimeRemain : 0,\n      },\n      () => {\n        this.setState({\n          resetInput: false,\n        });\n      },\n    );\n  }\n\n  componentWillUnmount() {\n    const { account, password, vercodeTimeRemainToSave } = this.state;\n    const { saveBindRegistrationInfo: _saveBindRegistrationInfo } = this.props;\n    _saveBindRegistrationInfo({\n      account,\n      password,\n      vercodeTimeRemain: vercodeTimeRemainToSave,\n      vercodeTimeStopTimeStamp: Date.now(),\n    });\n  }\n\n  onAccountInputChange({ target: { value } }) {\n    this.setState({\n      account: value,\n    });\n  }\n\n  onPasswordInputChange({ target: { value } }) {\n    this.setState({\n      password: value,\n    });\n  }\n\n  onVercodeTimeChange(time) {\n    this.setState({\n      vercodeTimeRemainToSave: time,\n    });\n  }\n\n  redirectHandler() {\n    this.setState({\n      accountType: EMAIL,\n    });\n  }\n\n  phoneNumberExistedHooks = () => {\n    const { account } = this.state;\n    const { saveBindLoginInfo: _saveBindLoginInfo } = this.props;\n\n    confirm({\n      content: USE_PHONE_NUM_TO_LOGIN,\n      operates: [{\n        text: CANCEL,\n      },\n      {\n        text: CONFIRM,\n        main: true,\n        onClick: () => {\n          _saveBindLoginInfo({\n            account,\n          });\n          this.props.history.push('/bind-existed');\n        }\n      }]\n    })\n  }\n\n  render() {\n    const {\n      accountType,\n      account,\n      password,\n      resetInput,\n      vercodeTimeRemainToGet,\n    } = this.state;\n\n    const phoneNumberConflictTip = () => {\n      confirm({\n        content: PHONE_NUM_USED_TIPS,\n        operates: [{\n          text: CANCEL,\n        },\n        {\n          text: USE_EMAIL_TO_REGISTE,\n          main: true,\n          onClick: this.redirectHandler,\n        }]\n      })\n    }\n\n    return (\n      <div className={styles.bindCreate}>\n        {// 为了在切换到邮箱注册时 重置所有状态,需要挂载两个独立的组件,否则需要在组件内做额外的处理\n        accountType === PHONE_NUMBER ? (\n          <div className={styles.bindPhoneNumberWrapper}>\n            <div className={styles.bindSecurityTipWrapper}>\n              <BindSecurityTip />\n            </div>\n            <EnhancedBindCreatePhoneNumber\n              accountType={PHONE_NUMBER}\n              phoneNumberConflictTip={phoneNumberConflictTip}\n              account={account}\n              password={password}\n              vercodeTimeRemain={vercodeTimeRemainToGet}\n              onAccountInputChange={this.onAccountInputChange}\n              onPasswordInputChange={this.onPasswordInputChange}\n              resetInput={resetInput}\n              onVercodeTimeChange={this.onVercodeTimeChange}\n              phoneNumberExistedHooks={this.phoneNumberExistedHooks}\n            />\n          </div>\n        ) : (\n          <EnhancedBindCreateEmail accountType={EMAIL} />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    bindRegistrationInfo: state.bindRegistrationInfo,\n  };\n};\nconst mapDispatchToProps = {\n  saveBindLoginInfo: info => {\n    return saveBindLoginInfo(info);\n  },\n  saveBindRegistrationInfo: info => {\n    return saveBindRegistrationInfo(info);\n  },\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BindCreate);\n"],"sourceRoot":""}